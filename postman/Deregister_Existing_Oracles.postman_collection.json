{
	"info": {
		"_postman_id": "b37fbab7-d2ee-4103-a21b-99dac0336dfa",
		"name": "Deregister_Existing_Oracles",
		"description": "Author: Sridevi Miriyala \nPurpose: Used to remove exiting Oracles from Switch",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Delete Existing Oracles",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const jsonData = pm.response.json();",
							"",
							"jsonData",
							"    .forEach(oracle => {",
							"        setTimeout(function () {",
							"            const delRequest = {",
							"                url: `${pm.environment.get(\"HOST_SWITCH\")}/alsadmin/1.0/oracles/${oracle.oracleId}`,",
							"                header: {",
							"                    \"Authorization\": \"Bearer \" + pm.environment.get(\"HUB_OPERATOR_BEARER_TOKEN\"),",
							"                    \"Date\": pm.environment.get(\"dateHeader\")",
							"                },",
							"                method: 'DELETE'",
							"            };",
							"            pm.sendRequest(delRequest, (error, response) => {",
							"            console.log(error ? error : response.json());",
							"            });",
							"        }, 2000)",
							"    });"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/vnd.interoperability.participants+json;version=1.0",
						"type": "text"
					},
					{
						"key": "Date",
						"value": "{{dateHeader}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{HOST_ACCOUNT_LOOKUP_ADMIN}}/oracles",
					"host": [
						"{{HOST_ACCOUNT_LOOKUP_ADMIN}}"
					],
					"path": [
						"oracles"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"if (pm.environment.get('WS02_OAUTH_ENABLED') === 'true') {",
					"",
					"    // Get Token for Hub Operator",
					"    let authHeader = btoa(`${pm.environment.get('HUB_OPERATOR_CONSUMER_KEY')}:${pm.environment.get('HUB_OPERATOR_CONSUMER_SECRET')}`);",
					"    let getTokenRequest = {",
					"        url: pm.environment.get(\"HOST_SWITCH\") + '/token/',",
					"        method: 'POST',",
					"        header: {",
					"            \"Authorization\": `Basic ${authHeader}`,",
					"            'Content-Type': 'application/x-www-form-urlencoded',",
					"        },",
					"        body: {",
					"            mode: 'urlencoded',",
					"            urlencoded: [",
					"                { key: \"grant_type\", value: \"client_credentials\", disabled: false },",
					"            ]",
					"        }",
					"    };",
					"    pm.sendRequest(getTokenRequest, function (err, response) {",
					"        var jsonData = response.json();",
					"        pm.environment.set('HUB_OPERATOR_BEARER_TOKEN', jsonData.access_token);",
					"    });",
					"",
					"}"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}