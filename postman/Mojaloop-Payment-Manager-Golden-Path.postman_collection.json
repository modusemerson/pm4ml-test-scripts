{
	"info": {
		"_postman_id": "9f26e749-17a0-4351-90aa-e069a82c7b3c",
		"name": "Mojaloop-Payment-Manager-Golden-Path",
		"description": "APIs that provide data to drive user interface elements within the ModusBox Mojaloop Payments Manager product.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "feature-tests",
			"item": [
				{
					"name": "p2p",
					"item": [
						{
							"name": "pm4ml-senderfsp-cbs-sendmoney",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var uuid = require('uuid');",
											"var generatedUUID = uuid.v4();",
											"pm.environment.set('quoteId', generatedUUID);",
											"pm.environment.set('transfer_ID', pm.environment.get('transactionId'));",
											"",
											"",
											"pm.variables.set('transferDate', (new Date()).toUTCString());",
											"",
											"pm.environment.set(\"transferExpiration\",new Date(new Date().getTime() + 600000))",
											"",
											"pm.variables.set('payerName', 'PayerFirst PayerLast');",
											"pm.variables.set('payerMSISDN', '918381008987');",
											"",
											"pm.variables.set('expectedPayeeFirstName', 'GoldenFirst');",
											"pm.variables.set('expectedPayeeLastName', 'GoldenLast');",
											"pm.variables.set('expectedPayeeDOB', '2010-10-10');",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"",
											"//Check that final status is completed",
											"pm.test(`Final status is COMPLETED`, function () {",
											"    pm.expect(jsonData.currentState).to.eql('COMPLETED');",
											"});",
											"",
											"// pm.test(`Payer name is ${pm.variables.get('payerName')}`, function () {",
											"//     pm.expect(jsonData.scenario1.result.from.displayName).to.eql(pm.variables.get('payerName'));",
											"// });",
											"// pm.test(\"payer idType is MSISDN\", function () {",
											"//     pm.expect(jsonData.scenario1.result.from.idType).to.eql(\"MSISDN\");",
											"// });",
											"// pm.test(\"payer idValue is 44123456789\", function () {",
											"//     pm.expect(jsonData.scenario1.result.from.idValue).to.eql(pm.variables.get('payerMSISDN'));",
											"// });",
											"",
											"// pm.test(\"Payee idType is MSISDN\", function () {",
											"//     pm.expect(jsonData.scenario1.result.to.idType).to.eql(\"MSISDN\");",
											"// });",
											"",
											"// pm.test(`Payee idValue is ${pm.variables.get('goldenpayeefspReceiverMSISDN')}`, function () {",
											"//     pm.expect(jsonData.scenario1.result.to.idValue).to.eql(pm.variables.get('goldenpayeefspReceiverMSISDN'));",
											"// });",
											"",
											"// pm.test(\"payee fspId is goldenpayeefsp\", function () {",
											"//     var jsonData = pm.response.json();",
											"//     pm.expect(jsonData.scenario1.result.to.fspId).to.eql(\"goldenpayeefsp\");",
											"// });",
											"",
											"// pm.test(\"payee First name is GoldenFirst\", function () {",
											"//     var jsonData = pm.response.json();",
											"//     pm.expect(jsonData.scenario1.result.to.firstName).to.eql(\"GoldenFirst\");",
											"// });   ",
											"",
											"// pm.test(\"payee Last name is GoldenLast\", function () {",
											"//     var jsonData = pm.response.json();",
											"//     pm.expect(jsonData.scenario1.result.to.lastName).to.eql(\"GoldenLast\");",
											"// });",
											"",
											"// pm.test(\"payee DOB is 2010-10-10\", function () {",
											"//     var jsonData = pm.response.json();",
											"//     pm.expect(jsonData.scenario1.result.to.dateOfBirth).to.eql(\"2010-10-10\");",
											"// });",
											"",
											"// pm.test(\"amount type is SEND\", function () {",
											"//     var jsonData = pm.response.json();",
											"//     pm.expect(jsonData.scenario1.result.amountType).to.eql(\"SEND\");",
											"// });",
											"",
											"// pm.test(`Currency is ${pm.environment.get('currency')}`, function () {",
											"//     var jsonData = pm.response.json();",
											"//     pm.expect(jsonData.scenario1.result.currency).to.eql(pm.environment.get('currency'));",
											"// });",
											"",
											"// pm.test(\"Transfer Amount is 10\", function () {",
											"//     var jsonData = pm.response.json();",
											"//     pm.expect(jsonData.scenario1.result.amount).to.eql(\"10\");",
											"// });",
											"",
											"// pm.test(\"Transaction type is Transfer\", function () {",
											"//     var jsonData = pm.response.json();",
											"//     pm.expect(jsonData.scenario1.result.transactionType).to.eql(\"TRANSFER\");",
											"// });",
											"   ",
											"//    pm.test(\"Initiator type is CONSUMER\", function () {",
											"//     var jsonData = pm.response.json(); ",
											"//     pm.expect(jsonData.scenario1.result.initiatorType).to.eql(\"CONSUMER\");",
											"//  });  ",
											" ",
											"//  pm.test(\"Note is TESTPAYMENT\", function () {",
											"//     var jsonData = pm.response.json();",
											"//     pm.expect(jsonData.scenario1.result.note).to.eql(\"test payment\");",
											"// });",
											"",
											"// // pm.test(`quote Id is ${pm.environment.get('quoteId')} `, function () {",
											"// //     var jsonData = pm.response.json();",
											"    ",
											"// //     pm.expect(jsonData.scenario1.result.quoteResponse.quoteId).to.eql(pm.environment.get('quoteId'));",
											"// // });",
											"",
											"// pm.test(\"transferId is ${pm.environment.get('transferId')\", function () {",
											"//     var jsonData = pm.response.json();",
											"//      pm.expect(jsonData.scenario1.result.transferId).to.eql(jsonData.scenario2.result.transferId);",
											"// });",
											"",
											"// pm.test(\"Home transaction Id is 123ABC\", function () {",
											"//     var jsonData = pm.response.json();",
											"//     pm.expect(jsonData.scenario1.result.homeTransactionId).to.eql(\"123ABC\");",
											"// });",
											"    ",
											"// pm.test(\"Current state on quote is WAITING FOR QUOTE ACCEPTANCE\", function () {",
											"//     var jsonData = pm.response.json();",
											"//   pm.expect(jsonData.scenario1.result.currentState).to.eql(\"WAITING_FOR_QUOTE_ACCEPTANCE\");",
											"// });",
											"",
											"// pm.test(\"Transfer amount is ${pm.environment.get('amount')\", function () {",
											"//     var jsonData = pm.response.json();  ",
											"//   pm.expect(jsonData.scenario1.result.quoteResponse.transferAmount.amount).to.eql(\"10\");",
											"// });",
											"",
											"// pm.test(\"Currency is ${pm.environment.get('currency')\", function () {",
											"//     var jsonData = pm.response.json();  ",
											"//   pm.expect(jsonData.scenario1.result.quoteResponse.transferAmount.currency).to.eql(pm.environment.get('currency'));",
											"// });",
											"  ",
											"// pm.test(\"Quote response expiration is not null\", function () {",
											"// var jsonData = pm.response.json();",
											"// pm.expect(jsonData.scenario1.result.quoteResponse.expiration).not.eql(null);",
											"// });",
											"",
											"// pm.test(\"Qupte request ILP packet is not null\", function () {",
											"// var jsonData = pm.response.json();",
											"// pm.expect(jsonData.scenario1.result.quoteResponse.ilpPacket).not.eql(null);",
											"// });",
											"",
											"// pm.test(\"Quote response condition is not null\", function () {",
											"// var jsonData = pm.response.json();",
											"// pm.expect(jsonData.scenario1.result.quoteResponse.condition).not.eql(null);",
											"// });",
											"  ",
											"// pm.test(\"Payeefsp Fee amount is 0\", function () {",
											"// var jsonData = pm.response.json();",
											"// pm.expect(jsonData.scenario1.result.quoteResponse.payeeFspFee.amount).to.eql('0');",
											"// });",
											"",
											"// pm.test(\"PayeeFSP fee currency is \", function () {",
											"// var jsonData = pm.response.json();",
											"// pm.expect(jsonData.scenario1.result.quoteResponse.payeeFspFee.currency).to.eql(pm.environment.get('currency'));",
											"// });",
											"",
											"// pm.test(\" Payeefsp Commission amount is 0\", function () {",
											"// var jsonData = pm.response.json();",
											"// pm.expect(jsonData.scenario1.result.quoteResponse.payeeFspCommission.amount).to.eql(\"0\");",
											"// });",
											"",
											"// pm.test(`Currency is ${pm.environment.get('currency')}`, function () {",
											"// var jsonData = pm.response.json();",
											"// pm.expect(jsonData.scenario1.result.quoteResponse.payeeFspCommission.currency).to.eql(pm.environment.get('currency'));",
											"// });",
											"  ",
											"// // Scenario 2 tests",
											"",
											"// pm.test(\"payer fsp nameis:${pm.environment.get('payerName')\", function () {",
											"// var jsonData = pm.response.json();",
											"// pm.expect(jsonData.scenario2.result.from.displayName).to.eql(pm.variables.get('payerName'));",
											"// });",
											" ",
											"// pm.test(\"IdType is MSISDN\", function () {",
											"// var jsonData = pm.response.json();",
											"// pm.expect(jsonData.scenario2.result.from.idType).to.eql(\"MSISDN\");",
											"// });",
											"   ",
											"// pm.test(`Payer MSISDN is ${pm.environment.get('payerMSISDN')} `, function () {",
											"// var jsonData = pm.response.json(); ",
											"// pm.expect(jsonData.scenario2.result.from.idValue).to.eql(pm.variables.get('payerMSISDN'));",
											"// });",
											"",
											"// pm.test(\"IdType is MSISDN\", function () {",
											"// var jsonData = pm.response.json();",
											"// pm.expect(jsonData.scenario2.result.to.idType).to.eql(\"MSISDN\");",
											"// });",
											"",
											"// pm.test(`goldenpayeefspReceiverMSISDN Value is ${pm.environment.get('goldenpayeefspReceiverMSISDN')}`, function () {",
											"// var jsonData = pm.response.json();",
											"// pm.expect(jsonData.scenario2.result.to.idValue).to.eql(pm.variables.get('goldenpayeefspReceiverMSISDN'));",
											"// });",
											"",
											"// pm.test(\"fspId is goldenpayeefsp\", function () {",
											"// var jsonData = pm.response.json();",
											"// pm.expect(jsonData.scenario2.result.to.fspId).to.eql(\"goldenpayeefsp\");",
											"// });",
											"",
											"// pm.test(\"First name of the party is GoldenFirst\", function () {",
											"// var jsonData = pm.response.json();",
											"// pm.expect(jsonData.scenario2.result.to.firstName).to.eql(\"GoldenFirst\");",
											"// });",
											"",
											"// pm.test(\"First name of the party is GoldenLast \", function () {",
											"// var jsonData = pm.response.json();",
											"// pm.expect(jsonData.scenario2.result.to.lastName).to.eql(\"GoldenLast\");",
											"// });",
											"",
											"// pm.test(\"Date of Birth of the MSISDN is 2010-10-10 \", function () {",
											"// var jsonData = pm.response.json();",
											"// pm.expect(jsonData.scenario2.result.to.dateOfBirth).to.eql(\"2010-10-10\");",
											"// });",
											"",
											"// pm.test(\"Amount-Type in Quote request is SEND\", function () {",
											"// var jsonData = pm.response.json();",
											"// pm.expect(jsonData.scenario2.result.amountType).to.eql(\"SEND\");",
											"// })",
											"",
											"// pm.test(` Currency in quotes is ${pm.environment.get('currency')}`, function () {",
											"// var jsonData = pm.response.json();",
											"// pm.expect(jsonData.scenario2.result.currency).to.eql(pm.environment.get('currency'));",
											"// });",
											"    ",
											"// pm.test(\" Transfer amount is 10\", function () {",
											"// var jsonData = pm.response.json();",
											"// pm.expect(jsonData.scenario2.result.amount).to.eql(\"10\");",
											"// });",
											"   ",
											"// pm.test(\" Transaction Type is TRANSFER\", function () {",
											"// var jsonData = pm.response.json(); ",
											"// pm.expect(jsonData.scenario2.result.transactionType).to.eql(\"TRANSFER\");",
											"// });",
											"   ",
											"// pm.test(\"Initiator type is CONSUMER\", function () {",
											"// var jsonData = pm.response.json(); ",
											"// pm.expect(jsonData.scenario2.result.initiatorType).to.eql(\"CONSUMER\");",
											"// });",
											"   ",
											"// pm.test(\"note is test payment\", function () {",
											"// var jsonData = pm.response.json(); ",
											"// pm.expect(jsonData.scenario2.result.note).to.eql(\"test payment\");",
											"// });",
											"   ",
											"// pm.test(\"HomeTransactionId is 123ABC\", function () {",
											"// var jsonData = pm.response.json(); ",
											"// pm.expect(jsonData.scenario2.result.homeTransactionId).to.eql(\"123ABC\");",
											"// });",
											"    ",
											"// pm.test(\"Current state of the transacfer is COMPLETED\", function () {",
											"// var jsonData = pm.response.json();",
											"// pm.expect(jsonData.scenario2.result.currentState).to.eql(\"COMPLETED\");",
											"// });",
											"  ",
											"// pm.test(\"Transfer Amount is 10\", function () {",
											"// var jsonData = pm.response.json();",
											"// pm.expect(jsonData.scenario2.result.quoteResponse.transferAmount.amount).to.eql(\"10\");",
											"// });",
											"",
											"// pm.test(\"Response validation\", function () {",
											"// var jsonData = pm.response.json();",
											"// pm.expect(jsonData.scenario2.result.quoteResponse.transferAmount.currency).to.eql(pm.environment.get('currency'));",
											"// });",
											"",
											"// pm.test(\"Quote Expiration is not Null\", function () {",
											"// var jsonData = pm.response.json();",
											"// pm.expect(jsonData.scenario2.result.quoteResponse.expiration).not.eql(null);",
											"// });",
											"",
											"// pm.test(\"Response ilpPacket is not null\", function () {",
											"// var jsonData = pm.response.json();",
											"// pm.expect(jsonData.scenario2.result.quoteResponse.ilpPacket).not.eql(null);",
											"// });",
											"",
											"// pm.test(\"Response condition is not null\", function () {",
											"// var jsonData = pm.response.json();",
											"// pm.expect(jsonData.scenario2.result.quoteResponse.condition).not.eql(null);",
											"// });",
											"",
											"// pm.test(\"PayeeFspFee is 0\", function () {",
											"// var jsonData = pm.response.json();",
											"// pm.expect(jsonData.scenario2.result.quoteResponse.payeeFspFee.amount).to.eql(\"0\");",
											"// });",
											"",
											"// pm.test(`Payeefsp fee currency is ${pm.environment.get('currency')}` , function () {",
											"// var jsonData = pm.response.json();",
											"// pm.expect(jsonData.scenario2.result.quoteResponse.payeeFspFee.currency).to.eql(pm.environment.get('currency'));",
											"// });",
											"",
											"// pm.test(\"Payeefsp commission is 0\", function () {",
											"// var jsonData = pm.response.json();",
											"// pm.expect(jsonData.scenario2.result.quoteResponse.payeeFspCommission.amount).to.eql(\"0\");",
											"// });",
											"",
											"// pm.test(` Transfer currency is ${pm.environment.get('currency')}`, function () {",
											"// var jsonData = pm.response.json();",
											"// pm.expect(jsonData.scenario2.result.quoteResponse.payeeFspCommission.currency).to.eql(pm.environment.get('currency'));",
											"// });",
											"",
											"// pm.test(\"CompletedTimestamp is not empty\", function () {",
											"// var jsonData = pm.response.json();",
											"// pm.expect(jsonData.scenario2.result.fulfil.completedTimestamp).not.eql(null);",
											"// });",
											"",
											"// pm.test(\" transferState is COMMITTED\", function () {",
											"// var jsonData = pm.response.json();",
											"// pm.expect(jsonData.scenario2.result.fulfil.transferState).to.eql(\"COMMITTED\");",
											"// });",
											"",
											"// pm.test(\" Fulfilment is not empty\", function () {",
											"// var jsonData = pm.response.json();",
											"// pm.expect(jsonData.scenario2.result.fulfil.fulfilment).not.eql(null);",
											"",
											"// });",
											"  ",
											"//   //Check Headers for parties endpoint on payee side",
											"//   setTimeout(function () {",
											"//   pm.sendRequest(pm.environment.get(\"GOLDENPAYEEFSP_SDK_INBOUND_URL\")+\"/requests/\"+pm.variables.get(\"goldenpayeefspReceiverMSISDN\"), function (err, response) {",
											"       ",
											"//       if(response.responseSize !== 0) { ",
											"//       //Checking headers",
											"//         var headers = response.json().headers;",
											"//         pm.test(\"On goldenpayeefsp fspiop-source is goldenpayerfsp\", function () {",
											"//             pm.expect(headers['fspiop-source']).to.eql('goldenpayerfsp');",
											"//         });",
											"        ",
											"//         // pm.test(\"goldenpayeefsp fspiop-destination is goldenpayeefsp\", function () {",
											"//         //     pm.expect(headers['fspiop-destination']).to.eql('goldenpayeefsp');",
											"//         // });",
											"        ",
											"//         pm.test(\"On goldenpayeefsp content-type should be application/vnd.interoperability.parties+json;version=1.0\", function () {",
											"//             pm.expect(headers['content-type']).to.eql('application/vnd.interoperability.parties+json;version=1.0');",
											"//         });",
											"        ",
											"//         pm.test(\"On goldenpayeefsp accept should be application/vnd.interoperability.parties+json;version=1.0\", function () {",
											"//             pm.expect(headers['accept']).to.eql('application/vnd.interoperability.parties+json;version=1.0');",
											"//         });",
											"        ",
											"//         pm.test(\"On goldenpayeefsp date cannot be null\", function () {",
											"//             pm.expect(headers['date']).to.not.eql(undefined);",
											"//         });",
											"        ",
											"//       } else {",
											"//           pm.test(\"Parties FAILED - payeeFSP\", function () {",
											"//             throw new Error('Did not receive response');",
											"//           });",
											"           ",
											"//       }",
											"      ",
											"//     });",
											"// }, 100)",
											"",
											"// //Check Headers and data for parties endpoint on payer side",
											"// setTimeout(function () {",
											"//   pm.sendRequest(pm.environment.get(\"GOLDENPAYERFSP_SDK_INBOUND_URL\")+\"/callbacks/\"+pm.variables.get(\"goldenpayeefspReceiverMSISDN\"), function (err, response) {",
											"       ",
											"//       if(response.responseSize !== 0) { ",
											"//       //Checking headers",
											"//         var headers = response.json().headers;",
											"//         pm.test(\"On payerfsp fspiop-source is goldenpayeefsp\", function () {",
											"//             pm.expect(headers['fspiop-source']).to.eql('goldenpayeefsp');",
											"//         });",
											"        ",
											"//         pm.test(\"On payerfsp fspiop-destination is goldenpayerfsp\", function () {",
											"//             pm.expect(headers['fspiop-destination']).to.eql('goldenpayerfsp');",
											"//         });",
											"        ",
											"//         pm.test(\"On payerfsp content-type should be application/vnd.interoperability.parties+json;version=1.0\", function () {",
											"//             pm.expect(headers['content-type']).to.eql('application/vnd.interoperability.parties+json;version=1.0');",
											"//         });",
											"        ",
											"//         pm.test(\"payerfsp accept is empty\", function () {",
											"//             pm.expect(headers['accept']).to.eql(undefined);",
											"//         });",
											"        ",
											"//         //Validate protected header inside Signature",
											"//         var {signature,protectedHeader} = JSON.parse(headers['fspiop-signature'])",
											"//         var decodedProtectedHeaders = JSON.parse(atob(protectedHeader))",
											"//         console.log('decodedProtectedHeaders:',decodedProtectedHeaders)",
											"        ",
											"//         // pm.test(\"FSPIOP-Signature signature is returned\", function () {",
											"//         //     pm.expect(signature).to.eql(pm.environment.get(\"payeefsp-signature\"));",
											"//         // });",
											"        ",
											"//         pm.test(\"FSPIOP-Signature Protected Header alg to be RS256\", function () {",
											"//             pm.expect(decodedProtectedHeaders['alg']).to.eql('RS256');",
											"//         });",
											"//         pm.test(\"FSPIOP-Signature Protected Header FSPIOP-URI to be /parties/MSISDN/\"+pm.environment.get(\"goldenpayeefspReceiverMSISDN\"), function () {",
											"//             pm.expect(decodedProtectedHeaders['FSPIOP-URI']).to.eql('/parties/MSISDN/'+pm.environment.get(\"goldenpayeefspReceiverMSISDN\"));",
											"//         });",
											"        ",
											"",
											"//         pm.test(\"FSPIOP-Signature Protected Header FSPIOP-HTTP-Method to be PUT\", function () {",
											"//             pm.expect(decodedProtectedHeaders['FSPIOP-HTTP-Method']).to.eql('PUT');",
											"//         });",
											"//         pm.test(\"FSPIOP-Signature Protected Header FSPIOP-Source to be goldenpayeefsp\", function () {",
											"//             pm.expect(decodedProtectedHeaders['FSPIOP-Source']).to.eql('goldenpayeefsp');",
											"//         });",
											"//         pm.test(\"FSPIOP-Signature Protected Header FSPIOP-Destination to be goldenpayerfsp\", function () {",
											"//             pm.expect(decodedProtectedHeaders['FSPIOP-Destination']).to.eql('goldenpayerfsp');",
											"//         });",
											"//         pm.test(\"FSPIOP-Signature Protected Header Date is present\", function () {",
											"//             pm.expect(decodedProtectedHeaders['Date']).to.not.eql(undefined);",
											"//         });",
											"       ",
											"//         pm.test(\"payerfsp FSPIOP-URI to be /parties/MSISDN/\"+pm.environment.get(\"goldenpayeefspReceiverMSISDN\"), function () {",
											"//             pm.expect(headers['fspiop-uri']).to.eql('/parties/MSISDN/'+pm.environment.get(\"goldenpayeefspReceiverMSISDN\"));",
											"//         });",
											"        ",
											"//         pm.test(\"payerfsp fspiop-http-method is PUT\", function () {",
											"//             pm.expect(headers['fspiop-http-method']).to.eql('PUT');",
											"//         });",
											"        ",
											"//       //Checking data",
											"//       var jsonData = response.json().data;",
											"//         pm.test(\"Expected partyIdType is MSISDN\", function () {",
											"//           pm.expect(jsonData.party.partyIdInfo.partyIdType).to.eql('MSISDN');",
											"//         });",
											"//         pm.test(\"Expected partyIdentifier is \"+pm.environment.get('goldenpayeefspReceiverMSISDN'), function () {",
											"//           pm.expect(jsonData.party.partyIdInfo.partyIdentifier).to.eql(pm.environment.get('goldenpayeefspReceiverMSISDN'));",
											"//         });",
											"//         pm.test(\"Expected fspId is goldenpayeefsp\", function () {",
											"//           pm.expect(jsonData.party.partyIdInfo.fspId).to.eql('goldenpayeefsp');",
											"//         });",
											"        ",
											"//       pm.test(\"Expected receiver first name is: \"+pm.variables.get(\"expectedPayeeFirstName\"), function () {",
											"//           pm.expect(jsonData.party.personalInfo.complexName.firstName).to.eql(pm.variables.get(\"expectedPayeeFirstName\"));",
											"//         });",
											"//         pm.test(\"Expected receiver last name is: \"+pm.variables.get(\"expectedPayeeLastName\"), function () {",
											"//           pm.expect(jsonData.party.personalInfo.complexName.lastName).to.eql(pm.variables.get(\"expectedPayeeLastName\"));",
											"//         });",
											"//         pm.test(\"Expected receiver DOB: \"+pm.variables.get(\"expectedPayeeDOB\"), function () {",
											"//           pm.expect(jsonData.party.personalInfo.dateOfBirth).to.eql(pm.variables.get(\"expectedPayeeDOB\"));",
											"//         });  ",
											"        ",
											"//       } else {",
											"//           pm.test(\"Parties FAILED - payerFSP\", function () {",
											"//             throw new Error('Did not receive response');",
											"//           });",
											"//         }",
											"//     });",
											"// }, 100)",
											"",
											"// var transferID = pm.response.json().scenario1.result.transferId",
											"// //Check the request that Switch forwards to payeefsp",
											"// setTimeout(function () {",
											"//   pm.sendRequest(pm.environment.get(\"GOLDENPAYEEFSP_SDK_INBOUND_URL\")+\"/requests/\"+transferID, function (err, response) {",
											"//           if(response.responseSize !== 0) {",
											"              ",
											"//               //Check the Headers",
											"//               var headers = response.json().headers;",
											"              ",
											"//                 pm.test(\"On payeefsp fspiop-source is payerfsp\", function () {",
											"//                     pm.expect(headers['fspiop-source']).to.eql('goldenpayerfsp');",
											"//                 });",
											"                ",
											"//                 pm.test(\"On payeefsp fspiop-destination is payeefsp\", function () {",
											"//                     pm.expect(headers['fspiop-destination']).to.eql('goldenpayeefsp');",
											"//                 });",
											"                ",
											"//                 pm.test(\"On payeefsp content-typeis same as sent in the request\", function () {",
											"//                     pm.expect(headers['content-type']).to.eql('application/vnd.interoperability.transfers+json;version=1.0');",
											"//                 });",
											"                ",
											"//                 pm.test(\"On payeefsp accept is same as sent in the request\", function () {",
											"//                     pm.expect(headers['accept']).to.eql('application/vnd.interoperability.transfers+json;version=1.0');",
											"//                 });",
											"                ",
											"//                 pm.test(\"On payeefsp fspiop-http-method is POST\", function () {",
											"//                     pm.expect(headers['fspiop-http-method']).to.eql('POST');",
											"//                 });",
											"                ",
											"//                 pm.test(\"On payeefsp fspiop-uri is /transfers\", function () {",
											"//                     pm.expect(headers['fspiop-uri']).to.eql('/transfers');",
											"//                 });",
											"                ",
											"                ",
											"//                 //Check the data",
											"//                 var jsonData = response.json().data;",
											"//                 pm.test(\"On payeefsp data should have the same transferId as request\", function () {",
											"//                   pm.expect(jsonData.transferId).to.eql(transferID);",
											"//                 });",
											"//                 pm.test(\"On payeefsp data should have the same payerfspId as request\", function () {",
											"//                   pm.expect(jsonData.payerFsp).to.eql('goldenpayerfsp');",
											"//                 });",
											"//                 pm.test(\"On payeefsp data should have the same payeefspId as request\", function () {",
											"//                   pm.expect(jsonData.payeeFsp).to.eql('goldenpayeefsp');",
											"//                 });",
											"//                 pm.test(\"On payeefsp data should have the same amount as request\", function () {",
											"//                   pm.expect(jsonData.amount.amount).to.eql('10');",
											"//                 });",
											"//                 pm.test(\"payeefsp data should have the same currency as request\", function () {",
											"//                   pm.expect(jsonData.amount.currency).to.eql(pm.environment.get(\"currency\"));",
											"//                 });",
											"//                 // pm.test(\"payeefsp data should have the same expiration as request\", function () {",
											"//                 //   pm.expect(jsonData.expiration).to.eql(pm.environment.get(\"transferExpiration\"));",
											"//                 // });",
											"//                 // pm.test(\"payeefsp data should have the same ilpPacket as request\", function () {",
											"//                 //   pm.expect(jsonData.ilpPacket).to.eql(pm.environment.get(\"ilpPacket\"));",
											"//                 // });",
											"//                 // pm.test(\"payeefsp data should have the same condition as request\", function () {",
											"//                 //   pm.expect(jsonData.condition).to.eql(pm.environment.get(\"condition\"));",
											"//                 // });",
											"                ",
											"//           } else {",
											"//               pm.test(\"Transfer FAILED\", function () {",
											"//                 throw new Error('Did not receive response');",
											"//               });",
											"",
											"//           }",
											"//   });",
											"// }, 100)",
											"",
											"// //Check the callback response that Switch forwards to payerfsp",
											"// setTimeout(function () {",
											"//   pm.sendRequest(pm.environment.get(\"GOLDENPAYERFSP_SDK_INBOUND_URL\")+\"/callbacks/\"+transferID, function (err, response) {",
											"//           if(response.responseSize !== 0) {",
											"//             //Checking headers",
											"//             var headers = response.json().headers;",
											"//             pm.test(\"On payerfsp fspiop-source is payeefsp\", function () {",
											"//                 pm.expect(headers['fspiop-source']).to.eql('goldenpayeefsp');",
											"//             });",
											"            ",
											"//             pm.test(\"On payerfsp fspiop-destination is payerfsp\", function () {",
											"//                 pm.expect(headers['fspiop-destination']).to.eql('goldenpayerfsp');",
											"//             });",
											"            ",
											"//             pm.test(\"On payerfsp content-type should be application/vnd.interoperability.transfers+json;version=1.0\", function () {",
											"//                 pm.expect(headers['content-type']).to.eql('application/vnd.interoperability.transfers+json;version=1.0');",
											"//             });",
											"            ",
											"//             pm.test(\"payerfsp accept is empty\", function () {",
											"//                 pm.expect(headers['accept']).to.eql(undefined);",
											"//             });",
											"            ",
											"//             // pm.test(\"fspiop-signature is returned\", function () {",
											"//             //     pm.expect(headers['fspiop-signature']).to.eql(pm.environment.get(\"payeefsp_fspiop_signature\"));",
											"//             // });",
											"           ",
											"            ",
											"//             pm.test(\"payerfsp fspiop-uri includes transfers\", function () {",
											"//                 pm.expect(headers['fspiop-uri']).to.include('/transfers');",
											"//             });",
											"            ",
											"//             pm.test(\"payerfsp fspiop-http-method is PUT\", function () {",
											"//                 pm.expect(headers['fspiop-http-method']).to.eql('PUT');",
											"//             });",
											"            ",
											"//             var jsonData = response.json().data;",
											"//             pm.test(\"Response data does not have transferId\", function () {",
											"//               pm.expect(jsonData.transferId).to.eql(undefined);",
											"//             });",
											"//             pm.test(\"Response status is COMMITTED\", function () {",
											"//                 pm.expect(jsonData.transferState).to.eql('COMMITTED');",
											"//             });",
											"//           } else {",
											"//               pm.test(\"Transfer FAILED\", function () {",
											"//                 throw new Error('Did not receive response');",
											"//               });",
											"",
											"//           }",
											"//   });",
											"// }, 100)",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/vnd.interoperability.transfers+json;version=1",
										"disabled": true
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/vnd.interoperability.transfers+json;version=1.0",
										"disabled": true
									},
									{
										"key": "Date",
										"type": "text",
										"value": "{{transferDate}}",
										"disabled": true
									},
									{
										"key": "FSPIOP-Source",
										"type": "text",
										"value": "{{payerfsp}}",
										"disabled": true
									},
									{
										"key": "FSPIOP-Destination",
										"type": "text",
										"value": "{{payeefsp}}",
										"disabled": true
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"from\": {\n        \"displayName\": \"PayerFirst PayerLast\",\n        \"idType\": \"MSISDN\",\n        \"idValue\": \"{{DFSP1_MSISDN}}\"\n    },\n    \"to\": {\n        \"idType\": \"MSISDN\",\n        \"idValue\": \"{{DFSP2_MSISDN}}\"\n    },\n    \"amountType\": \"SEND\",\n    \"currency\": \"{{currency}}\",\n    \"amount\": \"10\",\n    \"transactionType\": \"TRANSFER\",\n    \"note\": \"test payment\",\n    \"homeTransactionId\": \"{{$guid}}\"\n}"
								},
								"url": {
									"raw": "{{DFSP1_CBS_URL}}/sendmoney",
									"host": [
										"{{DFSP1_CBS_URL}}"
									],
									"path": [
										"sendmoney"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "api-tests",
			"item": [
				{
					"name": "experience-api",
					"item": [
						{
							"name": "batches",
							"item": [
								{
									"name": "{batch Id}",
									"item": [
										{
											"name": "Retrieves a batch",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/batches/:batchId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"batches",
														":batchId"
													],
													"variable": [
														{
															"key": "batchId",
															"value": "<integer>",
															"type": "string",
															"description": "(Required) Numeric ID of the batch to get"
														}
													]
												}
											},
											"response": [
												{
													"name": "successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/batches/:batchId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"batches",
																":batchId"
															],
															"variable": [
																{
																	"key": "batchId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"id\": 97251713,\n \"status\": \"HAS ERRORS\",\n \"transferCount\": -28357562,\n \"transferTotals\": [\n  {\n   \"netValue\": \"0\",\n   \"currency\": \"BND\"\n  },\n  {\n   \"netValue\": \"0\",\n   \"currency\": \"TWD\"\n  }\n ],\n \"errorCount\": -10442361,\n \"startingTimestamp\": \"<string>\",\n \"closingTimestamp\": \"<string>\"\n}"
												}
											]
										},
										{
											"name": "Retrieves transfers for a batch",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/batches/:batchId/transfers",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"batches",
														":batchId",
														"transfers"
													],
													"variable": [
														{
															"key": "batchId",
															"value": "<integer>",
															"type": "string",
															"description": "(Required) Numeric ID of the batch to get"
														}
													]
												}
											},
											"response": [
												{
													"name": "successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/batches/:batchId/transfers",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"batches",
																":batchId",
																"transfers"
															],
															"variable": [
																{
																	"key": "batchId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[\n {\n  \"id\": \"dolor cupidatat\",\n  \"batchId\": 99560215,\n  \"institution\": \"proident enim Ut sit sint\",\n  \"direction\": \"OUTBOUND\",\n  \"currency\": \"SGD\",\n  \"value\": \"1899.4284\",\n  \"type\": \"P2P\",\n  \"status\": \"ERROR\",\n  \"initiatedTimestamp\": \"<string>\"\n },\n {\n  \"id\": \"voluptate ullamco aliquip eiusmod\",\n  \"batchId\": -47730517,\n  \"institution\": \"est ut\",\n  \"direction\": \"OUTBOUND\",\n  \"currency\": \"RWF\",\n  \"value\": \"28967934705214190\",\n  \"type\": \"P2P\",\n  \"status\": \"ERROR\",\n  \"initiatedTimestamp\": \"<string>\"\n }\n]"
												}
											]
										}
									]
								},
								{
									"name": "Retrieves all batches",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/batches?startTimestamp=<string>&endTimestamp=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"batches"
											],
											"query": [
												{
													"key": "startTimestamp",
													"value": "<string>"
												},
												{
													"key": "endTimestamp",
													"value": "<string>"
												}
											]
										}
									},
									"response": [
										{
											"name": "successful operation",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/batches?startTimestamp=<string>&endTimestamp=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"batches"
													],
													"query": [
														{
															"key": "startTimestamp",
															"value": "<string>"
														},
														{
															"key": "endTimestamp",
															"value": "<string>"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n {\n  \"id\": 13358310,\n  \"status\": \"ON TRACK\",\n  \"transferCount\": 2499143,\n  \"transferTotals\": [\n   {\n    \"netValue\": \"0.9\",\n    \"currency\": \"COP\"\n   },\n   {\n    \"netValue\": \"0.09\",\n    \"currency\": \"TTD\"\n   }\n  ],\n  \"errorCount\": -73849577,\n  \"startingTimestamp\": \"<string>\",\n  \"closingTimestamp\": \"<string>\"\n },\n {\n  \"id\": 81777035,\n  \"status\": \"HAS ERRORS\",\n  \"transferCount\": 96543367,\n  \"transferTotals\": [\n   {\n    \"netValue\": \"0.12\",\n    \"currency\": \"LAK\"\n   },\n   {\n    \"netValue\": \"89178155\",\n    \"currency\": \"JPY\"\n   }\n  ],\n  \"errorCount\": 18880364,\n  \"startingTimestamp\": \"<string>\",\n  \"closingTimestamp\": \"<string>\"\n }\n]"
										}
									]
								}
							]
						},
						{
							"name": "environments",
							"item": [
								{
									"name": "{env Id}",
									"item": [
										{
											"name": "dfsp",
											"item": [
												{
													"name": "server Certs",
													"item": [
														{
															"name": "Get DFSP CA",
															"request": {
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/environments/:envId/dfsp/serverCerts",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"environments",
																		":envId",
																		"dfsp",
																		"serverCerts"
																	],
																	"variable": [
																		{
																			"key": "envId",
																			"value": "<integer>",
																			"type": "string",
																			"description": "(Required) ID of environment"
																		}
																	]
																}
															},
															"response": [
																{
																	"name": "successful operation",
																	"originalRequest": {
																		"method": "GET",
																		"header": [],
																		"url": {
																			"raw": "{{baseUrl}}/environments/:envId/dfsp/serverCerts",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"environments",
																				":envId",
																				"dfsp",
																				"serverCerts"
																			],
																			"variable": [
																				{
																					"key": "envId"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n \"rootCertificate\": \"commodo dolor id labore sunt\",\n \"intermediateChain\": \"incididunt laboris non veniam\",\n \"serverCertificate\": \"enim anim deserunt nostrud\",\n \"id\": -85188284,\n \"rootCertificateInfo\": {\n  \"subject\": {\n   \"CN\": \"et enim labori\",\n   \"emailAddress\": \"mollit aute\",\n   \"O\": \"irure veniam Ut\",\n   \"OU\": \"aute laboris eu in\",\n   \"C\": \"nostrud aute Duis\",\n   \"ST\": \"conseq\",\n   \"L\": \"elit aliqua nostrud irure\"\n  },\n  \"issuer\": {\n   \"CN\": \"nisi consectetur culpa aliqua eiusmod\",\n   \"emailAddress\": \"velit\",\n   \"O\": \"non est\",\n   \"OU\": \"ea\",\n   \"C\": \"ex\",\n   \"ST\": \"nisi ut non\",\n   \"L\": \"consectetur aute\"\n  },\n  \"subjectAlternativeNames\": [\n   \"fugiat exercitation ullamco\",\n   \"labore mollit ipsum cupidatat laboris\"\n  ],\n  \"serialNumber\": \"17159976289428250189079625547205715159\",\n  \"notBefore\": \"veniam velit Excepteur\",\n  \"notAfter\": \"labore in laboris sit\",\n  \"signatureAlgorithm\": \"SHA256WithRSA\"\n },\n \"intermediateChainInfo\": [\n  {\n   \"subject\": {\n    \"CN\": \"ut do\",\n    \"emailAddress\": \"in eiusmod\",\n    \"O\": \"cupidatat in\",\n    \"OU\": \"culpa\",\n    \"C\": \"cillum proident anim\",\n    \"ST\": \"dolore Lorem quis mollit minim\",\n    \"L\": \"anim ipsu\"\n   },\n   \"issuer\": {\n    \"CN\": \"officia qui\",\n    \"emailAddress\": \"aute\",\n    \"O\": \"anim\",\n    \"OU\": \"ullamco pariatur qui magna non\",\n    \"C\": \"anim exercitation fugiat commodo\",\n    \"ST\": \"veniam consequat dolor Lorem\",\n    \"L\": \"amet ut est deserunt\"\n   },\n   \"subjectAlternativeNames\": [\n    \"dolor nisi mollit consequat sint\",\n    \"labore esse fugiat sit dolor\"\n   ],\n   \"serialNumber\": \"17159976289428250189079625547205715159\",\n   \"notBefore\": \"non id\",\n   \"notAfter\": \"laboris in magna\",\n   \"signatureAlgorithm\": \"SHA256WithRSA\"\n  },\n  {\n   \"subject\": {\n    \"CN\": \"consequat Duis\",\n    \"emailAddress\": \"dolore ipsum labore officia\",\n    \"O\": \"adipisicing est\",\n    \"OU\": \"cupidatat\",\n    \"C\": \"ullamco tempor\",\n    \"ST\": \"ullamco pariatur adipi\",\n    \"L\": \"id sunt veniam in\"\n   },\n   \"issuer\": {\n    \"CN\": \"dolor Excepteur laborum ad\",\n    \"emailAddress\": \"qui aliqua incididunt ut nisi\",\n    \"O\": \"id incididunt Ut qui\",\n    \"OU\": \"eiusmod pariatur\",\n    \"C\": \"elit occaecat\",\n    \"ST\": \"laboris dolor eu\",\n    \"L\": \"sit Excepteur\"\n   },\n   \"subjectAlternativeNames\": [\n    \"sed Ut dolore id\",\n    \"enim cupidatat\"\n   ],\n   \"serialNumber\": \"17159976289428250189079625547205715159\",\n   \"notBefore\": \"sed minim officia\",\n   \"notAfter\": \"do reprehenderit\",\n   \"signatureAlgorithm\": \"SHA256WithRSA\"\n  }\n ],\n \"serverCertificateInfo\": {\n  \"subject\": {\n   \"CN\": \"eu dolor eiusmod \",\n   \"emailAddress\": \"anim minim\",\n   \"O\": \"culpa consequat deserunt\",\n   \"OU\": \"et irure labore fugiat\",\n   \"C\": \"minim aliqua veniam fugiat\",\n   \"ST\": \"ipsum cupidatat dolor non\",\n   \"L\": \"ex ipsum cupidatat laborum\"\n  },\n  \"issuer\": {\n   \"CN\": \"ad commodo adipisicing fugiat incididunt\",\n   \"emailAddress\": \"irure aute tempor\",\n   \"O\": \"dolore tempor\",\n   \"OU\": \"proident\",\n   \"C\": \"officia est ex enim in\",\n   \"ST\": \"nulla amet dolore\",\n   \"L\": \"eu quis\"\n  },\n  \"subjectAlternativeNames\": [\n   \"fugiat sunt minim mollit sint\",\n   \"labore non\"\n  ],\n  \"serialNumber\": \"17159976289428250189079625547205715159\",\n  \"notBefore\": \"Duis cillum\",\n  \"notAfter\": \"veniam\",\n  \"signatureAlgorithm\": \"SHA256WithRSA\"\n },\n \"validations\": [\n  {\n   \"validationCode\": \"CSR_SIGNATURE_ALGORITHM\",\n   \"performed\": true,\n   \"result\": \"NOT_AVAILABLE\",\n   \"message\": \"ad proident pariatur\",\n   \"messageTemplate\": \"reprehenderit ni\",\n   \"data\": {},\n   \"details\": \"amet laborum dolore aliquip aute\"\n  },\n  {\n   \"validationCode\": \"CSR_CERT_PUBLIC_PRIVATE_KEY_MATCH\",\n   \"performed\": false,\n   \"result\": \"NOT_AVAILABLE\",\n   \"message\": \"in culpa amet dolor dolore\",\n   \"messageTemplate\": \"occaecat magna aliquip Ut cillum\",\n   \"data\": {},\n   \"details\": \"e\"\n  }\n ],\n \"validationState\": \"VALID\",\n \"state\": true\n}"
																}
															]
														},
														{
															"name": "post server certificate",
															"request": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n    \"rootCertificate\": \"<string>\",\n    \"intermediateChain\": \"<string>\",\n    \"serverCertificate\": \"<string>\"\n}"
																},
																"url": {
																	"raw": "{{baseUrl}}/environments/:envId/dfsp/serverCerts",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"environments",
																		":envId",
																		"dfsp",
																		"serverCerts"
																	],
																	"variable": [
																		{
																			"key": "envId",
																			"value": "<integer>",
																			"type": "string",
																			"description": "(Required) ID of environment"
																		}
																	]
																},
																"description": "TBD"
															},
															"response": [
																{
																	"name": "successful operation",
																	"originalRequest": {
																		"method": "POST",
																		"header": [],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n    \"rootCertificate\": \"<string>\",\n    \"intermediateChain\": \"<string>\",\n    \"serverCertificate\": \"<string>\"\n}"
																		},
																		"url": {
																			"raw": "{{baseUrl}}/environments/:envId/dfsp/serverCerts",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"environments",
																				":envId",
																				"dfsp",
																				"serverCerts"
																			],
																			"variable": [
																				{
																					"key": "envId"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n \"rootCertificate\": \"<string>\",\n \"intermediateChain\": \"<string>\",\n \"serverCertificate\": \"<string>\",\n \"id\": 3336694,\n \"rootCertificateInfo\": {\n  \"subject\": {\n   \"CN\": \"consequat aute\",\n   \"emailAddress\": \"eu anim ex\",\n   \"O\": \"ad laboris in sint adipisicing\",\n   \"OU\": \"ut officia\",\n   \"C\": \"dolore adipisicing\",\n   \"ST\": \"consectetur nostrud qui dolor\",\n   \"L\": \"nisi amet sed Lorem\"\n  },\n  \"issuer\": {\n   \"CN\": \"ad\",\n   \"emailAddress\": \"quis deserunt consequat\",\n   \"O\": \"officia est enim sit\",\n   \"OU\": \"labore id in et ex\",\n   \"C\": \"nulla velit enim\",\n   \"ST\": \"nisi eu\",\n   \"L\": \"fugiat id\"\n  },\n  \"subjectAlternativeNames\": [\n   \"ad nostr\",\n   \"esse consectetur\"\n  ],\n  \"serialNumber\": \"17159976289428250189079625547205715159\",\n  \"notBefore\": \"amet anim reprehenderit\",\n  \"notAfter\": \"nisi nulla aute\",\n  \"signatureAlgorithm\": \"SHA256WithRSA\"\n },\n \"intermediateChainInfo\": [\n  {\n   \"subject\": {\n    \"CN\": \"tempor ea do officia\",\n    \"emailAddress\": \"occaecat sit d\",\n    \"O\": \"in dolore\",\n    \"OU\": \"aliquip aute\",\n    \"C\": \"in laboris exercitation\",\n    \"ST\": \"labore Ut\",\n    \"L\": \"nisi labore tempor\"\n   },\n   \"issuer\": {\n    \"CN\": \"commodo sun\",\n    \"emailAddress\": \"magna aute ipsum reprehenderit\",\n    \"O\": \"Ut\",\n    \"OU\": \"eiusmod elit aliquip est\",\n    \"C\": \"in qui \",\n    \"ST\": \"consectetur in mollit voluptate\",\n    \"L\": \"commodo nulla\"\n   },\n   \"subjectAlternativeNames\": [\n    \"exercitation dolor aliqua\",\n    \"Excepteur labore pariatur\"\n   ],\n   \"serialNumber\": \"17159976289428250189079625547205715159\",\n   \"notBefore\": \"irure tempor esse dolore\",\n   \"notAfter\": \"veniam dolore magna in\",\n   \"signatureAlgorithm\": \"SHA256WithRSA\"\n  },\n  {\n   \"subject\": {\n    \"CN\": \"fugiat ex\",\n    \"emailAddress\": \"reprehenderit sed laborum Duis\",\n    \"O\": \"eiusmod ipsum\",\n    \"OU\": \"ut ad cupidatat deserunt ea\",\n    \"C\": \"est sunt dolor laboris\",\n    \"ST\": \"elit aliquip\",\n    \"L\": \"minim Excepteur esse\"\n   },\n   \"issuer\": {\n    \"CN\": \"cillum consequat\",\n    \"emailAddress\": \"enim labore\",\n    \"O\": \"qui pariatur id\",\n    \"OU\": \"Duis \",\n    \"C\": \"dolor id in\",\n    \"ST\": \"dolor\",\n    \"L\": \"labore laborum Ut nostrud\"\n   },\n   \"subjectAlternativeNames\": [\n    \"\",\n    \"sunt irure\"\n   ],\n   \"serialNumber\": \"17159976289428250189079625547205715159\",\n   \"notBefore\": \"in elit\",\n   \"notAfter\": \"eu dolor sit\",\n   \"signatureAlgorithm\": \"SHA256WithRSA\"\n  }\n ],\n \"serverCertificateInfo\": {\n  \"subject\": {\n   \"CN\": \"dolore irure\",\n   \"emailAddress\": \"nos\",\n   \"O\": \"pariatur \",\n   \"OU\": \"cillum dolor id non ad\",\n   \"C\": \"tempor sunt id proident\",\n   \"ST\": \"qui pro\",\n   \"L\": \"amet in ullamco do\"\n  },\n  \"issuer\": {\n   \"CN\": \"Lorem esse\",\n   \"emailAddress\": \"proident sunt Excepteur\",\n   \"O\": \"in\",\n   \"OU\": \"amet magna in\",\n   \"C\": \"ipsum aliqua\",\n   \"ST\": \"magna sed\",\n   \"L\": \"voluptate do in eu\"\n  },\n  \"subjectAlternativeNames\": [\n   \"officia in ut\",\n   \"ad \"\n  ],\n  \"serialNumber\": \"17159976289428250189079625547205715159\",\n  \"notBefore\": \"enim est commodo\",\n  \"notAfter\": \"aute culpa commodo et\",\n  \"signatureAlgorithm\": \"SHA256WithRSA\"\n },\n \"validations\": [\n  {\n   \"validationCode\": \"CA_CERTIFICATE_USAGE\",\n   \"performed\": true,\n   \"result\": \"INVALID\",\n   \"message\": \"Lorem consequat\",\n   \"messageTemplate\": \"veniam sunt\",\n   \"data\": {},\n   \"details\": \"in\"\n  },\n  {\n   \"validationCode\": \"CSR_CERT_SAME_PUBLIC_KEY\",\n   \"performed\": true,\n   \"result\": \"INVALID\",\n   \"message\": \"cillum Excepteur\",\n   \"messageTemplate\": \"incididunt Excepteur non\",\n   \"data\": {},\n   \"details\": \"ut sit\"\n  }\n ],\n \"validationState\": \"VALID\",\n \"state\": false\n}"
																}
															]
														}
													]
												},
												{
													"name": "jwscerts",
													"item": [
														{
															"name": "get jws server certs",
															"request": {
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/environments/:envId/dfsp/jwscerts",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"environments",
																		":envId",
																		"dfsp",
																		"jwscerts"
																	],
																	"variable": [
																		{
																			"key": "envId",
																			"value": "<integer>",
																			"type": "string",
																			"description": "(Required) ID of environment"
																		}
																	]
																},
																"description": "TBD"
															},
															"response": [
																{
																	"name": "successful operation",
																	"originalRequest": {
																		"method": "GET",
																		"header": [],
																		"url": {
																			"raw": "{{baseUrl}}/environments/:envId/dfsp/jwscerts",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"environments",
																				":envId",
																				"dfsp",
																				"jwscerts"
																			],
																			"variable": [
																				{
																					"key": "envId"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n \"id\": 71274850,\n \"jwsCertificate\": \"dolo\",\n \"rootCertificate\": \"Lorem laboris\",\n \"intermediateChain\": \"pariatur eiusmod\",\n \"rootCertificateInfo\": {\n  \"subject\": {\n   \"CN\": \"esse Lorem occa\",\n   \"emailAddress\": \"Duis eu nostrud\",\n   \"O\": \"sit\",\n   \"OU\": \"pariatur nisi\",\n   \"C\": \"Excepteur\",\n   \"ST\": \"sit culpa ullamco proident\",\n   \"L\": \"consectetur pariatur dolor\"\n  },\n  \"issuer\": {\n   \"CN\": \"cillum amet dolor occaecat\",\n   \"emailAddress\": \"dolore in sit laboris qui\",\n   \"O\": \"aliqua aliquip\",\n   \"OU\": \"sit aute\",\n   \"C\": \"sit deserunt culpa Lorem\",\n   \"ST\": \"dolore ut mollit\",\n   \"L\": \"elit\"\n  },\n  \"subjectAlternativeNames\": [\n   \"cupidatat ullamco ut magna\",\n   \"aliquip ul\"\n  ],\n  \"serialNumber\": \"17159976289428250189079625547205715159\",\n  \"notBefore\": \"laborum in elit\",\n  \"notAfter\": \"Duis id tempor\",\n  \"signatureAlgorithm\": \"SHA256WithRSA\"\n },\n \"intermediateChainInfo\": [\n  {\n   \"subject\": {\n    \"CN\": \"dolor\",\n    \"emailAddress\": \"Lorem dolore anim\",\n    \"O\": \"enim\",\n    \"OU\": \"deserunt aliquip et est dolore\",\n    \"C\": \"sit laborum minim\",\n    \"ST\": \"mollit nostrud fugiat\",\n    \"L\": \"dolor aute pariatur amet occaecat\"\n   },\n   \"issuer\": {\n    \"CN\": \"nulla enim\",\n    \"emailAddress\": \"proident cillum\",\n    \"O\": \"dolore Lorem quis esse\",\n    \"OU\": \"Excepteur quis eu\",\n    \"C\": \"enim ad\",\n    \"ST\": \"sint consequat\",\n    \"L\": \"non\"\n   },\n   \"subjectAlternativeNames\": [\n    \"qui aliqua sint\",\n    \"sit aliqua\"\n   ],\n   \"serialNumber\": \"17159976289428250189079625547205715159\",\n   \"notBefore\": \"mollit\",\n   \"notAfter\": \"et\",\n   \"signatureAlgorithm\": \"SHA256WithRSA\"\n  },\n  {\n   \"subject\": {\n    \"CN\": \"veniam eiusmod enim Ut\",\n    \"emailAddress\": \"irure sunt\",\n    \"O\": \"anim nostrud\",\n    \"OU\": \"ex velit fugiat in\",\n    \"C\": \"Ut\",\n    \"ST\": \"ex non et eiu\",\n    \"L\": \"nostrud\"\n   },\n   \"issuer\": {\n    \"CN\": \"cupidatat Ut\",\n    \"emailAddress\": \"nulla in\",\n    \"O\": \"dolore dolor veniam\",\n    \"OU\": \"velit ex\",\n    \"C\": \"consectetur pari\",\n    \"ST\": \"culpa\",\n    \"L\": \"Ut tempor\"\n   },\n   \"subjectAlternativeNames\": [\n    \"Duis dolor aliquip minim\",\n    \"elit\"\n   ],\n   \"serialNumber\": \"17159976289428250189079625547205715159\",\n   \"notBefore\": \"dolore ad laboris adipisicing\",\n   \"notAfter\": \"mollit exercitation\",\n   \"signatureAlgorithm\": \"SHA256WithRSA\"\n  }\n ],\n \"jwsCertificateInfo\": {\n  \"subject\": {\n   \"CN\": \"voluptate Duis ut officia quis\",\n   \"emailAddress\": \"nisi culpa\",\n   \"O\": \"enim laboris nostrud\",\n   \"OU\": \"Lorem Duis nisi\",\n   \"C\": \"elit cupidatat enim\",\n   \"ST\": \"in officia voluptate irure eu\",\n   \"L\": \"dolor Duis voluptate aliquip\"\n  },\n  \"issuer\": {\n   \"CN\": \"Lorem sed nostrud non ea\",\n   \"emailAddress\": \"et labore fugiat\",\n   \"O\": \"sunt laborum esse proident irure\",\n   \"OU\": \"anim nostrud\",\n   \"C\": \"dolore proident\",\n   \"ST\": \"deserunt culpa aliqua\",\n   \"L\": \"\"\n  },\n  \"subjectAlternativeNames\": [\n   \"mollit\",\n   \"veniam irure quis in\"\n  ],\n  \"serialNumber\": \"17159976289428250189079625547205715159\",\n  \"notBefore\": \"anim officia in laboris ad\",\n  \"notAfter\": \"aute\",\n  \"signatureAlgorithm\": \"SHA256WithRSA\"\n },\n \"validations\": [\n  {\n   \"validationCode\": \"CERTIFICATE_USAGE_CLIENT\",\n   \"performed\": false,\n   \"result\": \"INVALID\",\n   \"message\": \"dolor qui reprehenderit\",\n   \"messageTemplate\": \"elit dolor aliqua\",\n   \"data\": {},\n   \"details\": \"id nulla\"\n  },\n  {\n   \"validationCode\": \"CA_CERTIFICATE_USAGE\",\n   \"performed\": false,\n   \"result\": \"NOT_AVAILABLE\",\n   \"message\": \"adipisicing non dolore\",\n   \"messageTemplate\": \"ex ullamco tempor\",\n   \"data\": {},\n   \"details\": \"magna incididunt velit anim\"\n  }\n ],\n \"validationState\": \"INVALID\",\n \"dfspId\": \"cillum ut L\"\n}"
																}
															]
														},
														{
															"name": "update JWS certificate",
															"request": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n    \"jwsCertificate\": \"<string>\",\n    \"rootCertificate\": \"<string>\",\n    \"intermediateChain\": \"<string>\"\n}"
																},
																"url": {
																	"raw": "{{baseUrl}}/environments/:envId/dfsp/jwscerts",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"environments",
																		":envId",
																		"dfsp",
																		"jwscerts"
																	],
																	"variable": [
																		{
																			"key": "envId",
																			"value": "<integer>",
																			"type": "string",
																			"description": "(Required) ID of environment"
																		}
																	]
																},
																"description": "TBD"
															},
															"response": [
																{
																	"name": "successful operation",
																	"originalRequest": {
																		"method": "PUT",
																		"header": [],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n    \"jwsCertificate\": \"<string>\",\n    \"rootCertificate\": \"<string>\",\n    \"intermediateChain\": \"<string>\"\n}"
																		},
																		"url": {
																			"raw": "{{baseUrl}}/environments/:envId/dfsp/jwscerts",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"environments",
																				":envId",
																				"dfsp",
																				"jwscerts"
																			],
																			"variable": [
																				{
																					"key": "envId"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n \"id\": -67294999,\n \"jwsCertificate\": \"<string>\",\n \"rootCertificate\": \"<string>\",\n \"intermediateChain\": \"<string>\",\n \"rootCertificateInfo\": {\n  \"subject\": {\n   \"CN\": \"cil\",\n   \"emailAddress\": \"nostrud fugiat officia aute\",\n   \"O\": \"dolore ipsum\",\n   \"OU\": \"minim eu\",\n   \"C\": \"fugiat ullamco ipsum Lorem aliquip\",\n   \"ST\": \"in culpa fugiat\",\n   \"L\": \"ut in\"\n  },\n  \"issuer\": {\n   \"CN\": \"nulla\",\n   \"emailAddress\": \"Ut enim aliqua\",\n   \"O\": \"Lorem velit Duis do\",\n   \"OU\": \"mollit incididunt\",\n   \"C\": \"Excepteur fugiat\",\n   \"ST\": \"in\",\n   \"L\": \"do sit\"\n  },\n  \"subjectAlternativeNames\": [\n   \"anim mollit velit\",\n   \"veniam\"\n  ],\n  \"serialNumber\": \"17159976289428250189079625547205715159\",\n  \"notBefore\": \"Duis minim\",\n  \"notAfter\": \"Ut voluptate\",\n  \"signatureAlgorithm\": \"SHA256WithRSA\"\n },\n \"intermediateChainInfo\": [\n  {\n   \"subject\": {\n    \"CN\": \"consectetur\",\n    \"emailAddress\": \"aliqua minim aliquip\",\n    \"O\": \"et nulla\",\n    \"OU\": \"aliqua nostrud ut est proident\",\n    \"C\": \"in ullamco et\",\n    \"ST\": \"cupidatat ex qui ipsum ut\",\n    \"L\": \"commodo do sint nulla officia\"\n   },\n   \"issuer\": {\n    \"CN\": \"ipsum sunt\",\n    \"emailAddress\": \"nisi quis\",\n    \"O\": \"sunt ut culpa reprehenderit\",\n    \"OU\": \"ipsum in\",\n    \"C\": \"consectetur in\",\n    \"ST\": \"ullamco sunt laboris deserunt\",\n    \"L\": \"sint ut\"\n   },\n   \"subjectAlternativeNames\": [\n    \"sed occaecat dolore sint est\",\n    \"volup\"\n   ],\n   \"serialNumber\": \"17159976289428250189079625547205715159\",\n   \"notBefore\": \"proident \",\n   \"notAfter\": \"sunt laboris Lorem deserunt\",\n   \"signatureAlgorithm\": \"SHA256WithRSA\"\n  },\n  {\n   \"subject\": {\n    \"CN\": \"laboris\",\n    \"emailAddress\": \"elit cillum cupidatat do reprehenderit\",\n    \"O\": \"commodo voluptate ad Ut\",\n    \"OU\": \"ut labore\",\n    \"C\": \"voluptate des\",\n    \"ST\": \"magna sed ut\",\n    \"L\": \"anim in\"\n   },\n   \"issuer\": {\n    \"CN\": \"veniam est laboris aliqua\",\n    \"emailAddress\": \"tempor ipsum et\",\n    \"O\": \"officia quis\",\n    \"OU\": \"et ut reprehenderit esse\",\n    \"C\": \"in anim adipisicing commodo non\",\n    \"ST\": \"eu deserunt cons\",\n    \"L\": \"magna Duis et\"\n   },\n   \"subjectAlternativeNames\": [\n    \"minim\",\n    \"anim occaecat id irure dol\"\n   ],\n   \"serialNumber\": \"17159976289428250189079625547205715159\",\n   \"notBefore\": \"ullamco nulla in aute\",\n   \"notAfter\": \"sit elit enim Dui\",\n   \"signatureAlgorithm\": \"SHA256WithRSA\"\n  }\n ],\n \"jwsCertificateInfo\": {\n  \"subject\": {\n   \"CN\": \"dolor elit\",\n   \"emailAddress\": \"aute eiusmod do\",\n   \"O\": \"eiusmod voluptate irure ut\",\n   \"OU\": \"sint aliqua commodo labore occaecat\",\n   \"C\": \"sint occaecat\",\n   \"ST\": \"culpa\",\n   \"L\": \"sit officia tempor veniam\"\n  },\n  \"issuer\": {\n   \"CN\": \"in aliquip in nostrud do\",\n   \"emailAddress\": \"cupidatat reprehenderit elit\",\n   \"O\": \"ad\",\n   \"OU\": \"ut ut\",\n   \"C\": \"laboris est\",\n   \"ST\": \"est mollit ipsum\",\n   \"L\": \"adipisicing irure pariatur\"\n  },\n  \"subjectAlternativeNames\": [\n   \"ut consequat cillum sunt\",\n   \"mollit\"\n  ],\n  \"serialNumber\": \"17159976289428250189079625547205715159\",\n  \"notBefore\": \"ad proident\",\n  \"notAfter\": \"Ut magna eiusmod occaecat exercitation\",\n  \"signatureAlgorithm\": \"SHA256WithRSA\"\n },\n \"validations\": [\n  {\n   \"validationCode\": \"CERTIFICATE_USAGE_CLIENT\",\n   \"performed\": false,\n   \"result\": \"VALID\",\n   \"message\": \"labore\",\n   \"messageTemplate\": \"est pariatur\",\n   \"data\": {},\n   \"details\": \"nostrud velit laboris\"\n  },\n  {\n   \"validationCode\": \"CSR_CERT_PUBLIC_PRIVATE_KEY_MATCH\",\n   \"performed\": true,\n   \"result\": \"NOT_AVAILABLE\",\n   \"message\": \"ea\",\n   \"messageTemplate\": \"n\",\n   \"data\": {},\n   \"details\": \"esse reprehenderit incididunt\"\n  }\n ],\n \"validationState\": \"VALID\"\n}"
																}
															]
														},
														{
															"name": "delete JWS certificate",
															"request": {
																"method": "DELETE",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/environments/:envId/dfsp/jwscerts",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"environments",
																		":envId",
																		"dfsp",
																		"jwscerts"
																	],
																	"variable": [
																		{
																			"key": "envId",
																			"value": "<integer>",
																			"type": "string",
																			"description": "(Required) ID of environment"
																		}
																	]
																},
																"description": "TBD"
															},
															"response": [
																{
																	"name": "successful operation",
																	"originalRequest": {
																		"method": "DELETE",
																		"header": [],
																		"url": {
																			"raw": "{{baseUrl}}/environments/:envId/dfsp/jwscerts",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"environments",
																				":envId",
																				"dfsp",
																				"jwscerts"
																			],
																			"variable": [
																				{
																					"key": "envId"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n \"id\": -67294999,\n \"jwsCertificate\": \"<string>\",\n \"rootCertificate\": \"<string>\",\n \"intermediateChain\": \"<string>\",\n \"rootCertificateInfo\": {\n  \"subject\": {\n   \"CN\": \"cil\",\n   \"emailAddress\": \"nostrud fugiat officia aute\",\n   \"O\": \"dolore ipsum\",\n   \"OU\": \"minim eu\",\n   \"C\": \"fugiat ullamco ipsum Lorem aliquip\",\n   \"ST\": \"in culpa fugiat\",\n   \"L\": \"ut in\"\n  },\n  \"issuer\": {\n   \"CN\": \"nulla\",\n   \"emailAddress\": \"Ut enim aliqua\",\n   \"O\": \"Lorem velit Duis do\",\n   \"OU\": \"mollit incididunt\",\n   \"C\": \"Excepteur fugiat\",\n   \"ST\": \"in\",\n   \"L\": \"do sit\"\n  },\n  \"subjectAlternativeNames\": [\n   \"anim mollit velit\",\n   \"veniam\"\n  ],\n  \"serialNumber\": \"17159976289428250189079625547205715159\",\n  \"notBefore\": \"Duis minim\",\n  \"notAfter\": \"Ut voluptate\",\n  \"signatureAlgorithm\": \"SHA256WithRSA\"\n },\n \"intermediateChainInfo\": [\n  {\n   \"subject\": {\n    \"CN\": \"consectetur\",\n    \"emailAddress\": \"aliqua minim aliquip\",\n    \"O\": \"et nulla\",\n    \"OU\": \"aliqua nostrud ut est proident\",\n    \"C\": \"in ullamco et\",\n    \"ST\": \"cupidatat ex qui ipsum ut\",\n    \"L\": \"commodo do sint nulla officia\"\n   },\n   \"issuer\": {\n    \"CN\": \"ipsum sunt\",\n    \"emailAddress\": \"nisi quis\",\n    \"O\": \"sunt ut culpa reprehenderit\",\n    \"OU\": \"ipsum in\",\n    \"C\": \"consectetur in\",\n    \"ST\": \"ullamco sunt laboris deserunt\",\n    \"L\": \"sint ut\"\n   },\n   \"subjectAlternativeNames\": [\n    \"sed occaecat dolore sint est\",\n    \"volup\"\n   ],\n   \"serialNumber\": \"17159976289428250189079625547205715159\",\n   \"notBefore\": \"proident \",\n   \"notAfter\": \"sunt laboris Lorem deserunt\",\n   \"signatureAlgorithm\": \"SHA256WithRSA\"\n  },\n  {\n   \"subject\": {\n    \"CN\": \"laboris\",\n    \"emailAddress\": \"elit cillum cupidatat do reprehenderit\",\n    \"O\": \"commodo voluptate ad Ut\",\n    \"OU\": \"ut labore\",\n    \"C\": \"voluptate des\",\n    \"ST\": \"magna sed ut\",\n    \"L\": \"anim in\"\n   },\n   \"issuer\": {\n    \"CN\": \"veniam est laboris aliqua\",\n    \"emailAddress\": \"tempor ipsum et\",\n    \"O\": \"officia quis\",\n    \"OU\": \"et ut reprehenderit esse\",\n    \"C\": \"in anim adipisicing commodo non\",\n    \"ST\": \"eu deserunt cons\",\n    \"L\": \"magna Duis et\"\n   },\n   \"subjectAlternativeNames\": [\n    \"minim\",\n    \"anim occaecat id irure dol\"\n   ],\n   \"serialNumber\": \"17159976289428250189079625547205715159\",\n   \"notBefore\": \"ullamco nulla in aute\",\n   \"notAfter\": \"sit elit enim Dui\",\n   \"signatureAlgorithm\": \"SHA256WithRSA\"\n  }\n ],\n \"jwsCertificateInfo\": {\n  \"subject\": {\n   \"CN\": \"dolor elit\",\n   \"emailAddress\": \"aute eiusmod do\",\n   \"O\": \"eiusmod voluptate irure ut\",\n   \"OU\": \"sint aliqua commodo labore occaecat\",\n   \"C\": \"sint occaecat\",\n   \"ST\": \"culpa\",\n   \"L\": \"sit officia tempor veniam\"\n  },\n  \"issuer\": {\n   \"CN\": \"in aliquip in nostrud do\",\n   \"emailAddress\": \"cupidatat reprehenderit elit\",\n   \"O\": \"ad\",\n   \"OU\": \"ut ut\",\n   \"C\": \"laboris est\",\n   \"ST\": \"est mollit ipsum\",\n   \"L\": \"adipisicing irure pariatur\"\n  },\n  \"subjectAlternativeNames\": [\n   \"ut consequat cillum sunt\",\n   \"mollit\"\n  ],\n  \"serialNumber\": \"17159976289428250189079625547205715159\",\n  \"notBefore\": \"ad proident\",\n  \"notAfter\": \"Ut magna eiusmod occaecat exercitation\",\n  \"signatureAlgorithm\": \"SHA256WithRSA\"\n },\n \"validations\": [\n  {\n   \"validationCode\": \"CERTIFICATE_USAGE_CLIENT\",\n   \"performed\": false,\n   \"result\": \"VALID\",\n   \"message\": \"labore\",\n   \"messageTemplate\": \"est pariatur\",\n   \"data\": {},\n   \"details\": \"nostrud velit laboris\"\n  },\n  {\n   \"validationCode\": \"CSR_CERT_PUBLIC_PRIVATE_KEY_MATCH\",\n   \"performed\": true,\n   \"result\": \"NOT_AVAILABLE\",\n   \"message\": \"ea\",\n   \"messageTemplate\": \"n\",\n   \"data\": {},\n   \"details\": \"esse reprehenderit incididunt\"\n  }\n ],\n \"validationState\": \"VALID\"\n}"
																}
															]
														},
														{
															"name": "create JWS certificate",
															"request": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n    \"jwsCertificate\": \"<string>\",\n    \"rootCertificate\": \"<string>\",\n    \"intermediateChain\": \"<string>\"\n}"
																},
																"url": {
																	"raw": "{{baseUrl}}/environments/:envId/dfsp/jwscerts",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"environments",
																		":envId",
																		"dfsp",
																		"jwscerts"
																	],
																	"variable": [
																		{
																			"key": "envId",
																			"value": "<integer>",
																			"type": "string",
																			"description": "(Required) ID of environment"
																		}
																	]
																},
																"description": "TBD"
															},
															"response": [
																{
																	"name": "successful operation",
																	"originalRequest": {
																		"method": "POST",
																		"header": [],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n    \"jwsCertificate\": \"<string>\",\n    \"rootCertificate\": \"<string>\",\n    \"intermediateChain\": \"<string>\"\n}"
																		},
																		"url": {
																			"raw": "{{baseUrl}}/environments/:envId/dfsp/jwscerts",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"environments",
																				":envId",
																				"dfsp",
																				"jwscerts"
																			],
																			"variable": [
																				{
																					"key": "envId"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n \"id\": -67294999,\n \"jwsCertificate\": \"<string>\",\n \"rootCertificate\": \"<string>\",\n \"intermediateChain\": \"<string>\",\n \"rootCertificateInfo\": {\n  \"subject\": {\n   \"CN\": \"cil\",\n   \"emailAddress\": \"nostrud fugiat officia aute\",\n   \"O\": \"dolore ipsum\",\n   \"OU\": \"minim eu\",\n   \"C\": \"fugiat ullamco ipsum Lorem aliquip\",\n   \"ST\": \"in culpa fugiat\",\n   \"L\": \"ut in\"\n  },\n  \"issuer\": {\n   \"CN\": \"nulla\",\n   \"emailAddress\": \"Ut enim aliqua\",\n   \"O\": \"Lorem velit Duis do\",\n   \"OU\": \"mollit incididunt\",\n   \"C\": \"Excepteur fugiat\",\n   \"ST\": \"in\",\n   \"L\": \"do sit\"\n  },\n  \"subjectAlternativeNames\": [\n   \"anim mollit velit\",\n   \"veniam\"\n  ],\n  \"serialNumber\": \"17159976289428250189079625547205715159\",\n  \"notBefore\": \"Duis minim\",\n  \"notAfter\": \"Ut voluptate\",\n  \"signatureAlgorithm\": \"SHA256WithRSA\"\n },\n \"intermediateChainInfo\": [\n  {\n   \"subject\": {\n    \"CN\": \"consectetur\",\n    \"emailAddress\": \"aliqua minim aliquip\",\n    \"O\": \"et nulla\",\n    \"OU\": \"aliqua nostrud ut est proident\",\n    \"C\": \"in ullamco et\",\n    \"ST\": \"cupidatat ex qui ipsum ut\",\n    \"L\": \"commodo do sint nulla officia\"\n   },\n   \"issuer\": {\n    \"CN\": \"ipsum sunt\",\n    \"emailAddress\": \"nisi quis\",\n    \"O\": \"sunt ut culpa reprehenderit\",\n    \"OU\": \"ipsum in\",\n    \"C\": \"consectetur in\",\n    \"ST\": \"ullamco sunt laboris deserunt\",\n    \"L\": \"sint ut\"\n   },\n   \"subjectAlternativeNames\": [\n    \"sed occaecat dolore sint est\",\n    \"volup\"\n   ],\n   \"serialNumber\": \"17159976289428250189079625547205715159\",\n   \"notBefore\": \"proident \",\n   \"notAfter\": \"sunt laboris Lorem deserunt\",\n   \"signatureAlgorithm\": \"SHA256WithRSA\"\n  },\n  {\n   \"subject\": {\n    \"CN\": \"laboris\",\n    \"emailAddress\": \"elit cillum cupidatat do reprehenderit\",\n    \"O\": \"commodo voluptate ad Ut\",\n    \"OU\": \"ut labore\",\n    \"C\": \"voluptate des\",\n    \"ST\": \"magna sed ut\",\n    \"L\": \"anim in\"\n   },\n   \"issuer\": {\n    \"CN\": \"veniam est laboris aliqua\",\n    \"emailAddress\": \"tempor ipsum et\",\n    \"O\": \"officia quis\",\n    \"OU\": \"et ut reprehenderit esse\",\n    \"C\": \"in anim adipisicing commodo non\",\n    \"ST\": \"eu deserunt cons\",\n    \"L\": \"magna Duis et\"\n   },\n   \"subjectAlternativeNames\": [\n    \"minim\",\n    \"anim occaecat id irure dol\"\n   ],\n   \"serialNumber\": \"17159976289428250189079625547205715159\",\n   \"notBefore\": \"ullamco nulla in aute\",\n   \"notAfter\": \"sit elit enim Dui\",\n   \"signatureAlgorithm\": \"SHA256WithRSA\"\n  }\n ],\n \"jwsCertificateInfo\": {\n  \"subject\": {\n   \"CN\": \"dolor elit\",\n   \"emailAddress\": \"aute eiusmod do\",\n   \"O\": \"eiusmod voluptate irure ut\",\n   \"OU\": \"sint aliqua commodo labore occaecat\",\n   \"C\": \"sint occaecat\",\n   \"ST\": \"culpa\",\n   \"L\": \"sit officia tempor veniam\"\n  },\n  \"issuer\": {\n   \"CN\": \"in aliquip in nostrud do\",\n   \"emailAddress\": \"cupidatat reprehenderit elit\",\n   \"O\": \"ad\",\n   \"OU\": \"ut ut\",\n   \"C\": \"laboris est\",\n   \"ST\": \"est mollit ipsum\",\n   \"L\": \"adipisicing irure pariatur\"\n  },\n  \"subjectAlternativeNames\": [\n   \"ut consequat cillum sunt\",\n   \"mollit\"\n  ],\n  \"serialNumber\": \"17159976289428250189079625547205715159\",\n  \"notBefore\": \"ad proident\",\n  \"notAfter\": \"Ut magna eiusmod occaecat exercitation\",\n  \"signatureAlgorithm\": \"SHA256WithRSA\"\n },\n \"validations\": [\n  {\n   \"validationCode\": \"CERTIFICATE_USAGE_CLIENT\",\n   \"performed\": false,\n   \"result\": \"VALID\",\n   \"message\": \"labore\",\n   \"messageTemplate\": \"est pariatur\",\n   \"data\": {},\n   \"details\": \"nostrud velit laboris\"\n  },\n  {\n   \"validationCode\": \"CSR_CERT_PUBLIC_PRIVATE_KEY_MATCH\",\n   \"performed\": true,\n   \"result\": \"NOT_AVAILABLE\",\n   \"message\": \"ea\",\n   \"messageTemplate\": \"n\",\n   \"data\": {},\n   \"details\": \"esse reprehenderit incididunt\"\n  }\n ],\n \"validationState\": \"VALID\"\n}"
																}
															]
														}
													]
												},
												{
													"name": "endpoints",
													"item": [
														{
															"name": "egress/ips",
															"item": [
																{
																	"name": "{ep Id}",
																	"item": [
																		{
																			"name": "Update egress endpoints for DFSP for type IP",
																			"request": {
																				"method": "PUT",
																				"header": [
																					{
																						"key": "Content-Type",
																						"value": "application/json"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "{\n    \"type\": \"<string>\",\n    \"address\": \"<string>\",\n    \"ports\": [\n        \"<string>\",\n        \"<string>\"\n    ]\n}"
																				},
																				"url": {
																					"raw": "{{baseUrl}}/environments/:envId/dfsp/endpoints/egress/ips/:epId",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"environments",
																						":envId",
																						"dfsp",
																						"endpoints",
																						"egress",
																						"ips",
																						":epId"
																					],
																					"variable": [
																						{
																							"key": "epId",
																							"value": "<integer>",
																							"type": "string",
																							"description": "(Required) ID of endpoint"
																						},
																						{
																							"key": "envId",
																							"value": "<integer>",
																							"type": "string",
																							"description": "(Required) ID of environment"
																						}
																					]
																				}
																			},
																			"response": [
																				{
																					"name": "successful operation",
																					"originalRequest": {
																						"method": "PUT",
																						"header": [],
																						"body": {
																							"mode": "raw",
																							"raw": "{\n    \"type\": \"<string>\",\n    \"address\": \"<string>\",\n    \"ports\": [\n        \"<string>\",\n        \"<string>\"\n    ]\n}"
																						},
																						"url": {
																							"raw": "{{baseUrl}}/environments/:envId/dfsp/endpoints/egress/ips/:epId",
																							"host": [
																								"{{baseUrl}}"
																							],
																							"path": [
																								"environments",
																								":envId",
																								"dfsp",
																								"endpoints",
																								"egress",
																								"ips",
																								":epId"
																							],
																							"variable": [
																								{
																									"key": "envId"
																								},
																								{
																									"key": "epId"
																								}
																							]
																						}
																					},
																					"status": "OK",
																					"code": 200,
																					"_postman_previewlanguage": "json",
																					"header": [
																						{
																							"key": "Content-Type",
																							"value": "application/json"
																						}
																					],
																					"cookie": [],
																					"body": "{\n \"id\": 42\n}"
																				}
																			]
																		},
																		{
																			"name": "delete DFSP Endpoint",
																			"request": {
																				"method": "DELETE",
																				"header": [],
																				"url": {
																					"raw": "{{baseUrl}}/environments/:envId/dfsp/endpoints/egress/ips/:epId",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"environments",
																						":envId",
																						"dfsp",
																						"endpoints",
																						"egress",
																						"ips",
																						":epId"
																					],
																					"variable": [
																						{
																							"key": "epId",
																							"value": "<integer>",
																							"type": "string",
																							"description": "(Required) ID of endpoint"
																						},
																						{
																							"key": "envId",
																							"value": "<integer>",
																							"type": "string",
																							"description": "(Required) ID of environment"
																						}
																					]
																				},
																				"description": "TBD"
																			},
																			"response": [
																				{
																					"name": "successful operation",
																					"originalRequest": {
																						"method": "DELETE",
																						"header": [],
																						"url": {
																							"raw": "{{baseUrl}}/environments/:envId/dfsp/endpoints/egress/ips/:epId",
																							"host": [
																								"{{baseUrl}}"
																							],
																							"path": [
																								"environments",
																								":envId",
																								"dfsp",
																								"endpoints",
																								"egress",
																								"ips",
																								":epId"
																							],
																							"variable": [
																								{
																									"key": "envId"
																								},
																								{
																									"key": "epId"
																								}
																							]
																						}
																					},
																					"status": "No Content",
																					"code": 204,
																					"_postman_previewlanguage": "text",
																					"header": [
																						{
																							"key": "Content-Type",
																							"value": "text/plain"
																						}
																					],
																					"cookie": [],
																					"body": ""
																				}
																			]
																		}
																	]
																},
																{
																	"name": "Get egress endpoints for DFSP for type IP",
																	"request": {
																		"method": "GET",
																		"header": [],
																		"url": {
																			"raw": "{{baseUrl}}/environments/:envId/dfsp/endpoints/egress/ips",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"environments",
																				":envId",
																				"dfsp",
																				"endpoints",
																				"egress",
																				"ips"
																			],
																			"variable": [
																				{
																					"key": "envId",
																					"value": "<integer>",
																					"type": "string",
																					"description": "(Required) ID of environment"
																				}
																			]
																		}
																	},
																	"response": [
																		{
																			"name": "successful operation",
																			"originalRequest": {
																				"method": "GET",
																				"header": [],
																				"url": {
																					"raw": "{{baseUrl}}/environments/:envId/dfsp/endpoints/egress/ips",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"environments",
																						":envId",
																						"dfsp",
																						"endpoints",
																						"egress",
																						"ips"
																					],
																					"variable": [
																						{
																							"key": "envId"
																						}
																					]
																				}
																			},
																			"status": "OK",
																			"code": 200,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "[\n {\n  \"type\": \"URL\",\n  \"address\": \"http://test.com\",\n  \"ports\": [\n   \"80\"\n  ]\n },\n {\n  \"type\": \"URL\",\n  \"address\": \"http://test.com\",\n  \"ports\": [\n   \"80\"\n  ]\n }\n]"
																		}
																	]
																},
																{
																	"name": "Update egress endpoints for DFSP for type IP",
																	"request": {
																		"method": "POST",
																		"header": [
																			{
																				"key": "Content-Type",
																				"value": "application/json"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n    \"type\": \"<string>\",\n    \"address\": \"<string>\",\n    \"ports\": [\n        \"<string>\",\n        \"<string>\"\n    ]\n}"
																		},
																		"url": {
																			"raw": "{{baseUrl}}/environments/:envId/dfsp/endpoints/egress/ips",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"environments",
																				":envId",
																				"dfsp",
																				"endpoints",
																				"egress",
																				"ips"
																			],
																			"variable": [
																				{
																					"key": "envId",
																					"value": "<integer>",
																					"type": "string",
																					"description": "(Required) ID of environment"
																				}
																			]
																		}
																	},
																	"response": [
																		{
																			"name": "successful operation",
																			"originalRequest": {
																				"method": "POST",
																				"header": [],
																				"body": {
																					"mode": "raw",
																					"raw": "{\n    \"type\": \"<string>\",\n    \"address\": \"<string>\",\n    \"ports\": [\n        \"<string>\",\n        \"<string>\"\n    ]\n}"
																				},
																				"url": {
																					"raw": "{{baseUrl}}/environments/:envId/dfsp/endpoints/egress/ips",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"environments",
																						":envId",
																						"dfsp",
																						"endpoints",
																						"egress",
																						"ips"
																					],
																					"variable": [
																						{
																							"key": "envId"
																						}
																					]
																				}
																			},
																			"status": "OK",
																			"code": 200,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n \"id\": 42\n}"
																		}
																	]
																}
															]
														},
														{
															"name": "ingress",
															"item": [
																{
																	"name": "ips",
																	"item": [
																		{
																			"name": "{ep Id}",
																			"item": [
																				{
																					"name": "Update ingress endpoints for DFSP for type IP",
																					"request": {
																						"method": "PUT",
																						"header": [
																							{
																								"key": "Content-Type",
																								"value": "application/json"
																							}
																						],
																						"body": {
																							"mode": "raw",
																							"raw": "{\n    \"type\": \"<string>\",\n    \"address\": \"<string>\",\n    \"ports\": [\n        \"<string>\",\n        \"<string>\"\n    ]\n}"
																						},
																						"url": {
																							"raw": "{{baseUrl}}/environments/:envId/dfsp/endpoints/ingress/ips/:epId",
																							"host": [
																								"{{baseUrl}}"
																							],
																							"path": [
																								"environments",
																								":envId",
																								"dfsp",
																								"endpoints",
																								"ingress",
																								"ips",
																								":epId"
																							],
																							"variable": [
																								{
																									"key": "epId",
																									"value": "<integer>",
																									"type": "string",
																									"description": "(Required) ID of endpoint"
																								},
																								{
																									"key": "envId",
																									"value": "<integer>",
																									"type": "string",
																									"description": "(Required) ID of environment"
																								}
																							]
																						}
																					},
																					"response": [
																						{
																							"name": "successful operation",
																							"originalRequest": {
																								"method": "PUT",
																								"header": [],
																								"body": {
																									"mode": "raw",
																									"raw": "{\n    \"type\": \"<string>\",\n    \"address\": \"<string>\",\n    \"ports\": [\n        \"<string>\",\n        \"<string>\"\n    ]\n}"
																								},
																								"url": {
																									"raw": "{{baseUrl}}/environments/:envId/dfsp/endpoints/ingress/ips/:epId",
																									"host": [
																										"{{baseUrl}}"
																									],
																									"path": [
																										"environments",
																										":envId",
																										"dfsp",
																										"endpoints",
																										"ingress",
																										"ips",
																										":epId"
																									],
																									"variable": [
																										{
																											"key": "envId"
																										},
																										{
																											"key": "epId"
																										}
																									]
																								}
																							},
																							"status": "OK",
																							"code": 200,
																							"_postman_previewlanguage": "json",
																							"header": [
																								{
																									"key": "Content-Type",
																									"value": "application/json"
																								}
																							],
																							"cookie": [],
																							"body": "{\n \"id\": 42\n}"
																						}
																					]
																				},
																				{
																					"name": "delete DFSP Endpoint for type IP",
																					"request": {
																						"method": "DELETE",
																						"header": [],
																						"url": {
																							"raw": "{{baseUrl}}/environments/:envId/dfsp/endpoints/ingress/ips/:epId",
																							"host": [
																								"{{baseUrl}}"
																							],
																							"path": [
																								"environments",
																								":envId",
																								"dfsp",
																								"endpoints",
																								"ingress",
																								"ips",
																								":epId"
																							],
																							"variable": [
																								{
																									"key": "epId",
																									"value": "<integer>",
																									"type": "string",
																									"description": "(Required) ID of endpoint"
																								},
																								{
																									"key": "envId",
																									"value": "<integer>",
																									"type": "string",
																									"description": "(Required) ID of environment"
																								}
																							]
																						},
																						"description": "delete ingress endpoint for type IP"
																					},
																					"response": [
																						{
																							"name": "successful operation",
																							"originalRequest": {
																								"method": "DELETE",
																								"header": [],
																								"url": {
																									"raw": "{{baseUrl}}/environments/:envId/dfsp/endpoints/ingress/ips/:epId",
																									"host": [
																										"{{baseUrl}}"
																									],
																									"path": [
																										"environments",
																										":envId",
																										"dfsp",
																										"endpoints",
																										"ingress",
																										"ips",
																										":epId"
																									],
																									"variable": [
																										{
																											"key": "envId"
																										},
																										{
																											"key": "epId"
																										}
																									]
																								}
																							},
																							"status": "No Content",
																							"code": 204,
																							"_postman_previewlanguage": "text",
																							"header": [
																								{
																									"key": "Content-Type",
																									"value": "text/plain"
																								}
																							],
																							"cookie": [],
																							"body": ""
																						}
																					]
																				}
																			]
																		},
																		{
																			"name": "Get ingress endpoints for DFSP IP",
																			"request": {
																				"method": "GET",
																				"header": [],
																				"url": {
																					"raw": "{{baseUrl}}/environments/:envId/dfsp/endpoints/ingress/ips",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"environments",
																						":envId",
																						"dfsp",
																						"endpoints",
																						"ingress",
																						"ips"
																					],
																					"variable": [
																						{
																							"key": "envId",
																							"value": "<integer>",
																							"type": "string",
																							"description": "(Required) ID of environment"
																						}
																					]
																				}
																			},
																			"response": [
																				{
																					"name": "successful operation",
																					"originalRequest": {
																						"method": "GET",
																						"header": [],
																						"url": {
																							"raw": "{{baseUrl}}/environments/:envId/dfsp/endpoints/ingress/ips",
																							"host": [
																								"{{baseUrl}}"
																							],
																							"path": [
																								"environments",
																								":envId",
																								"dfsp",
																								"endpoints",
																								"ingress",
																								"ips"
																							],
																							"variable": [
																								{
																									"key": "envId"
																								}
																							]
																						}
																					},
																					"status": "OK",
																					"code": 200,
																					"_postman_previewlanguage": "json",
																					"header": [
																						{
																							"key": "Content-Type",
																							"value": "application/json"
																						}
																					],
																					"cookie": [],
																					"body": "[\n {\n  \"type\": \"URL\",\n  \"address\": \"http://test.com\",\n  \"ports\": [\n   \"80\"\n  ]\n },\n {\n  \"type\": \"URL\",\n  \"address\": \"http://test.com\",\n  \"ports\": [\n   \"80\"\n  ]\n }\n]"
																				}
																			]
																		},
																		{
																			"name": "Update egress endpoints for DFSP",
																			"request": {
																				"method": "POST",
																				"header": [
																					{
																						"key": "Content-Type",
																						"value": "application/json"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "{\n    \"type\": \"<string>\",\n    \"address\": \"<string>\",\n    \"ports\": [\n        \"<string>\",\n        \"<string>\"\n    ]\n}"
																				},
																				"url": {
																					"raw": "{{baseUrl}}/environments/:envId/dfsp/endpoints/ingress/ips",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"environments",
																						":envId",
																						"dfsp",
																						"endpoints",
																						"ingress",
																						"ips"
																					],
																					"variable": [
																						{
																							"key": "envId",
																							"value": "<integer>",
																							"type": "string",
																							"description": "(Required) ID of environment"
																						}
																					]
																				}
																			},
																			"response": [
																				{
																					"name": "successful operation",
																					"originalRequest": {
																						"method": "POST",
																						"header": [],
																						"body": {
																							"mode": "raw",
																							"raw": "{\n    \"type\": \"<string>\",\n    \"address\": \"<string>\",\n    \"ports\": [\n        \"<string>\",\n        \"<string>\"\n    ]\n}"
																						},
																						"url": {
																							"raw": "{{baseUrl}}/environments/:envId/dfsp/endpoints/ingress/ips",
																							"host": [
																								"{{baseUrl}}"
																							],
																							"path": [
																								"environments",
																								":envId",
																								"dfsp",
																								"endpoints",
																								"ingress",
																								"ips"
																							],
																							"variable": [
																								{
																									"key": "envId"
																								}
																							]
																						}
																					},
																					"status": "Created",
																					"code": 201,
																					"_postman_previewlanguage": "json",
																					"header": [
																						{
																							"key": "Content-Type",
																							"value": "application/json"
																						}
																					],
																					"cookie": [],
																					"body": "{\n \"id\": 42\n}"
																				}
																			]
																		}
																	]
																},
																{
																	"name": "urls",
																	"item": [
																		{
																			"name": "{ep Id}",
																			"item": [
																				{
																					"name": "Update egress endpoints for DFSP based on an id",
																					"request": {
																						"method": "PUT",
																						"header": [
																							{
																								"key": "Content-Type",
																								"value": "application/json"
																							}
																						],
																						"body": {
																							"mode": "raw",
																							"raw": "{\n    \"type\": \"<string>\",\n    \"address\": \"<string>\",\n    \"ports\": [\n        \"<string>\",\n        \"<string>\"\n    ]\n}"
																						},
																						"url": {
																							"raw": "{{baseUrl}}/environments/:envId/dfsp/endpoints/ingress/urls/:epId",
																							"host": [
																								"{{baseUrl}}"
																							],
																							"path": [
																								"environments",
																								":envId",
																								"dfsp",
																								"endpoints",
																								"ingress",
																								"urls",
																								":epId"
																							],
																							"variable": [
																								{
																									"key": "epId",
																									"value": "<string>",
																									"type": "string",
																									"description": "(Required) ID of endpoint"
																								},
																								{
																									"key": "envId",
																									"value": "<integer>",
																									"type": "string",
																									"description": "(Required) ID of environment"
																								}
																							]
																						}
																					},
																					"response": [
																						{
																							"name": "successful operation",
																							"originalRequest": {
																								"method": "PUT",
																								"header": [],
																								"body": {
																									"mode": "raw",
																									"raw": "{\n    \"type\": \"<string>\",\n    \"address\": \"<string>\",\n    \"ports\": [\n        \"<string>\",\n        \"<string>\"\n    ]\n}"
																								},
																								"url": {
																									"raw": "{{baseUrl}}/environments/:envId/dfsp/endpoints/ingress/urls/:epId",
																									"host": [
																										"{{baseUrl}}"
																									],
																									"path": [
																										"environments",
																										":envId",
																										"dfsp",
																										"endpoints",
																										"ingress",
																										"urls",
																										":epId"
																									],
																									"variable": [
																										{
																											"key": "envId"
																										},
																										{
																											"key": "epId"
																										}
																									]
																								}
																							},
																							"status": "Created",
																							"code": 201,
																							"_postman_previewlanguage": "json",
																							"header": [
																								{
																									"key": "Content-Type",
																									"value": "application/json"
																								}
																							],
																							"cookie": [],
																							"body": "{\n \"id\": 42\n}"
																						}
																					]
																				},
																				{
																					"name": "Delete egress endpoints for DFSP based on an id",
																					"request": {
																						"method": "DELETE",
																						"header": [],
																						"url": {
																							"raw": "{{baseUrl}}/environments/:envId/dfsp/endpoints/ingress/urls/:epId",
																							"host": [
																								"{{baseUrl}}"
																							],
																							"path": [
																								"environments",
																								":envId",
																								"dfsp",
																								"endpoints",
																								"ingress",
																								"urls",
																								":epId"
																							],
																							"variable": [
																								{
																									"key": "epId",
																									"value": "<string>",
																									"type": "string",
																									"description": "(Required) ID of endpoint"
																								},
																								{
																									"key": "envId",
																									"value": "<integer>",
																									"type": "string",
																									"description": "(Required) ID of environment"
																								}
																							]
																						}
																					},
																					"response": [
																						{
																							"name": "successful operation",
																							"originalRequest": {
																								"method": "DELETE",
																								"header": [],
																								"url": {
																									"raw": "{{baseUrl}}/environments/:envId/dfsp/endpoints/ingress/urls/:epId",
																									"host": [
																										"{{baseUrl}}"
																									],
																									"path": [
																										"environments",
																										":envId",
																										"dfsp",
																										"endpoints",
																										"ingress",
																										"urls",
																										":epId"
																									],
																									"variable": [
																										{
																											"key": "envId"
																										},
																										{
																											"key": "epId"
																										}
																									]
																								}
																							},
																							"status": "No Content",
																							"code": 204,
																							"_postman_previewlanguage": "text",
																							"header": [
																								{
																									"key": "Content-Type",
																									"value": "text/plain"
																								}
																							],
																							"cookie": [],
																							"body": ""
																						}
																					]
																				}
																			]
																		},
																		{
																			"name": "Get ingress endpoints for DFSP URL",
																			"request": {
																				"method": "GET",
																				"header": [],
																				"url": {
																					"raw": "{{baseUrl}}/environments/:envId/dfsp/endpoints/ingress/urls",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"environments",
																						":envId",
																						"dfsp",
																						"endpoints",
																						"ingress",
																						"urls"
																					],
																					"variable": [
																						{
																							"key": "envId",
																							"value": "<integer>",
																							"type": "string",
																							"description": "(Required) ID of environment"
																						}
																					]
																				}
																			},
																			"response": [
																				{
																					"name": "successful operation",
																					"originalRequest": {
																						"method": "GET",
																						"header": [],
																						"url": {
																							"raw": "{{baseUrl}}/environments/:envId/dfsp/endpoints/ingress/urls",
																							"host": [
																								"{{baseUrl}}"
																							],
																							"path": [
																								"environments",
																								":envId",
																								"dfsp",
																								"endpoints",
																								"ingress",
																								"urls"
																							],
																							"variable": [
																								{
																									"key": "envId"
																								}
																							]
																						}
																					},
																					"status": "OK",
																					"code": 200,
																					"_postman_previewlanguage": "json",
																					"header": [
																						{
																							"key": "Content-Type",
																							"value": "application/json"
																						}
																					],
																					"cookie": [],
																					"body": "[\n {\n  \"type\": \"URL\",\n  \"address\": \"http://test.com\",\n  \"ports\": [\n   \"80\"\n  ]\n },\n {\n  \"type\": \"URL\",\n  \"address\": \"http://test.com\",\n  \"ports\": [\n   \"80\"\n  ]\n }\n]"
																				}
																			]
																		},
																		{
																			"name": "Update egress endpoints for DFSP",
																			"request": {
																				"method": "POST",
																				"header": [
																					{
																						"key": "Content-Type",
																						"value": "application/json"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "{\n    \"type\": \"<string>\",\n    \"address\": \"<string>\",\n    \"ports\": [\n        \"<string>\",\n        \"<string>\"\n    ]\n}"
																				},
																				"url": {
																					"raw": "{{baseUrl}}/environments/:envId/dfsp/endpoints/ingress/urls",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"environments",
																						":envId",
																						"dfsp",
																						"endpoints",
																						"ingress",
																						"urls"
																					],
																					"variable": [
																						{
																							"key": "envId",
																							"value": "<integer>",
																							"type": "string",
																							"description": "(Required) ID of environment"
																						}
																					]
																				}
																			},
																			"response": [
																				{
																					"name": "successful operation",
																					"originalRequest": {
																						"method": "POST",
																						"header": [],
																						"body": {
																							"mode": "raw",
																							"raw": "{\n    \"type\": \"<string>\",\n    \"address\": \"<string>\",\n    \"ports\": [\n        \"<string>\",\n        \"<string>\"\n    ]\n}"
																						},
																						"url": {
																							"raw": "{{baseUrl}}/environments/:envId/dfsp/endpoints/ingress/urls",
																							"host": [
																								"{{baseUrl}}"
																							],
																							"path": [
																								"environments",
																								":envId",
																								"dfsp",
																								"endpoints",
																								"ingress",
																								"urls"
																							],
																							"variable": [
																								{
																									"key": "envId"
																								}
																							]
																						}
																					},
																					"status": "Created",
																					"code": 201,
																					"_postman_previewlanguage": "json",
																					"header": [
																						{
																							"key": "Content-Type",
																							"value": "application/json"
																						}
																					],
																					"cookie": [],
																					"body": "{\n \"id\": 42\n}"
																				}
																			]
																		}
																	]
																}
															]
														}
													]
												},
												{
													"name": "client Certs",
													"item": [
														{
															"name": "post client certificate request",
															"request": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n    \"clientCSR\": \"<string>\"\n}"
																},
																"url": {
																	"raw": "{{baseUrl}}/environments/:envId/dfsp/clientCerts",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"environments",
																		":envId",
																		"dfsp",
																		"clientCerts"
																	],
																	"variable": [
																		{
																			"key": "envId",
																			"value": "<integer>",
																			"type": "string",
																			"description": "(Required) ID of environment"
																		}
																	]
																},
																"description": "TBD"
															},
															"response": [
																{
																	"name": "successful operation",
																	"originalRequest": {
																		"method": "POST",
																		"header": [],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n    \"clientCSR\": \"<string>\"\n}"
																		},
																		"url": {
																			"raw": "{{baseUrl}}/environments/:envId/dfsp/clientCerts",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"environments",
																				":envId",
																				"dfsp",
																				"clientCerts"
																			],
																			"variable": [
																				{
																					"key": "envId"
																				}
																			]
																		}
																	},
																	"status": "Created",
																	"code": 201,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n \"id\": 42\n}"
																}
															]
														},
														{
															"name": "Get existing client certs for DFSP",
															"request": {
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/environments/:envId/dfsp/clientCerts",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"environments",
																		":envId",
																		"dfsp",
																		"clientCerts"
																	],
																	"variable": [
																		{
																			"key": "envId",
																			"value": "<integer>",
																			"type": "string",
																			"description": "(Required) ID of environment"
																		}
																	]
																}
															},
															"response": [
																{
																	"name": "successful operation",
																	"originalRequest": {
																		"method": "GET",
																		"header": [],
																		"url": {
																			"raw": "{{baseUrl}}/environments/:envId/dfsp/clientCerts",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"environments",
																				":envId",
																				"dfsp",
																				"clientCerts"
																			],
																			"variable": [
																				{
																					"key": "envId"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "[\n {\n  \"certificate\": \"in sed dolor\",\n  \"csr\": \"ullamco\",\n  \"state\": \"CSR_LOADED\",\n  \"certInfo\": {\n   \"subject\": {\n    \"CN\": \"est tempor commodo\",\n    \"emailAddress\": \"qui dolore veniam\",\n    \"O\": \"id incididunt exercitation\",\n    \"OU\": \"aliqua\",\n    \"C\": \"in do officia\",\n    \"ST\": \"in nostrud\",\n    \"L\": \"laboris Lorem ut eu\"\n   },\n   \"issuer\": {\n    \"CN\": \"Excepteur aliqua do qui\",\n    \"emailAddress\": \"laboris\",\n    \"O\": \"deserunt laboris \",\n    \"OU\": \"voluptate dolore ex irure\",\n    \"C\": \"in dolore fugiat irure\",\n    \"ST\": \"officia n\",\n    \"L\": \"est\"\n   },\n   \"subjectAlternativeNames\": [\n    \"reprehenderit ut\",\n    \"commodo\"\n   ],\n   \"serialNumber\": \"17159976289428250189079625547205715159\",\n   \"notBefore\": \"veniam\",\n   \"notAfter\": \"aute in esse eiusmod\",\n   \"signatureAlgorithm\": \"SHA256WithRSA\"\n  },\n  \"csrInfo\": {\n   \"subject\": {\n    \"CN\": \"labore u\",\n    \"emailAddress\": \"eiusmod laborum dolor do\",\n    \"O\": \"in reprehenderit Excepteur ipsum\",\n    \"OU\": \"anim sint quis reprehenderit ut\",\n    \"C\": \"occaecat nostrud est\",\n    \"ST\": \"nostrud\",\n    \"L\": \"Duis sit\"\n   },\n   \"extensions\": {\n    \"subjectAltName\": {\n     \"dns\": [\n      \"elit consectetur in\",\n      \"irure\"\n     ],\n     \"ips\": [\n      \"163.10.5.24\",\n      \"163.10.5.24\"\n     ],\n     \"emailAddresses\": [\n      \"pki@modusbox.live\",\n      \"pki@modusbox.live\"\n     ],\n     \"uris\": [\n      \"http://modusbox.live\",\n      \"http://modusbox.live\"\n     ]\n    }\n   }\n  },\n  \"hubCAId\": 54144128\n },\n {\n  \"certificate\": \"esse ex\",\n  \"csr\": \"reprehenderit quis ut eiusmod\",\n  \"state\": \"CERT_SIGNED\",\n  \"certInfo\": {\n   \"subject\": {\n    \"CN\": \"quis veniam voluptate dolor commodo\",\n    \"emailAddress\": \"minim voluptate Lorem\",\n    \"O\": \"irure cillum culpa Excepteur cupidatat\",\n    \"OU\": \"eiusmod officia do irure veniam\",\n    \"C\": \"do tempor Ut incididunt\",\n    \"ST\": \"incididunt irure\",\n    \"L\": \"in aliqua\"\n   },\n   \"issuer\": {\n    \"CN\": \"se\",\n    \"emailAddress\": \"dolor Excepteur adipisicing\",\n    \"O\": \"\",\n    \"OU\": \"deserunt tempor\",\n    \"C\": \"ipsum dolore\",\n    \"ST\": \"ad ut et\",\n    \"L\": \"adipisicing sed\"\n   },\n   \"subjectAlternativeNames\": [\n    \"aute in\",\n    \"commodo fugiat consectetur aliqua eiusmod\"\n   ],\n   \"serialNumber\": \"17159976289428250189079625547205715159\",\n   \"notBefore\": \"dolor sunt laboris\",\n   \"notAfter\": \"veniam laboris proident ullamco\",\n   \"signatureAlgorithm\": \"SHA256WithRSA\"\n  },\n  \"csrInfo\": {\n   \"subject\": {\n    \"CN\": \"in commodo in consequat Ut\",\n    \"emailAddress\": \"fugiat nostrud elit\",\n    \"O\": \"in cillum ex\",\n    \"OU\": \"sit commodo\",\n    \"C\": \"velit fugiat voluptate id\",\n    \"ST\": \"mollit laborum irure\",\n    \"L\": \"dolor\"\n   },\n   \"extensions\": {\n    \"subjectAltName\": {\n     \"dns\": [\n      \"est dolor elit\",\n      \"aliqua dolor dolore reprehenderit\"\n     ],\n     \"ips\": [\n      \"163.10.5.24\",\n      \"163.10.5.24\"\n     ],\n     \"emailAddresses\": [\n      \"pki@modusbox.live\",\n      \"pki@modusbox.live\"\n     ],\n     \"uris\": [\n      \"http://modusbox.live\",\n      \"http://modusbox.live\"\n     ]\n    }\n   }\n  },\n  \"hubCAId\": 22746778\n }\n]"
																}
															]
														},
														{
															"name": "post client certificate request",
															"request": {
																"method": "POST",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/environments/:envId/dfsp/clientCerts/csr",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"environments",
																		":envId",
																		"dfsp",
																		"clientCerts",
																		"csr"
																	],
																	"variable": [
																		{
																			"key": "envId",
																			"value": "<integer>",
																			"type": "string",
																			"description": "(Required) ID of environment"
																		}
																	]
																},
																"description": "TBD"
															},
															"response": [
																{
																	"name": "successful operation",
																	"originalRequest": {
																		"method": "POST",
																		"header": [],
																		"url": {
																			"raw": "{{baseUrl}}/environments/:envId/dfsp/clientCerts/csr",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"environments",
																				":envId",
																				"dfsp",
																				"clientCerts",
																				"csr"
																			],
																			"variable": [
																				{
																					"key": "envId"
																				}
																			]
																		}
																	},
																	"status": "Created",
																	"code": 201,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n \"id\": 42\n}"
																}
															]
														}
													]
												},
												{
													"name": "ca",
													"item": [
														{
															"name": "Get DFSP CA",
															"request": {
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/environments/:envId/dfsp/ca",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"environments",
																		":envId",
																		"dfsp",
																		"ca"
																	],
																	"variable": [
																		{
																			"key": "envId",
																			"value": "<integer>",
																			"type": "string",
																			"description": "(Required) ID of environment"
																		}
																	]
																}
															},
															"response": [
																{
																	"name": "successful operation",
																	"originalRequest": {
																		"method": "GET",
																		"header": [],
																		"url": {
																			"raw": "{{baseUrl}}/environments/:envId/dfsp/ca",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"environments",
																				":envId",
																				"dfsp",
																				"ca"
																			],
																			"variable": [
																				{
																					"key": "envId"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n \"rootCertificate\": \"Lorem\",\n \"intermediateChain\": \"nostrud laboris aliquip cillum\",\n \"validations\": [\n  {\n   \"validationCode\": \"CERTIFICATE_CHAIN\",\n   \"performed\": false,\n   \"result\": \"INVALID\",\n   \"message\": \"adipisicing elit veniam\",\n   \"messageTemplate\": \"minim fugiat Excepteur cillum\",\n   \"data\": {},\n   \"details\": \"quis in exercitation commodo esse\"\n  },\n  {\n   \"validationCode\": \"CERTIFICATE_USAGE_CLIENT\",\n   \"performed\": true,\n   \"result\": \"INVALID\",\n   \"message\": \"dolore ullamco\",\n   \"messageTemplate\": \"consequat nul\",\n   \"data\": {},\n   \"details\": \"cillum\"\n  }\n ],\n \"validationState\": \"INVALID\"\n}"
																}
															]
														},
														{
															"name": "post client certificate request",
															"request": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n    \"clientCSR\": \"<string>\"\n}"
																},
																"url": {
																	"raw": "{{baseUrl}}/environments/:envId/dfsp/ca",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"environments",
																		":envId",
																		"dfsp",
																		"ca"
																	],
																	"variable": [
																		{
																			"key": "envId",
																			"value": "<integer>",
																			"type": "string",
																			"description": "(Required) ID of environment"
																		}
																	]
																}
															},
															"response": [
																{
																	"name": "successful operation",
																	"originalRequest": {
																		"method": "POST",
																		"header": [],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n    \"clientCSR\": \"<string>\"\n}"
																		},
																		"url": {
																			"raw": "{{baseUrl}}/environments/:envId/dfsp/ca",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"environments",
																				":envId",
																				"dfsp",
																				"ca"
																			],
																			"variable": [
																				{
																					"key": "envId"
																				}
																			]
																		}
																	},
																	"status": "Created",
																	"code": 201,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n \"id\": 42\n}"
																}
															]
														}
													]
												},
												{
													"name": "get JWS certificates for all DFSPs in the environment",
													"request": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/environments/:envId/dfsp/alljwscerts",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"environments",
																":envId",
																"dfsp",
																"alljwscerts"
															],
															"variable": [
																{
																	"key": "envId",
																	"value": "<integer>",
																	"type": "string",
																	"description": "(Required) ID of environment"
																}
															]
														},
														"description": "TBD"
													},
													"response": [
														{
															"name": "successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/environments/:envId/dfsp/alljwscerts",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"environments",
																		":envId",
																		"dfsp",
																		"alljwscerts"
																	],
																	"variable": [
																		{
																			"key": "envId"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"id\": 71274850,\n \"jwsCertificate\": \"dolo\",\n \"rootCertificate\": \"Lorem laboris\",\n \"intermediateChain\": \"pariatur eiusmod\",\n \"rootCertificateInfo\": {\n  \"subject\": {\n   \"CN\": \"esse Lorem occa\",\n   \"emailAddress\": \"Duis eu nostrud\",\n   \"O\": \"sit\",\n   \"OU\": \"pariatur nisi\",\n   \"C\": \"Excepteur\",\n   \"ST\": \"sit culpa ullamco proident\",\n   \"L\": \"consectetur pariatur dolor\"\n  },\n  \"issuer\": {\n   \"CN\": \"cillum amet dolor occaecat\",\n   \"emailAddress\": \"dolore in sit laboris qui\",\n   \"O\": \"aliqua aliquip\",\n   \"OU\": \"sit aute\",\n   \"C\": \"sit deserunt culpa Lorem\",\n   \"ST\": \"dolore ut mollit\",\n   \"L\": \"elit\"\n  },\n  \"subjectAlternativeNames\": [\n   \"cupidatat ullamco ut magna\",\n   \"aliquip ul\"\n  ],\n  \"serialNumber\": \"17159976289428250189079625547205715159\",\n  \"notBefore\": \"laborum in elit\",\n  \"notAfter\": \"Duis id tempor\",\n  \"signatureAlgorithm\": \"SHA256WithRSA\"\n },\n \"intermediateChainInfo\": [\n  {\n   \"subject\": {\n    \"CN\": \"dolor\",\n    \"emailAddress\": \"Lorem dolore anim\",\n    \"O\": \"enim\",\n    \"OU\": \"deserunt aliquip et est dolore\",\n    \"C\": \"sit laborum minim\",\n    \"ST\": \"mollit nostrud fugiat\",\n    \"L\": \"dolor aute pariatur amet occaecat\"\n   },\n   \"issuer\": {\n    \"CN\": \"nulla enim\",\n    \"emailAddress\": \"proident cillum\",\n    \"O\": \"dolore Lorem quis esse\",\n    \"OU\": \"Excepteur quis eu\",\n    \"C\": \"enim ad\",\n    \"ST\": \"sint consequat\",\n    \"L\": \"non\"\n   },\n   \"subjectAlternativeNames\": [\n    \"qui aliqua sint\",\n    \"sit aliqua\"\n   ],\n   \"serialNumber\": \"17159976289428250189079625547205715159\",\n   \"notBefore\": \"mollit\",\n   \"notAfter\": \"et\",\n   \"signatureAlgorithm\": \"SHA256WithRSA\"\n  },\n  {\n   \"subject\": {\n    \"CN\": \"veniam eiusmod enim Ut\",\n    \"emailAddress\": \"irure sunt\",\n    \"O\": \"anim nostrud\",\n    \"OU\": \"ex velit fugiat in\",\n    \"C\": \"Ut\",\n    \"ST\": \"ex non et eiu\",\n    \"L\": \"nostrud\"\n   },\n   \"issuer\": {\n    \"CN\": \"cupidatat Ut\",\n    \"emailAddress\": \"nulla in\",\n    \"O\": \"dolore dolor veniam\",\n    \"OU\": \"velit ex\",\n    \"C\": \"consectetur pari\",\n    \"ST\": \"culpa\",\n    \"L\": \"Ut tempor\"\n   },\n   \"subjectAlternativeNames\": [\n    \"Duis dolor aliquip minim\",\n    \"elit\"\n   ],\n   \"serialNumber\": \"17159976289428250189079625547205715159\",\n   \"notBefore\": \"dolore ad laboris adipisicing\",\n   \"notAfter\": \"mollit exercitation\",\n   \"signatureAlgorithm\": \"SHA256WithRSA\"\n  }\n ],\n \"jwsCertificateInfo\": {\n  \"subject\": {\n   \"CN\": \"voluptate Duis ut officia quis\",\n   \"emailAddress\": \"nisi culpa\",\n   \"O\": \"enim laboris nostrud\",\n   \"OU\": \"Lorem Duis nisi\",\n   \"C\": \"elit cupidatat enim\",\n   \"ST\": \"in officia voluptate irure eu\",\n   \"L\": \"dolor Duis voluptate aliquip\"\n  },\n  \"issuer\": {\n   \"CN\": \"Lorem sed nostrud non ea\",\n   \"emailAddress\": \"et labore fugiat\",\n   \"O\": \"sunt laborum esse proident irure\",\n   \"OU\": \"anim nostrud\",\n   \"C\": \"dolore proident\",\n   \"ST\": \"deserunt culpa aliqua\",\n   \"L\": \"\"\n  },\n  \"subjectAlternativeNames\": [\n   \"mollit\",\n   \"veniam irure quis in\"\n  ],\n  \"serialNumber\": \"17159976289428250189079625547205715159\",\n  \"notBefore\": \"anim officia in laboris ad\",\n  \"notAfter\": \"aute\",\n  \"signatureAlgorithm\": \"SHA256WithRSA\"\n },\n \"validations\": [\n  {\n   \"validationCode\": \"CERTIFICATE_USAGE_CLIENT\",\n   \"performed\": false,\n   \"result\": \"INVALID\",\n   \"message\": \"dolor qui reprehenderit\",\n   \"messageTemplate\": \"elit dolor aliqua\",\n   \"data\": {},\n   \"details\": \"id nulla\"\n  },\n  {\n   \"validationCode\": \"CA_CERTIFICATE_USAGE\",\n   \"performed\": false,\n   \"result\": \"NOT_AVAILABLE\",\n   \"message\": \"adipisicing non dolore\",\n   \"messageTemplate\": \"ex ullamco tempor\",\n   \"data\": {},\n   \"details\": \"magna incididunt velit anim\"\n  }\n ],\n \"validationState\": \"INVALID\",\n \"dfspId\": \"cillum ut L\"\n}"
														}
													]
												},
												{
													"name": "Get DFSP details",
													"request": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{SENDERFSP_PM4ML_ENDPOINT}}/experience-api/environments/1/dfsp/details",
															"host": [
																"{{SENDERFSP_PM4ML_ENDPOINT}}"
															],
															"path": [
																"experience-api",
																"environments",
																"1",
																"dfsp",
																"details"
															]
														}
													},
													"response": [
														{
															"name": "successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/environments/:envId/dfsp/details",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"environments",
																		":envId",
																		"dfsp",
																		"details"
																	],
																	"variable": [
																		{
																			"key": "envId"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"name\": \"DFSP2\",\n \"monetaryZoneId\": \"EUR\"\n}"
														}
													]
												},
												{
													"name": "post all certificate request",
													"request": {
														"method": "POST",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/environments/:envId/dfsp/allcerts",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"environments",
																":envId",
																"dfsp",
																"allcerts"
															],
															"variable": [
																{
																	"key": "envId",
																	"value": "<integer>",
																	"type": "string",
																	"description": "(Required) ID of environment"
																}
															]
														},
														"description": "TBD"
													},
													"response": [
														{
															"name": "successful operation",
															"originalRequest": {
																"method": "POST",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/environments/:envId/dfsp/allcerts",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"environments",
																		":envId",
																		"dfsp",
																		"allcerts"
																	],
																	"variable": [
																		{
																			"key": "envId"
																		}
																	]
																}
															},
															"status": "Created",
															"code": 201,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														}
													]
												}
											]
										},
										{
											"name": "dfsps",
											"item": [
												{
													"name": "Get all participants",
													"request": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/environments/:envId/dfsps",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"environments",
																":envId",
																"dfsps"
															],
															"variable": [
																{
																	"key": "envId",
																	"value": "<integer>",
																	"type": "string",
																	"description": "(Required) ID of environment"
																}
															]
														}
													},
													"response": [
														{
															"name": "successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/environments/:envId/dfsps",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"environments",
																		":envId",
																		"dfsps"
																	],
																	"variable": [
																		{
																			"key": "envId"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "[\n {\n  \"name\": \"DFSP2\",\n  \"monetaryZoneId\": \"EUR\"\n },\n {\n  \"name\": \"DFSP2\",\n  \"monetaryZoneId\": \"EUR\"\n }\n]"
														}
													]
												},
												{
													"name": "Retrieves environment dfsp status with UI phase and step completion status",
													"request": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/environments/:envId/dfsps/:dfspId/status",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"environments",
																":envId",
																"dfsps",
																":dfspId",
																"status"
															],
															"variable": [
																{
																	"key": "envId",
																	"value": "<string>",
																	"type": "string",
																	"description": "(Required) ID of the environment to get satus"
																},
																{
																	"key": "dfspId",
																	"value": "<string>",
																	"type": "string",
																	"description": "(Required) ID of the dfsp to get satus"
																}
															]
														}
													},
													"response": [
														{
															"name": "successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/environments/:envId/dfsps/:dfspId/status",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"environments",
																		":envId",
																		"dfsps",
																		":dfspId",
																		"status"
																	],
																	"variable": [
																		{
																			"key": "envId"
																		},
																		{
																			"key": "dfspId"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "[\n {\n  \"phase\": \"BUSINESS_SETUP\",\n  \"steps\": [\n   {\n    \"identifier\": \"SERVER_CERTIFICATES_EXCHANGE\",\n    \"status\": \"NOT_STARTED\"\n   },\n   {\n    \"identifier\": \"SERVER_CERTIFICATES_EXCHANGE\",\n    \"status\": \"COMPLETED\"\n   }\n  ]\n },\n {\n  \"phase\": \"BUSINESS_SETUP\",\n  \"steps\": [\n   {\n    \"identifier\": \"SERVER_CERTIFICATES_EXCHANGE\",\n    \"status\": \"COMPLETED\"\n   },\n   {\n    \"identifier\": \"SERVER_CERTIFICATES_EXCHANGE\",\n    \"status\": \"NOT_STARTED\"\n   }\n  ]\n }\n]"
														}
													]
												}
											]
										},
										{
											"name": "hub",
											"item": [
												{
													"name": "endpoints",
													"item": [
														{
															"name": "Update egress endpoints for DFSP",
															"request": {
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/environments/:envId/hub/endpoints/egress",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"environments",
																		":envId",
																		"hub",
																		"endpoints",
																		"egress"
																	],
																	"variable": [
																		{
																			"key": "envId",
																			"value": "<integer>",
																			"type": "string",
																			"description": "(Required) ID of environment"
																		}
																	]
																}
															},
															"response": [
																{
																	"name": "successful operation",
																	"originalRequest": {
																		"method": "GET",
																		"header": [],
																		"url": {
																			"raw": "{{baseUrl}}/environments/:envId/hub/endpoints/egress",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"environments",
																				":envId",
																				"hub",
																				"endpoints",
																				"egress"
																			],
																			"variable": [
																				{
																					"key": "envId"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n \"type\": \"<string>\",\n \"address\": \"<string>\",\n \"ports\": [\n  \"<string>\",\n  \"<string>\"\n ]\n}"
																}
															]
														},
														{
															"name": "Update egress endpoints for DFSP",
															"request": {
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/environments/:envId/hub/endpoints/ingress",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"environments",
																		":envId",
																		"hub",
																		"endpoints",
																		"ingress"
																	],
																	"variable": [
																		{
																			"key": "envId",
																			"value": "<integer>",
																			"type": "string",
																			"description": "(Required) ID of environment"
																		}
																	]
																}
															},
															"response": [
																{
																	"name": "successful operation",
																	"originalRequest": {
																		"method": "GET",
																		"header": [],
																		"url": {
																			"raw": "{{baseUrl}}/environments/:envId/hub/endpoints/ingress",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"environments",
																				":envId",
																				"hub",
																				"endpoints",
																				"ingress"
																			],
																			"variable": [
																				{
																					"key": "envId"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n \"type\": \"<string>\",\n \"address\": \"<string>\",\n \"ports\": [\n  \"<string>\",\n  \"<string>\"\n ]\n}"
																}
															]
														}
													]
												},
												{
													"name": "Get Hub CAs",
													"request": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/environments/:envId/hub/ca",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"environments",
																":envId",
																"hub",
																"ca"
															],
															"variable": [
																{
																	"key": "envId",
																	"value": "<integer>",
																	"type": "string",
																	"description": "(Required) ID of environment"
																}
															]
														}
													},
													"response": [
														{
															"name": "successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/environments/:envId/hub/ca",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"environments",
																		":envId",
																		"hub",
																		"ca"
																	],
																	"variable": [
																		{
																			"key": "envId"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"name\": \"reprehenderit eu \",\n \"type\": \"EXTERNAL\",\n \"rootCertificate\": \"minim in\",\n \"intermediateChain\": \"sint commodo veniam velit\",\n \"id\": -90168276,\n \"rootCertificateInfo\": {\n  \"subject\": {\n   \"CN\": \"cillum\",\n   \"emailAddress\": \"enim exercitation sunt id\",\n   \"O\": \"minim\",\n   \"OU\": \"esse sed magna\",\n   \"C\": \"deserunt qui cillum minim\",\n   \"ST\": \"Duis do exercitation\",\n   \"L\": \"enim Excepteur magna laboris\"\n  },\n  \"issuer\": {\n   \"CN\": \"cillum aute anim\",\n   \"emailAddress\": \"officia voluptate ut\",\n   \"O\": \"dolor deserunt aliqua\",\n   \"OU\": \"incididunt esse\",\n   \"C\": \"voluptate aliqua\",\n   \"ST\": \"adipisicing nisi\",\n   \"L\": \"dolore sit\"\n  },\n  \"subjectAlternativeNames\": [\n   \"Duis labor\",\n   \"enim commodo adipisicing\"\n  ],\n  \"serialNumber\": \"17159976289428250189079625547205715159\",\n  \"notBefore\": \"dolore consequat officia laborum sunt\",\n  \"notAfter\": \"\",\n  \"signatureAlgorithm\": \"SHA256WithRSA\"\n },\n \"intermediateChainInfo\": [\n  {\n   \"subject\": {\n    \"CN\": \"proident deserunt ut\",\n    \"emailAddress\": \"sint dolore ad in\",\n    \"O\": \"laborum Lorem do consectetur\",\n    \"OU\": \"proident reprehenderit cupidatat \",\n    \"C\": \"commodo veniam\",\n    \"ST\": \"id aliquip\",\n    \"L\": \"reprehenderit ipsum\"\n   },\n   \"issuer\": {\n    \"CN\": \"consectetur in\",\n    \"emailAddress\": \"se\",\n    \"O\": \"magna reprehenderit irure sed exercitation\",\n    \"OU\": \"occaecat sunt magna\",\n    \"C\": \"in officia laboris qui\",\n    \"ST\": \"do et\",\n    \"L\": \"enim exercitation aute adipisicing\"\n   },\n   \"subjectAlternativeNames\": [\n    \"dolor in\",\n    \"laboris quis velit\"\n   ],\n   \"serialNumber\": \"17159976289428250189079625547205715159\",\n   \"notBefore\": \"ullamco ea\",\n   \"notAfter\": \"cillum\",\n   \"signatureAlgorithm\": \"SHA256WithRSA\"\n  },\n  {\n   \"subject\": {\n    \"CN\": \"pariatur Excepteur dolor non\",\n    \"emailAddress\": \"laborum ea\",\n    \"O\": \"non proident in\",\n    \"OU\": \"ea vo\",\n    \"C\": \"culpa dolore\",\n    \"ST\": \"quis aute officia\",\n    \"L\": \"commodo exercitation\"\n   },\n   \"issuer\": {\n    \"CN\": \"ipsum proident\",\n    \"emailAddress\": \"ea comm\",\n    \"O\": \"aliqua lab\",\n    \"OU\": \"veniam pariatur\",\n    \"C\": \"adipisicing\",\n    \"ST\": \"sit exercitation aliqua fugiat\",\n    \"L\": \"sunt fugiat\"\n   },\n   \"subjectAlternativeNames\": [\n    \"mollit tempor sint\",\n    \"dolor incididunt consectetur ut\"\n   ],\n   \"serialNumber\": \"17159976289428250189079625547205715159\",\n   \"notBefore\": \"ut Ut aliqua\",\n   \"notAfter\": \"al\",\n   \"signatureAlgorithm\": \"SHA256WithRSA\"\n  }\n ],\n \"validations\": [\n  {\n   \"validationCode\": \"CA_CERTIFICATE_USAGE\",\n   \"performed\": true,\n   \"result\": \"NOT_AVAILABLE\",\n   \"message\": \"dolor occaecat labo\",\n   \"messageTemplate\": \"qui anim nulla id\",\n   \"data\": {},\n   \"details\": \"occ\"\n  },\n  {\n   \"validationCode\": \"CERTIFICATE_VALIDITY\",\n   \"performed\": false,\n   \"result\": \"NOT_AVAILABLE\",\n   \"message\": \"dolor sed\",\n   \"messageTemplate\": \"cupidatat officia proident\",\n   \"data\": {},\n   \"details\": \"ut dolor veniam\"\n  }\n ],\n \"validationState\": \"NOT_AVAILABLE\"\n}"
														}
													]
												},
												{
													"name": "Get Hub server certificates",
													"request": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/environments/:envId/hub/serverCerts",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"environments",
																":envId",
																"hub",
																"serverCerts"
															],
															"variable": [
																{
																	"key": "envId",
																	"value": "<integer>",
																	"type": "string",
																	"description": "(Required) ID of environment"
																}
															]
														}
													},
													"response": [
														{
															"name": "successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/environments/:envId/hub/serverCerts",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"environments",
																		":envId",
																		"hub",
																		"serverCerts"
																	],
																	"variable": [
																		{
																			"key": "envId"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"rootCertificate\": \"<string>\",\n \"intermediateChain\": \"<string>\",\n \"serverCertificate\": \"<string>\"\n}"
														}
													]
												}
											]
										},
										{
											"name": "Returns all the dfsps for that monetary zone",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/environments/:envId/monetaryzones/:monetaryZoneId/dfsps",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"environments",
														":envId",
														"monetaryzones",
														":monetaryZoneId",
														"dfsps"
													],
													"variable": [
														{
															"key": "monetaryZoneId",
															"value": "<string>",
															"type": "string",
															"description": "(Required) ID of monetaryZone"
														},
														{
															"key": "envId",
															"value": "<integer>",
															"type": "string",
															"description": "(Required) ID of environment"
														}
													]
												}
											},
											"response": [
												{
													"name": "successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/environments/:envId/monetaryzones/:monetaryZoneId/dfsps",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"environments",
																":envId",
																"monetaryzones",
																":monetaryZoneId",
																"dfsps"
															],
															"variable": [
																{
																	"key": "envId"
																},
																{
																	"key": "monetaryZoneId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[\n {\n  \"name\": \"DFSP2\",\n  \"monetaryZoneId\": \"EUR\"\n },\n {\n  \"name\": \"DFSP2\",\n  \"monetaryZoneId\": \"EUR\"\n }\n]"
												}
											]
										}
									]
								},
								{
									"name": "Returns all the environments",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/environments",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"environments"
											]
										}
									},
									"response": [
										{
											"name": "successful operation",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/environments",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"environments"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n {\n  \"id\": 42,\n  \"name\": \"DEV\"\n },\n {\n  \"id\": 42,\n  \"name\": \"DEV\"\n }\n]"
										}
									]
								}
							]
						},
						{
							"name": "transfers",
							"item": [
								{
									"name": "{transfer Id}",
									"item": [
										{
											"name": "Retrieves a transfer",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/transfers/:transferId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"transfers",
														":transferId"
													],
													"variable": [
														{
															"key": "transferId",
															"value": "<string>",
															"type": "string",
															"description": "(Required) UUID of the transfer to get"
														}
													]
												}
											},
											"response": [
												{
													"name": "successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/transfers/:transferId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"transfers",
																":transferId"
															],
															"variable": [
																{
																	"key": "transferId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"id\": \"anim et voluptate\",\n \"batchId\": 87994730,\n \"institution\": \"magna enim incididunt ut ex\",\n \"direction\": \"OUTBOUND\",\n \"currency\": \"LSL\",\n \"value\": \"5731\",\n \"type\": \"P2P\",\n \"status\": \"SUCCESS\",\n \"initiatedTimestamp\": \"<string>\"\n}"
												}
											]
										},
										{
											"name": "Retrieves additional transfer details",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/transfers/:transferId/details",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"transfers",
														":transferId",
														"details"
													],
													"variable": [
														{
															"key": "transferId",
															"value": "<string>",
															"type": "string",
															"description": "(Required) UUID of the transfer to get"
														}
													]
												}
											},
											"response": [
												{
													"name": "successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/transfers/:transferId/details",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"transfers",
																":transferId",
																"details"
															],
															"variable": [
																{
																	"key": "transferId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"id\": \"in reprehenderit\",\n \"confirmationNumber\": -17440138,\n \"amount\": \"678635851904257453.1\",\n \"sender\": \"Ut nostru\",\n \"recipient\": \"nulla\",\n \"details\": \"ea incididunt\",\n \"status\": \"ERROR\",\n \"technicalDetails\": {\n  \"schemeTransferId\": \"eb507d53-ed69-2e8c-bbf4-73630731bb22\",\n  \"homeTransferId\": \"nisi aliquip commodo\",\n  \"transactionId\": \"042a7b9d-5f07-1774-b2fb-2ca439c6aefd\",\n  \"payerParty\": {\n   \"idType\": \"DEVICE\",\n   \"idValue\": \"Duis\",\n   \"type\": \"AGENT\",\n   \"idSubValue\": \"cill\",\n   \"displayName\": \"sit sed volu\",\n   \"firstName\": \"in sit irure consectetur\",\n   \"middleName\": \"fugiat ea aliquip\",\n   \"lastName\": \"in incididunt consectetur Ut sit\",\n   \"dateOfBirth\": \"2332-02-29\",\n   \"merchantClassificationCode\": \"sunt in Ut\",\n   \"fspId\": \"proident exercitation Excepteur Duis\",\n   \"extensionList\": [\n    {\n     \"key\": \"anim\",\n     \"value\": \"id L\"\n    },\n    {\n     \"key\": \"dolo\",\n     \"value\": \"aliq\"\n    },\n    {\n     \"key\": \"labo\",\n     \"value\": \"sint\"\n    },\n    {\n     \"key\": \"sit \",\n     \"value\": \"veni\"\n    },\n    {\n     \"key\": \"irur\",\n     \"value\": \"fugi\"\n    },\n    {\n     \"key\": \"Lore\",\n     \"value\": \"eu d\"\n    },\n    {\n     \"key\": \"esse\",\n     \"value\": \"dolo\"\n    },\n    {\n     \"key\": \"proi\",\n     \"value\": \"cill\"\n    },\n    {\n     \"key\": \"sed \",\n     \"value\": \"in a\"\n    },\n    {\n     \"key\": \"sed \",\n     \"value\": \"cupi\"\n    },\n    {\n     \"key\": \"volu\",\n     \"value\": \"null\"\n    },\n    {\n     \"key\": \"ea l\",\n     \"value\": \"eius\"\n    },\n    {\n     \"key\": \"in e\",\n     \"value\": \"dolo\"\n    },\n    {\n     \"key\": \"id s\",\n     \"value\": \"temp\"\n    },\n    {\n     \"key\": \"id d\",\n     \"value\": \"cill\"\n    },\n    {\n     \"key\": \"culp\",\n     \"value\": \"labo\"\n    }\n   ]\n  },\n  \"payeeParty\": {\n   \"idType\": \"BUSINESS\",\n   \"idValue\": \"repr\",\n   \"type\": \"DEVICE\",\n   \"idSubValue\": \"mini\",\n   \"displayName\": \"adipisicing dolore\",\n   \"firstName\": \"occaecat tempor id\",\n   \"middleName\": \"in officia ullamco\",\n   \"lastName\": \"magna ut ea nostrud\",\n   \"dateOfBirth\": \"6000-02-29\",\n   \"merchantClassificationCode\": \"dolore dolor\",\n   \"fspId\": \"minim quis\",\n   \"extensionList\": [\n    {\n     \"key\": \"in l\",\n     \"value\": \"Lore\"\n    },\n    {\n     \"key\": \"irur\",\n     \"value\": \"proi\"\n    },\n    {\n     \"key\": \"repr\",\n     \"value\": \"qui \"\n    },\n    {\n     \"key\": \"labo\",\n     \"value\": \"moll\"\n    },\n    {\n     \"key\": \"dolo\",\n     \"value\": \"Exce\"\n    },\n    {\n     \"key\": \"dese\",\n     \"value\": \"labo\"\n    },\n    {\n     \"key\": \"eius\",\n     \"value\": \"dolo\"\n    },\n    {\n     \"key\": \"occa\",\n     \"value\": \"magn\"\n    },\n    {\n     \"key\": \"aliq\",\n     \"value\": \"doni\"\n    },\n    {\n     \"key\": \"qui \",\n     \"value\": \"cons\"\n    },\n    {\n     \"key\": \"fugi\",\n     \"value\": \"volu\"\n    },\n    {\n     \"key\": \"et U\",\n     \"value\": \"id m\"\n    },\n    {\n     \"key\": \"sed \",\n     \"value\": \"exsu\"\n    },\n    {\n     \"key\": \"veni\",\n     \"value\": \"sunt\"\n    },\n    {\n     \"key\": \"id i\",\n     \"value\": \"repr\"\n    },\n    {\n     \"key\": \"quis\",\n     \"value\": \"Lore\"\n    }\n   ]\n  },\n  \"quoteId\": \"74598ee7-eb3e-1a31-85ce-4e673be6a367\",\n  \"transferState\": \"WAITING_FOR_QUOTE_ACCEPTANCE\",\n  \"getPartiesRequest\": {\n   \"headers\": {},\n   \"body\": {}\n  },\n  \"getPartiesResponse\": {\n   \"headers\": {},\n   \"body\": {}\n  },\n  \"quoteRequest\": {\n   \"headers\": {},\n   \"body\": {}\n  },\n  \"quoteResponse\": {\n   \"headers\": {},\n   \"body\": {}\n  },\n  \"transferPrepare\": {\n   \"headers\": {},\n   \"body\": {}\n  },\n  \"transferFulfilment\": {\n   \"headers\": {},\n   \"body\": {}\n  },\n  \"lastError\": {\n   \"httpStatusCode\": -40454903,\n   \"mojaloopError\": {\n    \"errorInformation\": {\n     \"errorCode\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"errorDescription\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"extensionList\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    }\n   }\n  }\n }\n}"
												}
											]
										}
									]
								},
								{
									"name": "Retrieves all transfers",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{SENDERFSP_PM4ML_ENDPOINT}}/experience-api/transfers?startTimestamp=<string>&endTimestamp=<string>&id=<string>&institution=<string>&status=PENDING",
											"host": [
												"{{SENDERFSP_PM4ML_ENDPOINT}}"
											],
											"path": [
												"experience-api",
												"transfers"
											],
											"query": [
												{
													"key": "startTimestamp",
													"value": "<string>"
												},
												{
													"key": "endTimestamp",
													"value": "<string>"
												},
												{
													"key": "id",
													"value": "<string>"
												},
												{
													"key": "institution",
													"value": "<string>"
												},
												{
													"key": "status",
													"value": "PENDING"
												}
											]
										}
									},
									"response": [
										{
											"name": "successful operation",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/transfers?startTimestamp=<string>&endTimestamp=<string>&id=<string>&institution=<string>&status=SUCCESS",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"transfers"
													],
													"query": [
														{
															"key": "startTimestamp",
															"value": "<string>"
														},
														{
															"key": "endTimestamp",
															"value": "<string>"
														},
														{
															"key": "id",
															"value": "<string>"
														},
														{
															"key": "institution",
															"value": "<string>"
														},
														{
															"key": "status",
															"value": "SUCCESS"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n {\n  \"id\": \"dolor cupidatat\",\n  \"batchId\": 99560215,\n  \"institution\": \"proident enim Ut sit sint\",\n  \"direction\": \"OUTBOUND\",\n  \"currency\": \"SGD\",\n  \"value\": \"1899.4284\",\n  \"type\": \"P2P\",\n  \"status\": \"ERROR\",\n  \"initiatedTimestamp\": \"<string>\"\n },\n {\n  \"id\": \"voluptate ullamco aliquip eiusmod\",\n  \"batchId\": -47730517,\n  \"institution\": \"est ut\",\n  \"direction\": \"OUTBOUND\",\n  \"currency\": \"RWF\",\n  \"value\": \"28967934705214190\",\n  \"type\": \"P2P\",\n  \"status\": \"ERROR\",\n  \"initiatedTimestamp\": \"<string>\"\n }\n]"
										}
									]
								}
							]
						},
						{
							"name": "Retrieves all errors",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/errors?startTimestamp=<string>&endTimestamp=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"errors"
									],
									"query": [
										{
											"key": "startTimestamp",
											"value": "<string>"
										},
										{
											"key": "endTimestamp",
											"value": "<string>"
										}
									]
								}
							},
							"response": [
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/errors?startTimestamp=<string>&endTimestamp=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"errors"
											],
											"query": [
												{
													"key": "startTimestamp",
													"value": "<string>"
												},
												{
													"key": "endTimestamp",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n {\n  \"id\": 80996777,\n  \"direction\": \"OUTBOUND\",\n  \"type\": \"P2P\",\n  \"currency\": \"PHP\",\n  \"value\": \"0\",\n  \"errorType\": \"FROM HUB\",\n  \"committedDate\": \"<string>\"\n },\n {\n  \"id\": 10210585,\n  \"direction\": \"OUTBOUND\",\n  \"type\": \"P2P\",\n  \"currency\": \"MXN\",\n  \"value\": \"0\",\n  \"errorType\": \"FROM HUB\",\n  \"committedDate\": \"<string>\"\n }\n]"
								}
							]
						}
					]
				},
				{
					"name": "management-api",
					"item": [
						{
							"name": "environments",
							"item": [
								{
									"name": "{env Id}",
									"item": [
										{
											"name": "dfsp",
											"item": [
												{
													"name": "endpoints",
													"item": [
														{
															"name": "{ep Id}",
															"item": [
																{
																	"name": "Updates existing entry of the DFSP endpoint",
																	"request": {
																		"method": "PUT",
																		"header": [
																			{
																				"key": "Content-Type",
																				"value": "application/json"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n    \"address\": \"<string>\",\n    \"ports\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"url\": \"<string>\"\n}"
																		},
																		"url": {
																			"raw": "{{baseUrl}}/environments/:envId/dfsp/endpoints/:epId",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"environments",
																				":envId",
																				"dfsp",
																				"endpoints",
																				":epId"
																			],
																			"variable": [
																				{
																					"key": "envId",
																					"value": "<integer>",
																					"type": "string",
																					"description": "(Required) ID of environment"
																				},
																				{
																					"key": "epId",
																					"value": "<integer>",
																					"type": "string",
																					"description": "(Required) ID of environment"
																				}
																			]
																		},
																		"description": "Updates existing entry of the DFSP endpoint"
																	},
																	"response": [
																		{
																			"name": "successful operation",
																			"originalRequest": {
																				"method": "PUT",
																				"header": [],
																				"body": {
																					"mode": "raw",
																					"raw": "{\n    \"address\": \"163.10.24.28/30\",\n    \"ports\": [\n        \"80\",\n        \"8000-8080\"\n    ],\n    \"url\": \"<string>\"\n}"
																				},
																				"url": {
																					"raw": "{{baseUrl}}/environments/:envId/dfsp/endpoints/:epId",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"environments",
																						":envId",
																						"dfsp",
																						"endpoints",
																						":epId"
																					],
																					"variable": [
																						{
																							"key": "envId"
																						},
																						{
																							"key": "epId"
																						}
																					]
																				}
																			},
																			"status": "OK",
																			"code": 200,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n \"id\": -99974348,\n \"type\": \"IP\",\n \"direction\": \"INGRESS\",\n \"state\": \"INVALID\",\n \"createdDate\": \"2006-12-03T10:02:37.374Z\",\n \"createdBy\": \"sint ullamco quis in\",\n \"dfspId\": \"minim officia in\",\n \"value\": {\n  \"address\": \"163.10.24.28/30\",\n  \"ports\": [\n   \"80\",\n   \"8000-8080\"\n  ],\n  \"url\": \"<string>\"\n }\n}"
																		}
																	]
																},
																{
																	"name": "delete JWS certificate",
																	"request": {
																		"method": "DELETE",
																		"header": [],
																		"url": {
																			"raw": "{{baseUrl}}/environments/:envId/dfsp/endpoints/:epId",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"environments",
																				":envId",
																				"dfsp",
																				"endpoints",
																				":epId"
																			],
																			"variable": [
																				{
																					"key": "envId",
																					"value": "<integer>",
																					"type": "string",
																					"description": "(Required) ID of environment"
																				},
																				{
																					"key": "epId",
																					"value": "<integer>",
																					"type": "string",
																					"description": "(Required) ID of environment"
																				}
																			]
																		},
																		"description": "TBD"
																	},
																	"response": [
																		{
																			"name": "successful operation",
																			"originalRequest": {
																				"method": "DELETE",
																				"header": [],
																				"url": {
																					"raw": "{{baseUrl}}/environments/:envId/dfsp/endpoints/:epId",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"environments",
																						":envId",
																						"dfsp",
																						"endpoints",
																						":epId"
																					],
																					"variable": [
																						{
																							"key": "envId"
																						},
																						{
																							"key": "epId"
																						}
																					]
																				}
																			},
																			"status": "OK",
																			"code": 200,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n \"id\": 31530243,\n \"jwsCertificate\": \"aute ipsum ad mollit ullamco\",\n \"rootCertificate\": \"consectetur magna aute\",\n \"intermediateChain\": \"in sunt amet Lorem sint\",\n \"rootCertificateInfo\": {\n  \"subject\": {\n   \"CN\": \"labore consectetur reprehen\",\n   \"emailAddress\": \"nisi magna\",\n   \"O\": \"ut adipisicing ad\",\n   \"OU\": \"Excepteur reprehenderit\",\n   \"C\": \"sunt nulla elit officia\",\n   \"ST\": \"qui dolor\",\n   \"L\": \"minim Duis voluptate ut\"\n  },\n  \"issuer\": {\n   \"CN\": \"adipisicing reprehenderit ut\",\n   \"emailAddress\": \"voluptate quis sed aliqua\",\n   \"O\": \"ipsum elit qui\",\n   \"OU\": \"eiusmod proident et\",\n   \"C\": \"minim in dolor nulla\",\n   \"ST\": \"amet consequat magna officia qui\",\n   \"L\": \"sed non pariatur fugiat ad\"\n  },\n  \"subjectAlternativeNames\": [\n   \"cillum cupidatat incididunt dolore\",\n   \"sunt dolor id\"\n  ],\n  \"serialNumber\": \"17159976289428250189079625547205715159\",\n  \"notBefore\": \"proident enim\",\n  \"notAfter\": \"minim commodo\",\n  \"signatureAlgorithm\": \"SHA256WithRSA\"\n },\n \"intermediateChainInfo\": [\n  {\n   \"subject\": {\n    \"CN\": \"elit et\",\n    \"emailAddress\": \"incididunt Duis\",\n    \"O\": \"Duis exercitation\",\n    \"OU\": \"incididu\",\n    \"C\": \"eu sed\",\n    \"ST\": \"dolor Excepteur consectetur\",\n    \"L\": \"dolor deserunt cupidatat ullamco\"\n   },\n   \"issuer\": {\n    \"CN\": \"est eu exercitation magna consequat\",\n    \"emailAddress\": \"sint sit\",\n    \"O\": \"sed reprehenderit est veniam sint\",\n    \"OU\": \"in\",\n    \"C\": \"reprehenderit qui elit anim\",\n    \"ST\": \"aliqua esse ullamco\",\n    \"L\": \"sint proident anim\"\n   },\n   \"subjectAlternativeNames\": [\n    \"cupidatat\",\n    \"ad\"\n   ],\n   \"serialNumber\": \"17159976289428250189079625547205715159\",\n   \"notBefore\": \"amet\",\n   \"notAfter\": \"non sed amet nisi\",\n   \"signatureAlgorithm\": \"SHA256WithRSA\"\n  },\n  {\n   \"subject\": {\n    \"CN\": \"aute non labore nostrud\",\n    \"emailAddress\": \"Ut in eiusmod elit\",\n    \"O\": \"culpa veniam ea magna\",\n    \"OU\": \"labore deserunt minim\",\n    \"C\": \"ut exercitation irure dolore\",\n    \"ST\": \"ipsum amet dolore\",\n    \"L\": \"in ullamco\"\n   },\n   \"issuer\": {\n    \"CN\": \"fugiat non nostrud\",\n    \"emailAddress\": \"Lorem\",\n    \"O\": \"Ut ut\",\n    \"OU\": \"temp\",\n    \"C\": \"ad in esse consequat\",\n    \"ST\": \"culpa adipisicing irure\",\n    \"L\": \"dolore Excepteur\"\n   },\n   \"subjectAlternativeNames\": [\n    \"amet adipisicing\",\n    \"c\"\n   ],\n   \"serialNumber\": \"17159976289428250189079625547205715159\",\n   \"notBefore\": \"in in minim sint nisi\",\n   \"notAfter\": \"magna commodo ex\",\n   \"signatureAlgorithm\": \"SHA256WithRSA\"\n  }\n ],\n \"jwsCertificateInfo\": {\n  \"subject\": {\n   \"CN\": \"non\",\n   \"emailAddress\": \"irure aliqua\",\n   \"O\": \"ali\",\n   \"OU\": \"cillum eiusmod ut ex\",\n   \"C\": \"ea voluptate sunt cillum\",\n   \"ST\": \"et\",\n   \"L\": \"Duis cupidatat magna\"\n  },\n  \"issuer\": {\n   \"CN\": \"in mollit\",\n   \"emailAddress\": \"nisi\",\n   \"O\": \"et labore\",\n   \"OU\": \"commodo reprehenderit deserunt cupidatat velit\",\n   \"C\": \"dolore\",\n   \"ST\": \"mollit nisi in ut\",\n   \"L\": \"m\"\n  },\n  \"subjectAlternativeNames\": [\n   \"enim sint dolore mollit\",\n   \"Ut esse incid\"\n  ],\n  \"serialNumber\": \"17159976289428250189079625547205715159\",\n  \"notBefore\": \"anim ullamco dolore\",\n  \"notAfter\": \"fugiat adipisicing\",\n  \"signatureAlgorithm\": \"SHA256WithRSA\"\n },\n \"validations\": [\n  {\n   \"validationCode\": \"CSR_PUBLIC_KEY_LENGTH\",\n   \"performed\": false,\n   \"result\": \"NOT_AVAILABLE\",\n   \"message\": \"incididunt\",\n   \"messageTemplate\": \"esse ut amet Ut\",\n   \"data\": {},\n   \"details\": \"Duis nulla com\"\n  },\n  {\n   \"validationCode\": \"CA_CERTIFICATE_USAGE\",\n   \"performed\": true,\n   \"result\": \"INVALID\",\n   \"message\": \"qui dolor est\",\n   \"messageTemplate\": \"dolore pariatur in nisi\",\n   \"data\": {},\n   \"details\": \"minim do Ut\"\n  }\n ],\n \"validationState\": \"INVALID\"\n}"
																		}
																	]
																}
															]
														},
														{
															"name": "Adds a new entry to the DFSP endpoint",
															"request": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n    \"address\": \"<string>\",\n    \"ports\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"url\": \"<string>\"\n}"
																},
																"url": {
																	"raw": "{{baseUrl}}/environments/:envId/dfsp/endpoints",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"environments",
																		":envId",
																		"dfsp",
																		"endpoints"
																	],
																	"variable": [
																		{
																			"key": "envId",
																			"value": "<string>",
																			"type": "string",
																			"description": "(Required) ID of environment"
																		}
																	]
																},
																"description": "Adds the entry with state NEW"
															},
															"response": [
																{
																	"name": "successful operation",
																	"originalRequest": {
																		"method": "POST",
																		"header": [],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n    \"address\": \"163.10.24.28/30\",\n    \"ports\": [\n        \"80\",\n        \"8000-8080\"\n    ],\n    \"url\": \"<string>\"\n}"
																		},
																		"url": {
																			"raw": "{{baseUrl}}/environments/:envId/dfsp/endpoints",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"environments",
																				":envId",
																				"dfsp",
																				"endpoints"
																			],
																			"variable": [
																				{
																					"key": "envId"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n \"id\": -99974348,\n \"type\": \"IP\",\n \"direction\": \"INGRESS\",\n \"state\": \"INVALID\",\n \"createdDate\": \"2006-12-03T10:02:37.374Z\",\n \"createdBy\": \"sint ullamco quis in\",\n \"dfspId\": \"minim officia in\",\n \"value\": {\n  \"address\": \"163.10.24.28/30\",\n  \"ports\": [\n   \"80\",\n   \"8000-8080\"\n  ],\n  \"url\": \"<string>\"\n }\n}"
																}
															]
														},
														{
															"name": "Get the DFSP endpoints",
															"request": {
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/environments/:envId/dfsp/endpoints?direction=<string>&type=<string>&state=<string>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"environments",
																		":envId",
																		"dfsp",
																		"endpoints"
																	],
																	"query": [
																		{
																			"key": "direction",
																			"value": "<string>"
																		},
																		{
																			"key": "type",
																			"value": "<string>"
																		},
																		{
																			"key": "state",
																			"value": "<string>"
																		}
																	],
																	"variable": [
																		{
																			"key": "envId",
																			"value": "<integer>",
																			"type": "string",
																			"description": "(Required) ID of environment"
																		}
																	]
																}
															},
															"response": [
																{
																	"name": "successful operation",
																	"originalRequest": {
																		"method": "GET",
																		"header": [],
																		"url": {
																			"raw": "{{baseUrl}}/environments/:envId/dfsp/endpoints?direction=<string>&type=<string>&state=<string>",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"environments",
																				":envId",
																				"dfsp",
																				"endpoints"
																			],
																			"query": [
																				{
																					"key": "direction",
																					"value": "<string>"
																				},
																				{
																					"key": "type",
																					"value": "<string>"
																				},
																				{
																					"key": "state",
																					"value": "<string>"
																				}
																			],
																			"variable": [
																				{
																					"key": "envId"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n \"id\": -99974348,\n \"type\": \"IP\",\n \"direction\": \"INGRESS\",\n \"state\": \"INVALID\",\n \"createdDate\": \"2006-12-03T10:02:37.374Z\",\n \"createdBy\": \"sint ullamco quis in\",\n \"dfspId\": \"minim officia in\",\n \"value\": {\n  \"address\": \"163.10.24.28/30\",\n  \"ports\": [\n   \"80\",\n   \"8000-8080\"\n  ],\n  \"url\": \"<string>\"\n }\n}"
																}
															]
														}
													]
												},
												{
													"name": "servercerts",
													"item": [
														{
															"name": "get dfsp server certs",
															"request": {
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/environments/:envId/dfsp/servercerts",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"environments",
																		":envId",
																		"dfsp",
																		"servercerts"
																	],
																	"variable": [
																		{
																			"key": "envId",
																			"value": "<string>",
																			"type": "string",
																			"description": "(Required) ID of environment"
																		}
																	]
																},
																"description": "TBD"
															},
															"response": [
																{
																	"name": "successful operation",
																	"originalRequest": {
																		"method": "GET",
																		"header": [],
																		"url": {
																			"raw": "{{baseUrl}}/environments/:envId/dfsp/servercerts",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"environments",
																				":envId",
																				"dfsp",
																				"servercerts"
																			],
																			"variable": [
																				{
																					"key": "envId"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n \"rootCertificate\": \"ad esse dolor\",\n \"intermediateChain\": \"consectetur proident non\",\n \"serverCertificate\": \"proident Excepteur anim aliqua deserunt\",\n \"id\": 15909159,\n \"rootCertificateInfo\": {\n  \"subject\": {\n   \"CN\": \"aute dolor dolore occaecat pariatur\",\n   \"emailAddress\": \"exercitation adipisicing fugiat nisi ut\",\n   \"O\": \"amet voluptate minim nisi\",\n   \"OU\": \"eu laboru\",\n   \"C\": \"dolor reprehenderit id\",\n   \"ST\": \"ut dolor cupidatat et\",\n   \"L\": \"pariatur non amet\"\n  },\n  \"issuer\": {\n   \"CN\": \"enim dolor non aliqua reprehenderit\",\n   \"emailAddress\": \"aute\",\n   \"O\": \"commodo aute elit\",\n   \"OU\": \"proident enim\",\n   \"C\": \"adipisicing id ipsum\",\n   \"ST\": \"et\",\n   \"L\": \"deserunt exercitation cupidatat\"\n  },\n  \"subjectAlternativeNames\": [\n   \"laborum incididunt\",\n   \"in exercitation Duis\"\n  ],\n  \"serialNumber\": \"17159976289428250189079625547205715159\",\n  \"notBefore\": \"sint ad\",\n  \"notAfter\": \"magna proident\",\n  \"signatureAlgorithm\": \"SHA256WithRSA\"\n },\n \"intermediateChainInfo\": [\n  {\n   \"subject\": {\n    \"CN\": \"dolore ut ipsum\",\n    \"emailAddress\": \"est\",\n    \"O\": \"adipisicing est\",\n    \"OU\": \"ut commodo\",\n    \"C\": \"ad incididunt dolor Duis ullamco\",\n    \"ST\": \"fugiat qui est ex\",\n    \"L\": \"tempor aliquip\"\n   },\n   \"issuer\": {\n    \"CN\": \"nostrud\",\n    \"emailAddress\": \"laborum aliquip est\",\n    \"O\": \"dolor\",\n    \"OU\": \"qui nisi cu\",\n    \"C\": \"ad\",\n    \"ST\": \"mollit ut veniam aute\",\n    \"L\": \"aute\"\n   },\n   \"subjectAlternativeNames\": [\n    \"exercitation\",\n    \"in Lorem aute enim\"\n   ],\n   \"serialNumber\": \"17159976289428250189079625547205715159\",\n   \"notBefore\": \"pariatur mollit dolore\",\n   \"notAfter\": \"proident quis esse\",\n   \"signatureAlgorithm\": \"SHA256WithRSA\"\n  },\n  {\n   \"subject\": {\n    \"CN\": \"fugiat aute in\",\n    \"emailAddress\": \"ut\",\n    \"O\": \"nostrud dolore sed irure laboris\",\n    \"OU\": \"esse\",\n    \"C\": \"ad qui velit pariatur\",\n    \"ST\": \"nulla non laborum\",\n    \"L\": \"ad aute\"\n   },\n   \"issuer\": {\n    \"CN\": \"adipisicing\",\n    \"emailAddress\": \"nisi consectetur cupidatat anim\",\n    \"O\": \"ex dolor ut nostrud\",\n    \"OU\": \"Excepteur officia\",\n    \"C\": \"do aliqua eiusmod\",\n    \"ST\": \"anim cupidatat Lorem laborum nisi\",\n    \"L\": \"anim nulla velit\"\n   },\n   \"subjectAlternativeNames\": [\n    \"tempor cillum dolor enim\",\n    \"minim officia Ut\"\n   ],\n   \"serialNumber\": \"17159976289428250189079625547205715159\",\n   \"notBefore\": \"\",\n   \"notAfter\": \"incididunt sint proident\",\n   \"signatureAlgorithm\": \"SHA256WithRSA\"\n  }\n ],\n \"serverCertificateInfo\": {\n  \"subject\": {\n   \"CN\": \"non\",\n   \"emailAddress\": \"id quis esse\",\n   \"O\": \"eu ullamco\",\n   \"OU\": \"nulla aute Lorem nisi\",\n   \"C\": \"elit dolore i\",\n   \"ST\": \"adipisicing\",\n   \"L\": \"anim Duis esse\"\n  },\n  \"issuer\": {\n   \"CN\": \"laborum quis cupidatat eiusmod\",\n   \"emailAddress\": \"sed\",\n   \"O\": \"quis amet Duis in in\",\n   \"OU\": \"pariatur voluptate Duis\",\n   \"C\": \"Duis dolor voluptate incidid\",\n   \"ST\": \"quis sunt\",\n   \"L\": \"aute\"\n  },\n  \"subjectAlternativeNames\": [\n   \"magna labore aliquip\",\n   \"pariatur reprehender\"\n  ],\n  \"serialNumber\": \"17159976289428250189079625547205715159\",\n  \"notBefore\": \"reprehenderit adipisicing qui\",\n  \"notAfter\": \"tempor pariatur minim\",\n  \"signatureAlgorithm\": \"SHA256WithRSA\"\n },\n \"validations\": [\n  {\n   \"validationCode\": \"CERTIFICATE_VALID_OCSP\",\n   \"performed\": false,\n   \"result\": \"NOT_AVAILABLE\",\n   \"message\": \"tempor aute\",\n   \"messageTemplate\": \"ex eu pariatur\",\n   \"data\": {},\n   \"details\": \"do sed\"\n  },\n  {\n   \"validationCode\": \"CSR_PUBLIC_KEY_LENGTH\",\n   \"performed\": false,\n   \"result\": \"INVALID\",\n   \"message\": \"cupidatat nulla enim\",\n   \"messageTemplate\": \"con\",\n   \"data\": {},\n   \"details\": \"in laboris reprehenderit\"\n  }\n ],\n \"validationState\": \"VALID\",\n \"state\": false\n}"
																}
															]
														},
														{
															"name": "post server certificate",
															"request": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n    \"rootCertificate\": \"<string>\",\n    \"intermediateChain\": \"<string>\",\n    \"serverCertificate\": \"<string>\"\n}"
																},
																"url": {
																	"raw": "{{baseUrl}}/environments/:envId/dfsp/servercerts",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"environments",
																		":envId",
																		"dfsp",
																		"servercerts"
																	],
																	"variable": [
																		{
																			"key": "envId",
																			"value": "<string>",
																			"type": "string",
																			"description": "(Required) ID of environment"
																		}
																	]
																},
																"description": "TBD"
															},
															"response": [
																{
																	"name": "successful operation",
																	"originalRequest": {
																		"method": "POST",
																		"header": [],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n    \"rootCertificate\": \"<string>\",\n    \"intermediateChain\": \"<string>\",\n    \"serverCertificate\": \"<string>\"\n}"
																		},
																		"url": {
																			"raw": "{{baseUrl}}/environments/:envId/dfsp/servercerts",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"environments",
																				":envId",
																				"dfsp",
																				"servercerts"
																			],
																			"variable": [
																				{
																					"key": "envId"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n \"rootCertificate\": \"<string>\",\n \"intermediateChain\": \"<string>\",\n \"serverCertificate\": \"<string>\",\n \"id\": -41795320,\n \"rootCertificateInfo\": {\n  \"subject\": {\n   \"CN\": \"aliqua ex officia ea\",\n   \"emailAddress\": \"ea ad consequat ut\",\n   \"O\": \"dolor\",\n   \"OU\": \"enim officia\",\n   \"C\": \"tempor laboris\",\n   \"ST\": \"veniam culpa tempor\",\n   \"L\": \"labore do ullamco\"\n  },\n  \"issuer\": {\n   \"CN\": \"est in\",\n   \"emailAddress\": \"labore tempor eu a\",\n   \"O\": \"sint\",\n   \"OU\": \"Duis irure nostrud\",\n   \"C\": \"cupidatat ut deserunt\",\n   \"ST\": \"Ut\",\n   \"L\": \"do\"\n  },\n  \"subjectAlternativeNames\": [\n   \"ut aliqua velit ipsum\",\n   \"nisi dolor\"\n  ],\n  \"serialNumber\": \"17159976289428250189079625547205715159\",\n  \"notBefore\": \"e\",\n  \"notAfter\": \"dolor aliquip\",\n  \"signatureAlgorithm\": \"SHA256WithRSA\"\n },\n \"intermediateChainInfo\": [\n  {\n   \"subject\": {\n    \"CN\": \"magna\",\n    \"emailAddress\": \"aliquip commodo e\",\n    \"O\": \"officia Ut ex enim\",\n    \"OU\": \"ad\",\n    \"C\": \"consequat Duis veniam ipsum\",\n    \"ST\": \"dolor Ut dolore\",\n    \"L\": \"officia\"\n   },\n   \"issuer\": {\n    \"CN\": \"minim \",\n    \"emailAddress\": \"irure incididunt ullamco aliquip\",\n    \"O\": \"sint occaecat\",\n    \"OU\": \"in labore id\",\n    \"C\": \"deserunt\",\n    \"ST\": \"ipsum dolore labore esse\",\n    \"L\": \"ad\"\n   },\n   \"subjectAlternativeNames\": [\n    \"velit nostrud nulla Ut\",\n    \"aute mollit esse\"\n   ],\n   \"serialNumber\": \"17159976289428250189079625547205715159\",\n   \"notBefore\": \"id incididunt minim non fugiat\",\n   \"notAfter\": \"id\",\n   \"signatureAlgorithm\": \"SHA256WithRSA\"\n  },\n  {\n   \"subject\": {\n    \"CN\": \"occaecat nisi id reprehenderit consectetur\",\n    \"emailAddress\": \"amet elit\",\n    \"O\": \"reprehenderit ad id velit\",\n    \"OU\": \"incididunt Excepteur\",\n    \"C\": \"pariatur labori\",\n    \"ST\": \"aliqua mollit Excepteur\",\n    \"L\": \"aliquip non culpa in\"\n   },\n   \"issuer\": {\n    \"CN\": \"amet ipsum\",\n    \"emailAddress\": \"ut sed\",\n    \"O\": \"ut culpa commodo ullamco adipisicing\",\n    \"OU\": \"consectetur ex pariatur culpa ad\",\n    \"C\": \"dolore\",\n    \"ST\": \"ex sint amet\",\n    \"L\": \"nostrud ad\"\n   },\n   \"subjectAlternativeNames\": [\n    \"amet qui nulla consequat exercitation\",\n    \"culpa dolor minim\"\n   ],\n   \"serialNumber\": \"17159976289428250189079625547205715159\",\n   \"notBefore\": \"Excepteur voluptate\",\n   \"notAfter\": \"dolore ut\",\n   \"signatureAlgorithm\": \"SHA256WithRSA\"\n  }\n ],\n \"serverCertificateInfo\": {\n  \"subject\": {\n   \"CN\": \"p\",\n   \"emailAddress\": \"anim irure quis\",\n   \"O\": \"cil\",\n   \"OU\": \"minim\",\n   \"C\": \"id occaecat\",\n   \"ST\": \"dolor anim cupidatat sed exercitation\",\n   \"L\": \"ullamco in\"\n  },\n  \"issuer\": {\n   \"CN\": \"do\",\n   \"emailAddress\": \"in nisi\",\n   \"O\": \"ut ad qui\",\n   \"OU\": \"nisi dolore sit\",\n   \"C\": \"quis\",\n   \"ST\": \"aute nostrud anim et\",\n   \"L\": \"do\"\n  },\n  \"subjectAlternativeNames\": [\n   \"dolore mollit\",\n   \"qui officia in sint\"\n  ],\n  \"serialNumber\": \"17159976289428250189079625547205715159\",\n  \"notBefore\": \"amet veniam\",\n  \"notAfter\": \"tempor sunt\",\n  \"signatureAlgorithm\": \"SHA256WithRSA\"\n },\n \"validations\": [\n  {\n   \"validationCode\": \"CERTIFICATE_USAGE_CLIENT\",\n   \"performed\": false,\n   \"result\": \"NOT_AVAILABLE\",\n   \"message\": \"cupidatat elit ipsum\",\n   \"messageTemplate\": \"non mollit\",\n   \"data\": {},\n   \"details\": \"minim elit consequat amet\"\n  },\n  {\n   \"validationCode\": \"CSR_PUBLIC_KEY_LENGTH\",\n   \"performed\": true,\n   \"result\": \"NOT_AVAILABLE\",\n   \"message\": \"officia sit\",\n   \"messageTemplate\": \"\",\n   \"data\": {},\n   \"details\": \"laboris occaecat anim eli\"\n  }\n ],\n \"validationState\": \"VALID\",\n \"state\": false\n}"
																}
															]
														}
													]
												},
												{
													"name": "jwscerts",
													"item": [
														{
															"name": "get jws server certs",
															"request": {
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/environments/:envId/dfsp/jwscerts",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"environments",
																		":envId",
																		"dfsp",
																		"jwscerts"
																	],
																	"variable": [
																		{
																			"key": "envId",
																			"value": "<string>",
																			"type": "string",
																			"description": "(Required) ID of environment"
																		}
																	]
																},
																"description": "TBD"
															},
															"response": [
																{
																	"name": "successful operation",
																	"originalRequest": {
																		"method": "GET",
																		"header": [],
																		"url": {
																			"raw": "{{baseUrl}}/environments/:envId/dfsp/jwscerts",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"environments",
																				":envId",
																				"dfsp",
																				"jwscerts"
																			],
																			"variable": [
																				{
																					"key": "envId"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n \"id\": -39436846,\n \"jwsCertificate\": \"et\",\n \"rootCertificate\": \"non magna pariatur eu\",\n \"intermediateChain\": \"Ut aute\",\n \"rootCertificateInfo\": {\n  \"subject\": {\n   \"CN\": \"Excepteur occaecat pariatur\",\n   \"emailAddress\": \"ut\",\n   \"O\": \"quis magna\",\n   \"OU\": \"sed veniam\",\n   \"C\": \"sit Excepteur cupidatat\",\n   \"ST\": \"cupidatat cillum\",\n   \"L\": \"sed incididunt volu\"\n  },\n  \"issuer\": {\n   \"CN\": \"Duis officia anim in\",\n   \"emailAddress\": \"dolore\",\n   \"O\": \"reprehenderit do id laborum\",\n   \"OU\": \"ex commodo sed Lorem\",\n   \"C\": \"dolore reprehenderit Duis culpa aliqua\",\n   \"ST\": \"dolor\",\n   \"L\": \"Excepteur exercitation id c\"\n  },\n  \"subjectAlternativeNames\": [\n   \"irure eu\",\n   \"ut esse reprehenderit commodo nostrud\"\n  ],\n  \"serialNumber\": \"17159976289428250189079625547205715159\",\n  \"notBefore\": \"Lorem tempor dolore\",\n  \"notAfter\": \"eu \",\n  \"signatureAlgorithm\": \"SHA256WithRSA\"\n },\n \"intermediateChainInfo\": [\n  {\n   \"subject\": {\n    \"CN\": \"dolore\",\n    \"emailAddress\": \"aute minim id cillu\",\n    \"O\": \"officia non in veniam\",\n    \"OU\": \"in mollit\",\n    \"C\": \"dolore ut quis minim\",\n    \"ST\": \"cupidatat Ut\",\n    \"L\": \"id mollit fugiat\"\n   },\n   \"issuer\": {\n    \"CN\": \"sunt ulla\",\n    \"emailAddress\": \"veniam reprehenderit anim aliquip\",\n    \"O\": \"elit in sed ullamco eiusmod\",\n    \"OU\": \"officia\",\n    \"C\": \"ad cupidatat voluptate sit in\",\n    \"ST\": \"est deserunt ullamco dolore velit\",\n    \"L\": \"nisi consectetur occaec\"\n   },\n   \"subjectAlternativeNames\": [\n    \"pariatur dolor veniam quis\",\n    \"ad non consectetur aliquip aliqua\"\n   ],\n   \"serialNumber\": \"17159976289428250189079625547205715159\",\n   \"notBefore\": \"laborum incididunt\",\n   \"notAfter\": \"incididunt irure in dolore do\",\n   \"signatureAlgorithm\": \"SHA256WithRSA\"\n  },\n  {\n   \"subject\": {\n    \"CN\": \"ad ea\",\n    \"emailAddress\": \"tempor aliqua\",\n    \"O\": \"fugiat do culpa\",\n    \"OU\": \"sed qui\",\n    \"C\": \"fugiat sunt cillum aliqua\",\n    \"ST\": \"ea\",\n    \"L\": \"ipsum incididunt et in\"\n   },\n   \"issuer\": {\n    \"CN\": \"id sed et laborum\",\n    \"emailAddress\": \"eu\",\n    \"O\": \"ea laboris\",\n    \"OU\": \"deserunt eu ea dolor\",\n    \"C\": \"tempor dolore velit in\",\n    \"ST\": \"pariatur fugiat quis dolor\",\n    \"L\": \"officia culp\"\n   },\n   \"subjectAlternativeNames\": [\n    \"ex ea\",\n    \"minim consequat aliquip\"\n   ],\n   \"serialNumber\": \"17159976289428250189079625547205715159\",\n   \"notBefore\": \"enim nostru\",\n   \"notAfter\": \"in sit ipsum aute eu\",\n   \"signatureAlgorithm\": \"SHA256WithRSA\"\n  }\n ],\n \"jwsCertificateInfo\": {\n  \"subject\": {\n   \"CN\": \"magna\",\n   \"emailAddress\": \"veniam ma\",\n   \"O\": \"non et pariatur\",\n   \"OU\": \"deserunt cupidatat in\",\n   \"C\": \"id pariatur\",\n   \"ST\": \"consectetur elit pariatur\",\n   \"L\": \"sit proident do Ut\"\n  },\n  \"issuer\": {\n   \"CN\": \"pariatur enim est\",\n   \"emailAddress\": \"proi\",\n   \"O\": \"veniam amet\",\n   \"OU\": \"pariatur dolor laborum consectetur dolor\",\n   \"C\": \"esse Ut deserunt\",\n   \"ST\": \"consequat in\",\n   \"L\": \"nisi tempor pariatur qui\"\n  },\n  \"subjectAlternativeNames\": [\n   \"anim enim nostrud ut\",\n   \"officia dolor anim aliquip nostrud\"\n  ],\n  \"serialNumber\": \"17159976289428250189079625547205715159\",\n  \"notBefore\": \"nisi enim\",\n  \"notAfter\": \"veniam eiusmod\",\n  \"signatureAlgorithm\": \"SHA256WithRSA\"\n },\n \"validations\": [\n  {\n   \"validationCode\": \"CERTIFICATE_CHAIN\",\n   \"performed\": false,\n   \"result\": \"NOT_AVAILABLE\",\n   \"message\": \"ut\",\n   \"messageTemplate\": \"magna exercitation laborum\",\n   \"data\": {},\n   \"details\": \"ut est\"\n  },\n  {\n   \"validationCode\": \"CA_CERTIFICATE_USAGE\",\n   \"performed\": false,\n   \"result\": \"INVALID\",\n   \"message\": \"elit voluptate co\",\n   \"messageTemplate\": \"reprehenderit officia esse in sint\",\n   \"data\": {},\n   \"details\": \"ex anim ipsum eiusmod\"\n  }\n ],\n \"validationState\": \"VALID\",\n \"dfspId\": \"incidi\"\n}"
																}
															]
														},
														{
															"name": "update JWS certificate",
															"request": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n    \"jwsCertificate\": \"<string>\",\n    \"rootCertificate\": \"<string>\",\n    \"intermediateChain\": \"<string>\"\n}"
																},
																"url": {
																	"raw": "{{baseUrl}}/environments/:envId/dfsp/jwscerts",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"environments",
																		":envId",
																		"dfsp",
																		"jwscerts"
																	],
																	"variable": [
																		{
																			"key": "envId",
																			"value": "<string>",
																			"type": "string",
																			"description": "(Required) ID of environment"
																		}
																	]
																},
																"description": "TBD"
															},
															"response": [
																{
																	"name": "successful operation",
																	"originalRequest": {
																		"method": "PUT",
																		"header": [],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n    \"jwsCertificate\": \"<string>\",\n    \"rootCertificate\": \"<string>\",\n    \"intermediateChain\": \"<string>\"\n}"
																		},
																		"url": {
																			"raw": "{{baseUrl}}/environments/:envId/dfsp/jwscerts",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"environments",
																				":envId",
																				"dfsp",
																				"jwscerts"
																			],
																			"variable": [
																				{
																					"key": "envId"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n \"id\": -96445438,\n \"jwsCertificate\": \"<string>\",\n \"rootCertificate\": \"<string>\",\n \"intermediateChain\": \"<string>\",\n \"rootCertificateInfo\": {\n  \"subject\": {\n   \"CN\": \"veniam Excepteur incididunt irure sed\",\n   \"emailAddress\": \"ad ut\",\n   \"O\": \"cillum reprehenderit culpa aliquip\",\n   \"OU\": \"cillum laborum\",\n   \"C\": \"et sit proident ipsum voluptate\",\n   \"ST\": \"culpa\",\n   \"L\": \"voluptate in elit eiusmod\"\n  },\n  \"issuer\": {\n   \"CN\": \"nulla pariatur labore est nisi\",\n   \"emailAddress\": \"eu\",\n   \"O\": \"reprehenderit proident\",\n   \"OU\": \"aliquip\",\n   \"C\": \"do in dolor s\",\n   \"ST\": \"Ut laborum elit laboris\",\n   \"L\": \"sed\"\n  },\n  \"subjectAlternativeNames\": [\n   \"velit ea id ad officia\",\n   \"esse ut eiusmod\"\n  ],\n  \"serialNumber\": \"17159976289428250189079625547205715159\",\n  \"notBefore\": \"mollit ea laboris enim\",\n  \"notAfter\": \"ut aute\",\n  \"signatureAlgorithm\": \"SHA256WithRSA\"\n },\n \"intermediateChainInfo\": [\n  {\n   \"subject\": {\n    \"CN\": \"ullamco non eiusmod labore ut\",\n    \"emailAddress\": \"sint officia\",\n    \"O\": \"consequat irure sunt\",\n    \"OU\": \"qui irure dolor ad\",\n    \"C\": \"adipisicing sint commodo\",\n    \"ST\": \"consectetur sunt labore fugiat\",\n    \"L\": \"laboris anim esse\"\n   },\n   \"issuer\": {\n    \"CN\": \"aliquip tempor\",\n    \"emailAddress\": \"sed eu sint occaecat\",\n    \"O\": \"et reprehenderit ut dolor\",\n    \"OU\": \"irure amet\",\n    \"C\": \"au\",\n    \"ST\": \"in elit sint veniam dolor\",\n    \"L\": \"ut\"\n   },\n   \"subjectAlternativeNames\": [\n    \"esse\",\n    \"sint sed in cupidatat\"\n   ],\n   \"serialNumber\": \"17159976289428250189079625547205715159\",\n   \"notBefore\": \"qui in quis\",\n   \"notAfter\": \"minim id\",\n   \"signatureAlgorithm\": \"SHA256WithRSA\"\n  },\n  {\n   \"subject\": {\n    \"CN\": \"quis est ea nostrud\",\n    \"emailAddress\": \"cillum occaecat tempor laboris fugiat\",\n    \"O\": \"dolore\",\n    \"OU\": \"sed magna qui et\",\n    \"C\": \"laboris ipsum sed\",\n    \"ST\": \"l\",\n    \"L\": \"al\"\n   },\n   \"issuer\": {\n    \"CN\": \"cillum fugiat\",\n    \"emailAddress\": \"esse aliquip mollit laboris anim\",\n    \"O\": \"aliqua incididunt\",\n    \"OU\": \"ullamco dolor tempor sit sed\",\n    \"C\": \"tempor aute\",\n    \"ST\": \"minim labore officia consectetur\",\n    \"L\": \"aliquip elit quis culpa\"\n   },\n   \"subjectAlternativeNames\": [\n    \"ex dolore nulla in\",\n    \"non officia amet\"\n   ],\n   \"serialNumber\": \"17159976289428250189079625547205715159\",\n   \"notBefore\": \"irure id\",\n   \"notAfter\": \"laborum nostr\",\n   \"signatureAlgorithm\": \"SHA256WithRSA\"\n  }\n ],\n \"jwsCertificateInfo\": {\n  \"subject\": {\n   \"CN\": \"non cillum consectetur ullamco laborum\",\n   \"emailAddress\": \"ullamco laborum\",\n   \"O\": \"nulla quis laborum\",\n   \"OU\": \"nostrud occaecat id\",\n   \"C\": \"veniam dolore sed voluptate ex\",\n   \"ST\": \"minim\",\n   \"L\": \"et magna dolor\"\n  },\n  \"issuer\": {\n   \"CN\": \"in et Ut aute anim\",\n   \"emailAddress\": \"non nostrud proident\",\n   \"O\": \"non \",\n   \"OU\": \"Lorem\",\n   \"C\": \"ipsum cillum consectetur\",\n   \"ST\": \"Lorem eu\",\n   \"L\": \"ea\"\n  },\n  \"subjectAlternativeNames\": [\n   \"Duis aute sit\",\n   \"ut occaecat\"\n  ],\n  \"serialNumber\": \"17159976289428250189079625547205715159\",\n  \"notBefore\": \"ea dolor aliqua dolore\",\n  \"notAfter\": \"aliquip\",\n  \"signatureAlgorithm\": \"SHA256WithRSA\"\n },\n \"validations\": [\n  {\n   \"validationCode\": \"CERTIFICATE_VALID_CRL\",\n   \"performed\": false,\n   \"result\": \"VALID\",\n   \"message\": \"veniam adipisicing\",\n   \"messageTemplate\": \"sed consequat ut reprehenderit amet\",\n   \"data\": {},\n   \"details\": \"laborum\"\n  },\n  {\n   \"validationCode\": \"CERTIFICATE_USAGE_CLIENT\",\n   \"performed\": false,\n   \"result\": \"INVALID\",\n   \"message\": \"sunt ut minim\",\n   \"messageTemplate\": \"enim Lorem voluptate proident\",\n   \"data\": {},\n   \"details\": \"dolor ipsum\"\n  }\n ],\n \"validationState\": \"NOT_AVAILABLE\"\n}"
																}
															]
														},
														{
															"name": "delete JWS certificate",
															"request": {
																"method": "DELETE",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/environments/:envId/dfsp/jwscerts",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"environments",
																		":envId",
																		"dfsp",
																		"jwscerts"
																	],
																	"variable": [
																		{
																			"key": "envId",
																			"value": "<string>",
																			"type": "string",
																			"description": "(Required) ID of environment"
																		}
																	]
																},
																"description": "TBD"
															},
															"response": [
																{
																	"name": "successful operation",
																	"originalRequest": {
																		"method": "DELETE",
																		"header": [],
																		"url": {
																			"raw": "{{baseUrl}}/environments/:envId/dfsp/jwscerts",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"environments",
																				":envId",
																				"dfsp",
																				"jwscerts"
																			],
																			"variable": [
																				{
																					"key": "envId"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n \"id\": -96445438,\n \"jwsCertificate\": \"<string>\",\n \"rootCertificate\": \"<string>\",\n \"intermediateChain\": \"<string>\",\n \"rootCertificateInfo\": {\n  \"subject\": {\n   \"CN\": \"veniam Excepteur incididunt irure sed\",\n   \"emailAddress\": \"ad ut\",\n   \"O\": \"cillum reprehenderit culpa aliquip\",\n   \"OU\": \"cillum laborum\",\n   \"C\": \"et sit proident ipsum voluptate\",\n   \"ST\": \"culpa\",\n   \"L\": \"voluptate in elit eiusmod\"\n  },\n  \"issuer\": {\n   \"CN\": \"nulla pariatur labore est nisi\",\n   \"emailAddress\": \"eu\",\n   \"O\": \"reprehenderit proident\",\n   \"OU\": \"aliquip\",\n   \"C\": \"do in dolor s\",\n   \"ST\": \"Ut laborum elit laboris\",\n   \"L\": \"sed\"\n  },\n  \"subjectAlternativeNames\": [\n   \"velit ea id ad officia\",\n   \"esse ut eiusmod\"\n  ],\n  \"serialNumber\": \"17159976289428250189079625547205715159\",\n  \"notBefore\": \"mollit ea laboris enim\",\n  \"notAfter\": \"ut aute\",\n  \"signatureAlgorithm\": \"SHA256WithRSA\"\n },\n \"intermediateChainInfo\": [\n  {\n   \"subject\": {\n    \"CN\": \"ullamco non eiusmod labore ut\",\n    \"emailAddress\": \"sint officia\",\n    \"O\": \"consequat irure sunt\",\n    \"OU\": \"qui irure dolor ad\",\n    \"C\": \"adipisicing sint commodo\",\n    \"ST\": \"consectetur sunt labore fugiat\",\n    \"L\": \"laboris anim esse\"\n   },\n   \"issuer\": {\n    \"CN\": \"aliquip tempor\",\n    \"emailAddress\": \"sed eu sint occaecat\",\n    \"O\": \"et reprehenderit ut dolor\",\n    \"OU\": \"irure amet\",\n    \"C\": \"au\",\n    \"ST\": \"in elit sint veniam dolor\",\n    \"L\": \"ut\"\n   },\n   \"subjectAlternativeNames\": [\n    \"esse\",\n    \"sint sed in cupidatat\"\n   ],\n   \"serialNumber\": \"17159976289428250189079625547205715159\",\n   \"notBefore\": \"qui in quis\",\n   \"notAfter\": \"minim id\",\n   \"signatureAlgorithm\": \"SHA256WithRSA\"\n  },\n  {\n   \"subject\": {\n    \"CN\": \"quis est ea nostrud\",\n    \"emailAddress\": \"cillum occaecat tempor laboris fugiat\",\n    \"O\": \"dolore\",\n    \"OU\": \"sed magna qui et\",\n    \"C\": \"laboris ipsum sed\",\n    \"ST\": \"l\",\n    \"L\": \"al\"\n   },\n   \"issuer\": {\n    \"CN\": \"cillum fugiat\",\n    \"emailAddress\": \"esse aliquip mollit laboris anim\",\n    \"O\": \"aliqua incididunt\",\n    \"OU\": \"ullamco dolor tempor sit sed\",\n    \"C\": \"tempor aute\",\n    \"ST\": \"minim labore officia consectetur\",\n    \"L\": \"aliquip elit quis culpa\"\n   },\n   \"subjectAlternativeNames\": [\n    \"ex dolore nulla in\",\n    \"non officia amet\"\n   ],\n   \"serialNumber\": \"17159976289428250189079625547205715159\",\n   \"notBefore\": \"irure id\",\n   \"notAfter\": \"laborum nostr\",\n   \"signatureAlgorithm\": \"SHA256WithRSA\"\n  }\n ],\n \"jwsCertificateInfo\": {\n  \"subject\": {\n   \"CN\": \"non cillum consectetur ullamco laborum\",\n   \"emailAddress\": \"ullamco laborum\",\n   \"O\": \"nulla quis laborum\",\n   \"OU\": \"nostrud occaecat id\",\n   \"C\": \"veniam dolore sed voluptate ex\",\n   \"ST\": \"minim\",\n   \"L\": \"et magna dolor\"\n  },\n  \"issuer\": {\n   \"CN\": \"in et Ut aute anim\",\n   \"emailAddress\": \"non nostrud proident\",\n   \"O\": \"non \",\n   \"OU\": \"Lorem\",\n   \"C\": \"ipsum cillum consectetur\",\n   \"ST\": \"Lorem eu\",\n   \"L\": \"ea\"\n  },\n  \"subjectAlternativeNames\": [\n   \"Duis aute sit\",\n   \"ut occaecat\"\n  ],\n  \"serialNumber\": \"17159976289428250189079625547205715159\",\n  \"notBefore\": \"ea dolor aliqua dolore\",\n  \"notAfter\": \"aliquip\",\n  \"signatureAlgorithm\": \"SHA256WithRSA\"\n },\n \"validations\": [\n  {\n   \"validationCode\": \"CERTIFICATE_VALID_CRL\",\n   \"performed\": false,\n   \"result\": \"VALID\",\n   \"message\": \"veniam adipisicing\",\n   \"messageTemplate\": \"sed consequat ut reprehenderit amet\",\n   \"data\": {},\n   \"details\": \"laborum\"\n  },\n  {\n   \"validationCode\": \"CERTIFICATE_USAGE_CLIENT\",\n   \"performed\": false,\n   \"result\": \"INVALID\",\n   \"message\": \"sunt ut minim\",\n   \"messageTemplate\": \"enim Lorem voluptate proident\",\n   \"data\": {},\n   \"details\": \"dolor ipsum\"\n  }\n ],\n \"validationState\": \"NOT_AVAILABLE\"\n}"
																}
															]
														},
														{
															"name": "create JWS certificate",
															"request": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n    \"jwsCertificate\": \"<string>\",\n    \"rootCertificate\": \"<string>\",\n    \"intermediateChain\": \"<string>\"\n}"
																},
																"url": {
																	"raw": "{{baseUrl}}/environments/:envId/dfsp/jwscerts",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"environments",
																		":envId",
																		"dfsp",
																		"jwscerts"
																	],
																	"variable": [
																		{
																			"key": "envId",
																			"value": "<string>",
																			"type": "string",
																			"description": "(Required) ID of environment"
																		}
																	]
																},
																"description": "TBD"
															},
															"response": [
																{
																	"name": "successful operation",
																	"originalRequest": {
																		"method": "POST",
																		"header": [],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n    \"jwsCertificate\": \"<string>\",\n    \"rootCertificate\": \"<string>\",\n    \"intermediateChain\": \"<string>\"\n}"
																		},
																		"url": {
																			"raw": "{{baseUrl}}/environments/:envId/dfsp/jwscerts",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"environments",
																				":envId",
																				"dfsp",
																				"jwscerts"
																			],
																			"variable": [
																				{
																					"key": "envId"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n \"id\": -96445438,\n \"jwsCertificate\": \"<string>\",\n \"rootCertificate\": \"<string>\",\n \"intermediateChain\": \"<string>\",\n \"rootCertificateInfo\": {\n  \"subject\": {\n   \"CN\": \"veniam Excepteur incididunt irure sed\",\n   \"emailAddress\": \"ad ut\",\n   \"O\": \"cillum reprehenderit culpa aliquip\",\n   \"OU\": \"cillum laborum\",\n   \"C\": \"et sit proident ipsum voluptate\",\n   \"ST\": \"culpa\",\n   \"L\": \"voluptate in elit eiusmod\"\n  },\n  \"issuer\": {\n   \"CN\": \"nulla pariatur labore est nisi\",\n   \"emailAddress\": \"eu\",\n   \"O\": \"reprehenderit proident\",\n   \"OU\": \"aliquip\",\n   \"C\": \"do in dolor s\",\n   \"ST\": \"Ut laborum elit laboris\",\n   \"L\": \"sed\"\n  },\n  \"subjectAlternativeNames\": [\n   \"velit ea id ad officia\",\n   \"esse ut eiusmod\"\n  ],\n  \"serialNumber\": \"17159976289428250189079625547205715159\",\n  \"notBefore\": \"mollit ea laboris enim\",\n  \"notAfter\": \"ut aute\",\n  \"signatureAlgorithm\": \"SHA256WithRSA\"\n },\n \"intermediateChainInfo\": [\n  {\n   \"subject\": {\n    \"CN\": \"ullamco non eiusmod labore ut\",\n    \"emailAddress\": \"sint officia\",\n    \"O\": \"consequat irure sunt\",\n    \"OU\": \"qui irure dolor ad\",\n    \"C\": \"adipisicing sint commodo\",\n    \"ST\": \"consectetur sunt labore fugiat\",\n    \"L\": \"laboris anim esse\"\n   },\n   \"issuer\": {\n    \"CN\": \"aliquip tempor\",\n    \"emailAddress\": \"sed eu sint occaecat\",\n    \"O\": \"et reprehenderit ut dolor\",\n    \"OU\": \"irure amet\",\n    \"C\": \"au\",\n    \"ST\": \"in elit sint veniam dolor\",\n    \"L\": \"ut\"\n   },\n   \"subjectAlternativeNames\": [\n    \"esse\",\n    \"sint sed in cupidatat\"\n   ],\n   \"serialNumber\": \"17159976289428250189079625547205715159\",\n   \"notBefore\": \"qui in quis\",\n   \"notAfter\": \"minim id\",\n   \"signatureAlgorithm\": \"SHA256WithRSA\"\n  },\n  {\n   \"subject\": {\n    \"CN\": \"quis est ea nostrud\",\n    \"emailAddress\": \"cillum occaecat tempor laboris fugiat\",\n    \"O\": \"dolore\",\n    \"OU\": \"sed magna qui et\",\n    \"C\": \"laboris ipsum sed\",\n    \"ST\": \"l\",\n    \"L\": \"al\"\n   },\n   \"issuer\": {\n    \"CN\": \"cillum fugiat\",\n    \"emailAddress\": \"esse aliquip mollit laboris anim\",\n    \"O\": \"aliqua incididunt\",\n    \"OU\": \"ullamco dolor tempor sit sed\",\n    \"C\": \"tempor aute\",\n    \"ST\": \"minim labore officia consectetur\",\n    \"L\": \"aliquip elit quis culpa\"\n   },\n   \"subjectAlternativeNames\": [\n    \"ex dolore nulla in\",\n    \"non officia amet\"\n   ],\n   \"serialNumber\": \"17159976289428250189079625547205715159\",\n   \"notBefore\": \"irure id\",\n   \"notAfter\": \"laborum nostr\",\n   \"signatureAlgorithm\": \"SHA256WithRSA\"\n  }\n ],\n \"jwsCertificateInfo\": {\n  \"subject\": {\n   \"CN\": \"non cillum consectetur ullamco laborum\",\n   \"emailAddress\": \"ullamco laborum\",\n   \"O\": \"nulla quis laborum\",\n   \"OU\": \"nostrud occaecat id\",\n   \"C\": \"veniam dolore sed voluptate ex\",\n   \"ST\": \"minim\",\n   \"L\": \"et magna dolor\"\n  },\n  \"issuer\": {\n   \"CN\": \"in et Ut aute anim\",\n   \"emailAddress\": \"non nostrud proident\",\n   \"O\": \"non \",\n   \"OU\": \"Lorem\",\n   \"C\": \"ipsum cillum consectetur\",\n   \"ST\": \"Lorem eu\",\n   \"L\": \"ea\"\n  },\n  \"subjectAlternativeNames\": [\n   \"Duis aute sit\",\n   \"ut occaecat\"\n  ],\n  \"serialNumber\": \"17159976289428250189079625547205715159\",\n  \"notBefore\": \"ea dolor aliqua dolore\",\n  \"notAfter\": \"aliquip\",\n  \"signatureAlgorithm\": \"SHA256WithRSA\"\n },\n \"validations\": [\n  {\n   \"validationCode\": \"CERTIFICATE_VALID_CRL\",\n   \"performed\": false,\n   \"result\": \"VALID\",\n   \"message\": \"veniam adipisicing\",\n   \"messageTemplate\": \"sed consequat ut reprehenderit amet\",\n   \"data\": {},\n   \"details\": \"laborum\"\n  },\n  {\n   \"validationCode\": \"CERTIFICATE_USAGE_CLIENT\",\n   \"performed\": false,\n   \"result\": \"INVALID\",\n   \"message\": \"sunt ut minim\",\n   \"messageTemplate\": \"enim Lorem voluptate proident\",\n   \"data\": {},\n   \"details\": \"dolor ipsum\"\n  }\n ],\n \"validationState\": \"NOT_AVAILABLE\"\n}"
																}
															]
														}
													]
												},
												{
													"name": "ca",
													"item": [
														{
															"name": "get dfsp ca",
															"request": {
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/environments/:envId/dfsp/ca",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"environments",
																		":envId",
																		"dfsp",
																		"ca"
																	],
																	"variable": [
																		{
																			"key": "envId",
																			"value": "<string>",
																			"type": "string",
																			"description": "(Required) ID of environment"
																		}
																	]
																},
																"description": "TBD"
															},
															"response": [
																{
																	"name": "successful operation",
																	"originalRequest": {
																		"method": "GET",
																		"header": [],
																		"url": {
																			"raw": "{{baseUrl}}/environments/:envId/dfsp/ca",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"environments",
																				":envId",
																				"dfsp",
																				"ca"
																			],
																			"variable": [
																				{
																					"key": "envId"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n \"rootCertificate\": \"magna\",\n \"intermediateChain\": \"adipisicing\",\n \"validations\": [\n  {\n   \"validationCode\": \"CERTIFICATE_USAGE_CLIENT\",\n   \"performed\": true,\n   \"result\": \"NOT_AVAILABLE\",\n   \"message\": \"commodo eiusmod\",\n   \"messageTemplate\": \"exercitation Ut\",\n   \"data\": {},\n   \"details\": \"deserunt laboris\"\n  },\n  {\n   \"validationCode\": \"CERTIFICATE_CHAIN\",\n   \"performed\": false,\n   \"result\": \"VALID\",\n   \"message\": \"aliquip elit eu\",\n   \"messageTemplate\": \"elit\",\n   \"data\": {},\n   \"details\": \"esse est veniam ut\"\n  }\n ],\n \"validationState\": \"INVALID\"\n}"
																}
															]
														},
														{
															"name": "post client ca",
															"request": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n    \"rootCertificate\": \"<string>\",\n    \"intermediateChain\": \"<string>\",\n    \"validations\": [\n        {\n            \"validationCode\": \"CSR_CERT_SAME_PUBLIC_KEY\",\n            \"performed\": false,\n            \"result\": \"VALID\",\n            \"message\": \"n\",\n            \"messageTemplate\": \"dolore occaecat cillum ut mollit\",\n            \"data\": {},\n            \"details\": \"Duis\"\n        },\n        {\n            \"validationCode\": \"CSR_CERT_SAME_PUBLIC_KEY\",\n            \"performed\": true,\n            \"result\": \"NOT_AVAILABLE\",\n            \"message\": \"dolor in in deserunt\",\n            \"messageTemplate\": \"nisi in incididunt\",\n            \"data\": {},\n            \"details\": \"Duis velit consectetur ex\"\n        }\n    ],\n    \"validationState\": \"INVALID\"\n}"
																},
																"url": {
																	"raw": "{{baseUrl}}/environments/:envId/dfsp/ca",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"environments",
																		":envId",
																		"dfsp",
																		"ca"
																	],
																	"variable": [
																		{
																			"key": "envId",
																			"value": "<string>",
																			"type": "string",
																			"description": "(Required) ID of environment"
																		}
																	]
																},
																"description": "TBD"
															},
															"response": [
																{
																	"name": "successful operation",
																	"originalRequest": {
																		"method": "POST",
																		"header": [],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n    \"rootCertificate\": \"<string>\",\n    \"intermediateChain\": \"<string>\",\n    \"validations\": [\n        {\n            \"validationCode\": \"CSR_CERT_SAME_SUBJECT_INFO\",\n            \"performed\": false,\n            \"result\": \"INVALID\",\n            \"message\": \"quis ut non consectetur\",\n            \"messageTemplate\": \"minim velit\",\n            \"data\": {},\n            \"details\": \"in\"\n        },\n        {\n            \"validationCode\": \"CSR_CERT_PUBLIC_PRIVATE_KEY_MATCH\",\n            \"performed\": false,\n            \"result\": \"INVALID\",\n            \"message\": \"reprehenderit\",\n            \"messageTemplate\": \"dolore occaecat reprehenderit\",\n            \"data\": {},\n            \"details\": \"veniam id elit adipisicing\"\n        }\n    ],\n    \"validationState\": \"VALID\"\n}"
																		},
																		"url": {
																			"raw": "{{baseUrl}}/environments/:envId/dfsp/ca",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"environments",
																				":envId",
																				"dfsp",
																				"ca"
																			],
																			"variable": [
																				{
																					"key": "envId"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n \"rootCertificate\": \"<string>\",\n \"intermediateChain\": \"<string>\",\n \"validations\": [\n  {\n   \"validationCode\": \"CSR_CERT_SAME_SUBJECT_INFO\",\n   \"performed\": false,\n   \"result\": \"INVALID\",\n   \"message\": \"quis ut non consectetur\",\n   \"messageTemplate\": \"minim velit\",\n   \"data\": {},\n   \"details\": \"in\"\n  },\n  {\n   \"validationCode\": \"CSR_CERT_PUBLIC_PRIVATE_KEY_MATCH\",\n   \"performed\": false,\n   \"result\": \"INVALID\",\n   \"message\": \"reprehenderit\",\n   \"messageTemplate\": \"dolore occaecat reprehenderit\",\n   \"data\": {},\n   \"details\": \"veniam id elit adipisicing\"\n  }\n ],\n \"validationState\": \"VALID\"\n}"
																}
															]
														}
													]
												},
												{
													"name": "clientcerts",
													"item": [
														{
															"name": "post client certificates",
															"request": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n    \"clientCSR\": \"<string>\"\n}"
																},
																"url": {
																	"raw": "{{baseUrl}}/environments/:envId/dfsp/clientcerts",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"environments",
																		":envId",
																		"dfsp",
																		"clientcerts"
																	],
																	"variable": [
																		{
																			"key": "envId",
																			"value": "<string>",
																			"type": "string",
																			"description": "(Required) ID of environment"
																		}
																	]
																},
																"description": "TBD"
															},
															"response": [
																{
																	"name": "successful operation",
																	"originalRequest": {
																		"method": "POST",
																		"header": [],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n    \"clientCSR\": \"<string>\"\n}"
																		},
																		"url": {
																			"raw": "{{baseUrl}}/environments/:envId/dfsp/clientcerts",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"environments",
																				":envId",
																				"dfsp",
																				"clientcerts"
																			],
																			"variable": [
																				{
																					"key": "envId"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n \"rootCertificate\": \"<string>\",\n \"intermediateChain\": \"<string>\",\n \"serverCertificate\": \"<string>\",\n \"id\": -41795320,\n \"rootCertificateInfo\": {\n  \"subject\": {\n   \"CN\": \"aliqua ex officia ea\",\n   \"emailAddress\": \"ea ad consequat ut\",\n   \"O\": \"dolor\",\n   \"OU\": \"enim officia\",\n   \"C\": \"tempor laboris\",\n   \"ST\": \"veniam culpa tempor\",\n   \"L\": \"labore do ullamco\"\n  },\n  \"issuer\": {\n   \"CN\": \"est in\",\n   \"emailAddress\": \"labore tempor eu a\",\n   \"O\": \"sint\",\n   \"OU\": \"Duis irure nostrud\",\n   \"C\": \"cupidatat ut deserunt\",\n   \"ST\": \"Ut\",\n   \"L\": \"do\"\n  },\n  \"subjectAlternativeNames\": [\n   \"ut aliqua velit ipsum\",\n   \"nisi dolor\"\n  ],\n  \"serialNumber\": \"17159976289428250189079625547205715159\",\n  \"notBefore\": \"e\",\n  \"notAfter\": \"dolor aliquip\",\n  \"signatureAlgorithm\": \"SHA256WithRSA\"\n },\n \"intermediateChainInfo\": [\n  {\n   \"subject\": {\n    \"CN\": \"magna\",\n    \"emailAddress\": \"aliquip commodo e\",\n    \"O\": \"officia Ut ex enim\",\n    \"OU\": \"ad\",\n    \"C\": \"consequat Duis veniam ipsum\",\n    \"ST\": \"dolor Ut dolore\",\n    \"L\": \"officia\"\n   },\n   \"issuer\": {\n    \"CN\": \"minim \",\n    \"emailAddress\": \"irure incididunt ullamco aliquip\",\n    \"O\": \"sint occaecat\",\n    \"OU\": \"in labore id\",\n    \"C\": \"deserunt\",\n    \"ST\": \"ipsum dolore labore esse\",\n    \"L\": \"ad\"\n   },\n   \"subjectAlternativeNames\": [\n    \"velit nostrud nulla Ut\",\n    \"aute mollit esse\"\n   ],\n   \"serialNumber\": \"17159976289428250189079625547205715159\",\n   \"notBefore\": \"id incididunt minim non fugiat\",\n   \"notAfter\": \"id\",\n   \"signatureAlgorithm\": \"SHA256WithRSA\"\n  },\n  {\n   \"subject\": {\n    \"CN\": \"occaecat nisi id reprehenderit consectetur\",\n    \"emailAddress\": \"amet elit\",\n    \"O\": \"reprehenderit ad id velit\",\n    \"OU\": \"incididunt Excepteur\",\n    \"C\": \"pariatur labori\",\n    \"ST\": \"aliqua mollit Excepteur\",\n    \"L\": \"aliquip non culpa in\"\n   },\n   \"issuer\": {\n    \"CN\": \"amet ipsum\",\n    \"emailAddress\": \"ut sed\",\n    \"O\": \"ut culpa commodo ullamco adipisicing\",\n    \"OU\": \"consectetur ex pariatur culpa ad\",\n    \"C\": \"dolore\",\n    \"ST\": \"ex sint amet\",\n    \"L\": \"nostrud ad\"\n   },\n   \"subjectAlternativeNames\": [\n    \"amet qui nulla consequat exercitation\",\n    \"culpa dolor minim\"\n   ],\n   \"serialNumber\": \"17159976289428250189079625547205715159\",\n   \"notBefore\": \"Excepteur voluptate\",\n   \"notAfter\": \"dolore ut\",\n   \"signatureAlgorithm\": \"SHA256WithRSA\"\n  }\n ],\n \"serverCertificateInfo\": {\n  \"subject\": {\n   \"CN\": \"p\",\n   \"emailAddress\": \"anim irure quis\",\n   \"O\": \"cil\",\n   \"OU\": \"minim\",\n   \"C\": \"id occaecat\",\n   \"ST\": \"dolor anim cupidatat sed exercitation\",\n   \"L\": \"ullamco in\"\n  },\n  \"issuer\": {\n   \"CN\": \"do\",\n   \"emailAddress\": \"in nisi\",\n   \"O\": \"ut ad qui\",\n   \"OU\": \"nisi dolore sit\",\n   \"C\": \"quis\",\n   \"ST\": \"aute nostrud anim et\",\n   \"L\": \"do\"\n  },\n  \"subjectAlternativeNames\": [\n   \"dolore mollit\",\n   \"qui officia in sint\"\n  ],\n  \"serialNumber\": \"17159976289428250189079625547205715159\",\n  \"notBefore\": \"amet veniam\",\n  \"notAfter\": \"tempor sunt\",\n  \"signatureAlgorithm\": \"SHA256WithRSA\"\n },\n \"validations\": [\n  {\n   \"validationCode\": \"CERTIFICATE_USAGE_CLIENT\",\n   \"performed\": false,\n   \"result\": \"NOT_AVAILABLE\",\n   \"message\": \"cupidatat elit ipsum\",\n   \"messageTemplate\": \"non mollit\",\n   \"data\": {},\n   \"details\": \"minim elit consequat amet\"\n  },\n  {\n   \"validationCode\": \"CSR_PUBLIC_KEY_LENGTH\",\n   \"performed\": true,\n   \"result\": \"NOT_AVAILABLE\",\n   \"message\": \"officia sit\",\n   \"messageTemplate\": \"\",\n   \"data\": {},\n   \"details\": \"laboris occaecat anim eli\"\n  }\n ],\n \"validationState\": \"VALID\",\n \"state\": false\n}"
																}
															]
														},
														{
															"name": "get client certificates",
															"request": {
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/environments/:envId/dfsp/clientcerts",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"environments",
																		":envId",
																		"dfsp",
																		"clientcerts"
																	],
																	"variable": [
																		{
																			"key": "envId",
																			"value": "<string>",
																			"type": "string",
																			"description": "(Required) ID of environment"
																		}
																	]
																},
																"description": "TBD"
															},
															"response": [
																{
																	"name": "successful operation",
																	"originalRequest": {
																		"method": "GET",
																		"header": [],
																		"url": {
																			"raw": "{{baseUrl}}/environments/:envId/dfsp/clientcerts",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"environments",
																				":envId",
																				"dfsp",
																				"clientcerts"
																			],
																			"variable": [
																				{
																					"key": "envId"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "[\n {\n  \"rootCertificate\": \"<string>\",\n  \"intermediateChain\": \"<string>\",\n  \"serverCertificate\": \"<string>\",\n  \"id\": -53168226,\n  \"rootCertificateInfo\": {\n   \"subject\": {\n    \"CN\": \"lab\",\n    \"emailAddress\": \"pariatur Lorem nostrud\",\n    \"O\": \"sint reprehenderit amet magna\",\n    \"OU\": \"incididunt cillum deserunt adipisicing\",\n    \"C\": \"exercitation consequ\",\n    \"ST\": \"aliquip non ex\",\n    \"L\": \"commodo dolor\"\n   },\n   \"issuer\": {\n    \"CN\": \"laboris pariatur dolor tempor\",\n    \"emailAddress\": \"in dolor\",\n    \"O\": \"sit quis veniam\",\n    \"OU\": \"quis\",\n    \"C\": \"ut ipsum proident\",\n    \"ST\": \"ipsum non officia\",\n    \"L\": \"proident occaecat labore\"\n   },\n   \"subjectAlternativeNames\": [\n    \"sunt dol\",\n    \"enim deserunt\"\n   ],\n   \"serialNumber\": \"17159976289428250189079625547205715159\",\n   \"notBefore\": \"do consequat laborum\",\n   \"notAfter\": \"minim labore\",\n   \"signatureAlgorithm\": \"SHA256WithRSA\"\n  },\n  \"intermediateChainInfo\": [\n   {\n    \"subject\": {\n     \"CN\": \"ut\",\n     \"emailAddress\": \"dolor cillum\",\n     \"O\": \"anim ipsum reprehenderit commodo\",\n     \"OU\": \"occaecat sint laborum in\",\n     \"C\": \"Exce\",\n     \"ST\": \"laborum ut velit\",\n     \"L\": \"reprehenderit dolore cupidatat laborum\"\n    },\n    \"issuer\": {\n     \"CN\": \"mollit adipisicing qui\",\n     \"emailAddress\": \"mollit aute\",\n     \"O\": \"commodo id ad laboris\",\n     \"OU\": \"fugiat quis\",\n     \"C\": \"dolore sunt mollit laborum\",\n     \"ST\": \"pariatur culpa quis ea\",\n     \"L\": \"non dolor velit et\"\n    },\n    \"subjectAlternativeNames\": [\n     \"irure ipsum pariatur sed ullamco\",\n     \"voluptate qui occaecat elit\"\n    ],\n    \"serialNumber\": \"17159976289428250189079625547205715159\",\n    \"notBefore\": \"magna minim ex consequat\",\n    \"notAfter\": \"ipsum elit aliquip\",\n    \"signatureAlgorithm\": \"SHA256WithRSA\"\n   },\n   {\n    \"subject\": {\n     \"CN\": \"anim Ut pariatur culpa\",\n     \"emailAddress\": \"eiusmod ea laborum ut\",\n     \"O\": \"pariatur aute dolore ci\",\n     \"OU\": \"aliquip est\",\n     \"C\": \"veniam\",\n     \"ST\": \"Duis ut\",\n     \"L\": \"dolor sunt laboris\"\n    },\n    \"issuer\": {\n     \"CN\": \"id proident\",\n     \"emailAddress\": \"incididunt \",\n     \"O\": \"occaecat deserunt ea et\",\n     \"OU\": \"aliqua u\",\n     \"C\": \"minim aute sint dolor\",\n     \"ST\": \"nulla laboris\",\n     \"L\": \"occaecat ut\"\n    },\n    \"subjectAlternativeNames\": [\n     \"Lorem\",\n     \"culpa adipisicing commodo Duis aliqua\"\n    ],\n    \"serialNumber\": \"17159976289428250189079625547205715159\",\n    \"notBefore\": \"voluptate consectetur sed\",\n    \"notAfter\": \"amet do nulla\",\n    \"signatureAlgorithm\": \"SHA256WithRSA\"\n   }\n  ],\n  \"serverCertificateInfo\": {\n   \"subject\": {\n    \"CN\": \"ut non laborum\",\n    \"emailAddress\": \"Lorem sed velit\",\n    \"O\": \"tempor sunt amet dolor reprehenderit\",\n    \"OU\": \"consequat incididunt cupidatat irure ut\",\n    \"C\": \"sed nisi\",\n    \"ST\": \"adipisicing consequat culpa\",\n    \"L\": \"dolore sunt commodo\"\n   },\n   \"issuer\": {\n    \"CN\": \"est fugiat qui\",\n    \"emailAddress\": \"officia dolore\",\n    \"O\": \"in Excepteur elit eu\",\n    \"OU\": \"Lorem aliqua\",\n    \"C\": \"nulla nisi Excepteur adipisicing\",\n    \"ST\": \"qui magna voluptate ullamco et\",\n    \"L\": \"et minim\"\n   },\n   \"subjectAlternativeNames\": [\n    \"ipsum laborum\",\n    \"dolor enim ad\"\n   ],\n   \"serialNumber\": \"17159976289428250189079625547205715159\",\n   \"notBefore\": \"anim sint nisi aliqua\",\n   \"notAfter\": \"incididunt\",\n   \"signatureAlgorithm\": \"SHA256WithRSA\"\n  },\n  \"validations\": [\n   {\n    \"validationCode\": \"CSR_SIGNATURE_VALID\",\n    \"performed\": true,\n    \"result\": \"INVALID\",\n    \"message\": \"irure ea sit aute\",\n    \"messageTemplate\": \"dolore min\",\n    \"data\": {},\n    \"details\": \"veniam\"\n   },\n   {\n    \"validationCode\": \"CERTIFICATE_VALID_CRL\",\n    \"performed\": true,\n    \"result\": \"INVALID\",\n    \"message\": \"ipsum dolor Duis\",\n    \"messageTemplate\": \"aute id\",\n    \"data\": {},\n    \"details\": \"tempor amet in\"\n   }\n  ],\n  \"validationState\": \"INVALID\",\n  \"state\": true\n },\n {\n  \"rootCertificate\": \"<string>\",\n  \"intermediateChain\": \"<string>\",\n  \"serverCertificate\": \"<string>\",\n  \"id\": 3204762,\n  \"rootCertificateInfo\": {\n   \"subject\": {\n    \"CN\": \"ex Ut eu\",\n    \"emailAddress\": \"cillum quis\",\n    \"O\": \"reprehenderit in nisi qui nulla\",\n    \"OU\": \"velit eu\",\n    \"C\": \"minim irure reprehenderit sint do\",\n    \"ST\": \"anim dolor\",\n    \"L\": \"tempor\"\n   },\n   \"issuer\": {\n    \"CN\": \"adipis\",\n    \"emailAddress\": \"nostrud ut ipsum Lorem\",\n    \"O\": \"ullamco elit proident ut incididunt\",\n    \"OU\": \"id et consectetur occaecat\",\n    \"C\": \"tempor nostrud commodo fugiat irure\",\n    \"ST\": \"proident officia tempor laborum\",\n    \"L\": \"amet sint\"\n   },\n   \"subjectAlternativeNames\": [\n    \"sed consequat dolore incididunt\",\n    \"aliquip reprehenderit ullamco dolor\"\n   ],\n   \"serialNumber\": \"17159976289428250189079625547205715159\",\n   \"notBefore\": \"quis proident ut\",\n   \"notAfter\": \"aliqua dolore\",\n   \"signatureAlgorithm\": \"SHA256WithRSA\"\n  },\n  \"intermediateChainInfo\": [\n   {\n    \"subject\": {\n     \"CN\": \"amet occaecat\",\n     \"emailAddress\": \"occaecat exercit\",\n     \"O\": \"tempor\",\n     \"OU\": \"cillum elit\",\n     \"C\": \"u\",\n     \"ST\": \"nulla cillum reprehenderit\",\n     \"L\": \"et Duis\"\n    },\n    \"issuer\": {\n     \"CN\": \"consequat exercitation Ut sed\",\n     \"emailAddress\": \"eiusm\",\n     \"O\": \"cons\",\n     \"OU\": \"ipsum cupidatat\",\n     \"C\": \"officia\",\n     \"ST\": \"laborum officia nostrud labore pariat\",\n     \"L\": \"amet proident\"\n    },\n    \"subjectAlternativeNames\": [\n     \"eu ut ullamco\",\n     \"commodo eiusmod dolor\"\n    ],\n    \"serialNumber\": \"17159976289428250189079625547205715159\",\n    \"notBefore\": \"sint culpa el\",\n    \"notAfter\": \"sunt consequat\",\n    \"signatureAlgorithm\": \"SHA256WithRSA\"\n   },\n   {\n    \"subject\": {\n     \"CN\": \"qui\",\n     \"emailAddress\": \"dolor sint dolor exercitation\",\n     \"O\": \"nisi do eiusmod eu magna\",\n     \"OU\": \"non consectetur fugiat\",\n     \"C\": \"do aute Ut Duis\",\n     \"ST\": \"dolore sed ad\",\n     \"L\": \"labore reprehenderit mollit deserunt\"\n    },\n    \"issuer\": {\n     \"CN\": \"consequat Duis nisi laboris anim\",\n     \"emailAddress\": \"irure in\",\n     \"O\": \"Lorem cillum\",\n     \"OU\": \"laboris magna fugiat\",\n     \"C\": \"esse quis commodo\",\n     \"ST\": \"amet ut\",\n     \"L\": \"culpa cillum in sit\"\n    },\n    \"subjectAlternativeNames\": [\n     \"do in sint\",\n     \"quis eiusmod nostrud\"\n    ],\n    \"serialNumber\": \"17159976289428250189079625547205715159\",\n    \"notBefore\": \"aliquip quis esse\",\n    \"notAfter\": \"ut irure eu dolore\",\n    \"signatureAlgorithm\": \"SHA256WithRSA\"\n   }\n  ],\n  \"serverCertificateInfo\": {\n   \"subject\": {\n    \"CN\": \"quis do occaecat non officia\",\n    \"emailAddress\": \"amet aute\",\n    \"O\": \"eiusmod ipsum cillum pariatur\",\n    \"OU\": \"dolore\",\n    \"C\": \"tempor cupidatat\",\n    \"ST\": \"do \",\n    \"L\": \"cillum ad\"\n   },\n   \"issuer\": {\n    \"CN\": \"in pariatur\",\n    \"emailAddress\": \"officia do culpa pariatur\",\n    \"O\": \"ad elit occaecat consectetur sed\",\n    \"OU\": \"commodo velit dolore\",\n    \"C\": \"et velit est culpa\",\n    \"ST\": \"ad sed Ut\",\n    \"L\": \"fugiat\"\n   },\n   \"subjectAlternativeNames\": [\n    \"consequat qui do magna Excepteur\",\n    \"dolor laborum Duis\"\n   ],\n   \"serialNumber\": \"17159976289428250189079625547205715159\",\n   \"notBefore\": \"deserunt ad\",\n   \"notAfter\": \"Ut anim ex ut\",\n   \"signatureAlgorithm\": \"SHA256WithRSA\"\n  },\n  \"validations\": [\n   {\n    \"validationCode\": \"CERTIFICATE_VALIDITY\",\n    \"performed\": false,\n    \"result\": \"INVALID\",\n    \"message\": \"commodo\",\n    \"messageTemplate\": \"labore laborum aute es\",\n    \"data\": {},\n    \"details\": \"ex\"\n   },\n   {\n    \"validationCode\": \"CSR_SIGNATURE_ALGORITHM\",\n    \"performed\": false,\n    \"result\": \"NOT_AVAILABLE\",\n    \"message\": \"minim irure\",\n    \"messageTemplate\": \"non\",\n    \"data\": {},\n    \"details\": \"exercitation\"\n   }\n  ],\n  \"validationState\": \"NOT_AVAILABLE\",\n  \"state\": false\n }\n]"
																}
															]
														},
														{
															"name": "post client certificates",
															"request": {
																"method": "POST",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/environments/:envId/dfsp/clientcerts/csr",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"environments",
																		":envId",
																		"dfsp",
																		"clientcerts",
																		"csr"
																	],
																	"variable": [
																		{
																			"key": "envId",
																			"value": "<string>",
																			"type": "string",
																			"description": "(Required) ID of environment"
																		}
																	]
																},
																"description": "Creates inbound CSR and uploads it to MCM"
															},
															"response": [
																{
																	"name": "successful operation",
																	"originalRequest": {
																		"method": "POST",
																		"header": [],
																		"url": {
																			"raw": "{{baseUrl}}/environments/:envId/dfsp/clientcerts/csr",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"environments",
																				":envId",
																				"dfsp",
																				"clientcerts",
																				"csr"
																			],
																			"variable": [
																				{
																					"key": "envId"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n \"id\": -27112736\n}"
																}
															]
														}
													]
												},
												{
													"name": "Provide details of FSP based on the ID",
													"request": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/environments/:envId/dfsp",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"environments",
																":envId",
																"dfsp"
															],
															"variable": [
																{
																	"key": "envId",
																	"value": "<string>",
																	"type": "string",
																	"description": "(Required) ID of environment"
																}
															]
														}
													},
													"response": [
														{
															"name": "successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/environments/:envId/dfsp",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"environments",
																		":envId",
																		"dfsp"
																	],
																	"variable": [
																		{
																			"key": "envId"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"id\": \"aliqua in\",\n \"name\": \"dol\",\n \"batchId\": 68766779,\n \"institution\": \"ut proident magna\",\n \"direction\": \"INBOUND\",\n \"currency\": \"AED\",\n \"amount\": \"460637.4214\",\n \"type\": \"P2P\",\n \"status\": \"SUCCESS\",\n \"initiatedTimestamp\": \"8206-10-31T10:01:41.132+07:11\",\n \"confirmationNumber\": -91725554,\n \"sender\": \"nisi aute irure\",\n \"recipient\": \"mollit in quis\",\n \"details\": \"voluptate in occaecat sunt\"\n}"
														}
													]
												},
												{
													"name": "get JWS certificates for all DFSPs in the environment",
													"request": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/environments/:envId/dfsp/alljwscerts",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"environments",
																":envId",
																"dfsp",
																"alljwscerts"
															],
															"variable": [
																{
																	"key": "envId",
																	"value": "<string>",
																	"type": "string",
																	"description": "(Required) ID of environment"
																}
															]
														},
														"description": "TBD"
													},
													"response": [
														{
															"name": "successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/environments/:envId/dfsp/alljwscerts",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"environments",
																		":envId",
																		"dfsp",
																		"alljwscerts"
																	],
																	"variable": [
																		{
																			"key": "envId"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"id\": -39436846,\n \"jwsCertificate\": \"et\",\n \"rootCertificate\": \"non magna pariatur eu\",\n \"intermediateChain\": \"Ut aute\",\n \"rootCertificateInfo\": {\n  \"subject\": {\n   \"CN\": \"Excepteur occaecat pariatur\",\n   \"emailAddress\": \"ut\",\n   \"O\": \"quis magna\",\n   \"OU\": \"sed veniam\",\n   \"C\": \"sit Excepteur cupidatat\",\n   \"ST\": \"cupidatat cillum\",\n   \"L\": \"sed incididunt volu\"\n  },\n  \"issuer\": {\n   \"CN\": \"Duis officia anim in\",\n   \"emailAddress\": \"dolore\",\n   \"O\": \"reprehenderit do id laborum\",\n   \"OU\": \"ex commodo sed Lorem\",\n   \"C\": \"dolore reprehenderit Duis culpa aliqua\",\n   \"ST\": \"dolor\",\n   \"L\": \"Excepteur exercitation id c\"\n  },\n  \"subjectAlternativeNames\": [\n   \"irure eu\",\n   \"ut esse reprehenderit commodo nostrud\"\n  ],\n  \"serialNumber\": \"17159976289428250189079625547205715159\",\n  \"notBefore\": \"Lorem tempor dolore\",\n  \"notAfter\": \"eu \",\n  \"signatureAlgorithm\": \"SHA256WithRSA\"\n },\n \"intermediateChainInfo\": [\n  {\n   \"subject\": {\n    \"CN\": \"dolore\",\n    \"emailAddress\": \"aute minim id cillu\",\n    \"O\": \"officia non in veniam\",\n    \"OU\": \"in mollit\",\n    \"C\": \"dolore ut quis minim\",\n    \"ST\": \"cupidatat Ut\",\n    \"L\": \"id mollit fugiat\"\n   },\n   \"issuer\": {\n    \"CN\": \"sunt ulla\",\n    \"emailAddress\": \"veniam reprehenderit anim aliquip\",\n    \"O\": \"elit in sed ullamco eiusmod\",\n    \"OU\": \"officia\",\n    \"C\": \"ad cupidatat voluptate sit in\",\n    \"ST\": \"est deserunt ullamco dolore velit\",\n    \"L\": \"nisi consectetur occaec\"\n   },\n   \"subjectAlternativeNames\": [\n    \"pariatur dolor veniam quis\",\n    \"ad non consectetur aliquip aliqua\"\n   ],\n   \"serialNumber\": \"17159976289428250189079625547205715159\",\n   \"notBefore\": \"laborum incididunt\",\n   \"notAfter\": \"incididunt irure in dolore do\",\n   \"signatureAlgorithm\": \"SHA256WithRSA\"\n  },\n  {\n   \"subject\": {\n    \"CN\": \"ad ea\",\n    \"emailAddress\": \"tempor aliqua\",\n    \"O\": \"fugiat do culpa\",\n    \"OU\": \"sed qui\",\n    \"C\": \"fugiat sunt cillum aliqua\",\n    \"ST\": \"ea\",\n    \"L\": \"ipsum incididunt et in\"\n   },\n   \"issuer\": {\n    \"CN\": \"id sed et laborum\",\n    \"emailAddress\": \"eu\",\n    \"O\": \"ea laboris\",\n    \"OU\": \"deserunt eu ea dolor\",\n    \"C\": \"tempor dolore velit in\",\n    \"ST\": \"pariatur fugiat quis dolor\",\n    \"L\": \"officia culp\"\n   },\n   \"subjectAlternativeNames\": [\n    \"ex ea\",\n    \"minim consequat aliquip\"\n   ],\n   \"serialNumber\": \"17159976289428250189079625547205715159\",\n   \"notBefore\": \"enim nostru\",\n   \"notAfter\": \"in sit ipsum aute eu\",\n   \"signatureAlgorithm\": \"SHA256WithRSA\"\n  }\n ],\n \"jwsCertificateInfo\": {\n  \"subject\": {\n   \"CN\": \"magna\",\n   \"emailAddress\": \"veniam ma\",\n   \"O\": \"non et pariatur\",\n   \"OU\": \"deserunt cupidatat in\",\n   \"C\": \"id pariatur\",\n   \"ST\": \"consectetur elit pariatur\",\n   \"L\": \"sit proident do Ut\"\n  },\n  \"issuer\": {\n   \"CN\": \"pariatur enim est\",\n   \"emailAddress\": \"proi\",\n   \"O\": \"veniam amet\",\n   \"OU\": \"pariatur dolor laborum consectetur dolor\",\n   \"C\": \"esse Ut deserunt\",\n   \"ST\": \"consequat in\",\n   \"L\": \"nisi tempor pariatur qui\"\n  },\n  \"subjectAlternativeNames\": [\n   \"anim enim nostrud ut\",\n   \"officia dolor anim aliquip nostrud\"\n  ],\n  \"serialNumber\": \"17159976289428250189079625547205715159\",\n  \"notBefore\": \"nisi enim\",\n  \"notAfter\": \"veniam eiusmod\",\n  \"signatureAlgorithm\": \"SHA256WithRSA\"\n },\n \"validations\": [\n  {\n   \"validationCode\": \"CERTIFICATE_CHAIN\",\n   \"performed\": false,\n   \"result\": \"NOT_AVAILABLE\",\n   \"message\": \"ut\",\n   \"messageTemplate\": \"magna exercitation laborum\",\n   \"data\": {},\n   \"details\": \"ut est\"\n  },\n  {\n   \"validationCode\": \"CA_CERTIFICATE_USAGE\",\n   \"performed\": false,\n   \"result\": \"INVALID\",\n   \"message\": \"elit voluptate co\",\n   \"messageTemplate\": \"reprehenderit officia esse in sint\",\n   \"data\": {},\n   \"details\": \"ex anim ipsum eiusmod\"\n  }\n ],\n \"validationState\": \"VALID\",\n \"dfspId\": \"incidi\"\n}"
														}
													]
												},
												{
													"name": "autogenerate and configure all certificates",
													"request": {
														"method": "POST",
														"header": [],
														"url": {
															"raw": "{{SENDERFSP_PM4ML_ENDPOINT}}/management-api/environments/1/dfsp/allcerts",
															"host": [
																"{{SENDERFSP_PM4ML_ENDPOINT}}"
															],
															"path": [
																"management-api",
																"environments",
																"1",
																"dfsp",
																"allcerts"
															]
														},
														"description": "TBD"
													},
													"response": [
														{
															"name": "successful operation",
															"originalRequest": {
																"method": "POST",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/environments/:envId/dfsp/allcerts",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"environments",
																		":envId",
																		"dfsp",
																		"allcerts"
																	],
																	"variable": [
																		{
																			"key": "envId"
																		}
																	]
																}
															},
															"status": "Created",
															"code": 201,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														}
													]
												}
											]
										},
										{
											"name": "dfsps",
											"item": [
												{
													"name": "Get all the participants",
													"request": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/environments/:envId/dfsps",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"environments",
																":envId",
																"dfsps"
															],
															"variable": [
																{
																	"key": "envId",
																	"value": "<string>",
																	"type": "string",
																	"description": "(Required) ID of environment"
																}
															]
														},
														"description": "Get all the participants"
													},
													"response": [
														{
															"name": "successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/environments/:envId/dfsps",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"environments",
																		":envId",
																		"dfsps"
																	],
																	"variable": [
																		{
																			"key": "envId"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "[\n {\n  \"id\": \"deserunt incididunt est sit\",\n  \"name\": \"Ut consectetur aliqua elit mollit\",\n  \"batchId\": -29525424,\n  \"institution\": \"\",\n  \"direction\": \"OUTBOUND\",\n  \"currency\": \"PAB\",\n  \"amount\": \"32\",\n  \"type\": \"P2P\",\n  \"status\": \"PENDING\",\n  \"initiatedTimestamp\": \"1030-10-29T11:22:09.295-06:56\",\n  \"confirmationNumber\": 76449213,\n  \"sender\": \"esse labore tempor qui Ut\",\n  \"recipient\": \"ut\",\n  \"details\": \"ut nulla exercitation dolore cupidatat\"\n },\n {\n  \"id\": \"est reprehenderit sunt eu laborum\",\n  \"name\": \"ipsum amet in\",\n  \"batchId\": 53153818,\n  \"institution\": \"Lorem consequat amet\",\n  \"direction\": \"INBOUND\",\n  \"currency\": \"KES\",\n  \"amount\": \"8920432\",\n  \"type\": \"P2P\",\n  \"status\": \"SUCCESS\",\n  \"initiatedTimestamp\": \"8110-12-30T23:52:16.518Z\",\n  \"confirmationNumber\": -32261741,\n  \"sender\": \"id sint exercitation\",\n  \"recipient\": \"minim enim aute\",\n  \"details\": \"sunt irure Ut deserunt\"\n }\n]"
														}
													]
												},
												{
													"name": "Retrieves environment dfsp status by phase and step completion",
													"request": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/environments/:envId/dfsps/:dfspId/status",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"environments",
																":envId",
																"dfsps",
																":dfspId",
																"status"
															],
															"variable": [
																{
																	"key": "envId",
																	"value": "<string>",
																	"type": "string",
																	"description": "(Required) ID of the environment to get satus"
																},
																{
																	"key": "dfspId",
																	"value": "<string>",
																	"type": "string",
																	"description": "(Required) ID of the dfspId to get satus"
																}
															]
														}
													},
													"response": [
														{
															"name": "successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/environments/:envId/dfsps/:dfspId/status",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"environments",
																		":envId",
																		"dfsps",
																		":dfspId",
																		"status"
																	],
																	"variable": [
																		{
																			"key": "envId"
																		},
																		{
																			"key": "dfspId"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "[\n {\n  \"phase\": \"BUSINESS_SETUP\",\n  \"steps\": [\n   {\n    \"identifier\": \"CERTIFICATE_AUTHORITY\",\n    \"status\": \"NOT_STARTED\"\n   },\n   {\n    \"identifier\": \"ID_GENERATION\",\n    \"status\": \"NOT_STARTED\"\n   }\n  ]\n },\n {\n  \"phase\": \"BUSINESS_SETUP\",\n  \"steps\": [\n   {\n    \"identifier\": \"SERVER_CERTIFICATES_EXCHANGE\",\n    \"status\": \"COMPLETED\"\n   },\n   {\n    \"identifier\": \"CSR_EXCHANGE\",\n    \"status\": \"IN_PROGRESS\"\n   }\n  ]\n }\n]"
														}
													]
												}
											]
										},
										{
											"name": "hub",
											"item": [
												{
													"name": "Get the Hub endpoints",
													"request": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/environments/:envId/hub/endpoints?direction=<string>&type=<string>&state=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"environments",
																":envId",
																"hub",
																"endpoints"
															],
															"query": [
																{
																	"key": "direction",
																	"value": "<string>"
																},
																{
																	"key": "type",
																	"value": "<string>"
																},
																{
																	"key": "state",
																	"value": "<string>"
																}
															],
															"variable": [
																{
																	"key": "envId",
																	"value": "<string>",
																	"type": "string",
																	"description": "(Required) ID of environment"
																}
															]
														}
													},
													"response": [
														{
															"name": "successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/environments/:envId/hub/endpoints?direction=<string>&type=<string>&state=<string>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"environments",
																		":envId",
																		"hub",
																		"endpoints"
																	],
																	"query": [
																		{
																			"key": "direction",
																			"value": "<string>"
																		},
																		{
																			"key": "type",
																			"value": "<string>"
																		},
																		{
																			"key": "state",
																			"value": "<string>"
																		}
																	],
																	"variable": [
																		{
																			"key": "envId"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"id\": -99974348,\n \"type\": \"IP\",\n \"direction\": \"INGRESS\",\n \"state\": \"INVALID\",\n \"createdDate\": \"2006-12-03T10:02:37.374Z\",\n \"createdBy\": \"sint ullamco quis in\",\n \"dfspId\": \"minim officia in\",\n \"value\": {\n  \"address\": \"163.10.24.28/30\",\n  \"ports\": [\n   \"80\",\n   \"8000-8080\"\n  ],\n  \"url\": \"<string>\"\n }\n}"
														}
													]
												},
												{
													"name": "get hub server certificate",
													"request": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/environments/:envId/hub/servercerts",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"environments",
																":envId",
																"hub",
																"servercerts"
															],
															"variable": [
																{
																	"key": "envId",
																	"value": "<string>",
																	"type": "string",
																	"description": "(Required) ID of environment"
																}
															]
														},
														"description": "TBD"
													},
													"response": [
														{
															"name": "successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/environments/:envId/hub/servercerts",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"environments",
																		":envId",
																		"hub",
																		"servercerts"
																	],
																	"variable": [
																		{
																			"key": "envId"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"rootCertificate\": \"<string>\",\n \"intermediateChain\": \"<string>\",\n \"serverCertificate\": \"<string>\"\n}"
														}
													]
												},
												{
													"name": "get hub ca",
													"request": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/environments/:envId/hub/cas",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"environments",
																":envId",
																"hub",
																"cas"
															],
															"variable": [
																{
																	"key": "envId",
																	"value": "<string>",
																	"type": "string",
																	"description": "(Required) ID of environment"
																}
															]
														},
														"description": "TBD"
													},
													"response": [
														{
															"name": "successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/environments/:envId/hub/cas",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"environments",
																		":envId",
																		"hub",
																		"cas"
																	],
																	"variable": [
																		{
																			"key": "envId"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "[\n {\n  \"name\": \"incididunt magna proident do aute\",\n  \"type\": \"EXTERNAL\",\n  \"rootCertificate\": \"reprehenderit enim\",\n  \"intermediateChain\": \"enim magna\",\n  \"id\": -60592844,\n  \"rootCertificateInfo\": {\n   \"subject\": {\n    \"CN\": \"anim\",\n    \"emailAddress\": \"ea\",\n    \"O\": \"exercitation Duis non quis\",\n    \"OU\": \"consequat Ut\",\n    \"C\": \"ut do et pariatur\",\n    \"ST\": \"ipsum culpa est\",\n    \"L\": \"est dolore mollit fugiat\"\n   },\n   \"issuer\": {\n    \"CN\": \"labore anim sed exercitation\",\n    \"emailAddress\": \"minim Excepteur sint elit voluptate\",\n    \"O\": \"et laborum Du\",\n    \"OU\": \"Ut nulla\",\n    \"C\": \"sunt aliquip laborum amet\",\n    \"ST\": \"enim Excepteur commodo pariatur\",\n    \"L\": \"in incididunt\"\n   },\n   \"subjectAlternativeNames\": [\n    \"ut sint magna\",\n    \"Duis est laboris\"\n   ],\n   \"serialNumber\": \"17159976289428250189079625547205715159\",\n   \"notBefore\": \"deserunt sit\",\n   \"notAfter\": \"sunt laborum cupidat\",\n   \"signatureAlgorithm\": \"SHA256WithRSA\"\n  },\n  \"intermediateChainInfo\": [\n   {\n    \"subject\": {\n     \"CN\": \"nulla\",\n     \"emailAddress\": \"sint Lorem exercit\",\n     \"O\": \"anim labore\",\n     \"OU\": \"occaecat consectetur\",\n     \"C\": \"co\",\n     \"ST\": \"ut minim sunt\",\n     \"L\": \"adipisicing quis minim eu ut\"\n    },\n    \"issuer\": {\n     \"CN\": \"laboris in ipsum Lorem\",\n     \"emailAddress\": \"Duis non ipsum anim deserunt\",\n     \"O\": \"sunt \",\n     \"OU\": \"minim commodo\",\n     \"C\": \"commodo proident sed sint\",\n     \"ST\": \"qui minim\",\n     \"L\": \"ad officia laboris\"\n    },\n    \"subjectAlternativeNames\": [\n     \"culpa inc\",\n     \"tempor esse pariatur\"\n    ],\n    \"serialNumber\": \"17159976289428250189079625547205715159\",\n    \"notBefore\": \"exercitation fugiat laboris\",\n    \"notAfter\": \"dolor sunt incididunt\",\n    \"signatureAlgorithm\": \"SHA256WithRSA\"\n   },\n   {\n    \"subject\": {\n     \"CN\": \"velit laboris in\",\n     \"emailAddress\": \"ut quis nulla dolor\",\n     \"O\": \"eiusmod\",\n     \"OU\": \"et esse proident\",\n     \"C\": \"et Lorem Duis\",\n     \"ST\": \"eiusm\",\n     \"L\": \"dolore Lorem anim aute nostrud\"\n    },\n    \"issuer\": {\n     \"CN\": \"ut et eiusmod anim\",\n     \"emailAddress\": \"proident incidi\",\n     \"O\": \"labore veniam consequat\",\n     \"OU\": \"sit qui ut Lorem deserunt\",\n     \"C\": \"cupidatat culpa occaecat\",\n     \"ST\": \"aute dolor commodo ullamco\",\n     \"L\": \"aliquip minim culpa aute elit\"\n    },\n    \"subjectAlternativeNames\": [\n     \"commodo amet\",\n     \"amet\"\n    ],\n    \"serialNumber\": \"17159976289428250189079625547205715159\",\n    \"notBefore\": \"nostr\",\n    \"notAfter\": \"venia\",\n    \"signatureAlgorithm\": \"SHA256WithRSA\"\n   }\n  ],\n  \"validations\": [\n   {\n    \"validationCode\": \"CSR_CERT_SAME_SUBJECT_INFO\",\n    \"performed\": false,\n    \"result\": \"NOT_AVAILABLE\",\n    \"message\": \"veniam ad sit fugiat\",\n    \"messageTemplate\": \"mollit\",\n    \"data\": {},\n    \"details\": \"do elit proident quis\"\n   },\n   {\n    \"validationCode\": \"CERTIFICATE_USAGE_CLIENT\",\n    \"performed\": false,\n    \"result\": \"INVALID\",\n    \"message\": \"culpa ex\",\n    \"messageTemplate\": \"deserunt consecte\",\n    \"data\": {},\n    \"details\": \"do ullamco consequat\"\n   }\n  ],\n  \"validationState\": \"INVALID\"\n },\n {\n  \"name\": \"laboris Lorem deserunt do\",\n  \"type\": \"EXTERNAL\",\n  \"rootCertificate\": \"sed cupidatat\",\n  \"intermediateChain\": \"culpa Ut eiusmod ut\",\n  \"id\": -42654174,\n  \"rootCertificateInfo\": {\n   \"subject\": {\n    \"CN\": \"laborum Duis\",\n    \"emailAddress\": \"officia\",\n    \"O\": \"in deserunt ullamco\",\n    \"OU\": \"in elit quis ex\",\n    \"C\": \"consequat quis\",\n    \"ST\": \"fug\",\n    \"L\": \"do\"\n   },\n   \"issuer\": {\n    \"CN\": \"magna exercitation ipsum ani\",\n    \"emailAddress\": \"ipsum est in sit\",\n    \"O\": \"cupidatat ut exercitation sint\",\n    \"OU\": \"deserunt sunt amet\",\n    \"C\": \"labori\",\n    \"ST\": \"irure do labore\",\n    \"L\": \"in reprehenderit\"\n   },\n   \"subjectAlternativeNames\": [\n    \"quis\",\n    \"ipsum consequat\"\n   ],\n   \"serialNumber\": \"17159976289428250189079625547205715159\",\n   \"notBefore\": \"dolore labore do nulla\",\n   \"notAfter\": \"minim esse deserunt\",\n   \"signatureAlgorithm\": \"SHA256WithRSA\"\n  },\n  \"intermediateChainInfo\": [\n   {\n    \"subject\": {\n     \"CN\": \"nisi consectetur\",\n     \"emailAddress\": \"sint reprehenderit veniam\",\n     \"O\": \"deserunt amet ut esse\",\n     \"OU\": \"aliqua velit esse sint reprehenderit\",\n     \"C\": \"magna do dolore\",\n     \"ST\": \"dolor sint consectetur\",\n     \"L\": \"aliquip ad enim\"\n    },\n    \"issuer\": {\n     \"CN\": \"in sed irure officia\",\n     \"emailAddress\": \"veniam\",\n     \"O\": \"ullamco labore\",\n     \"OU\": \"ad labore enim aliquip\",\n     \"C\": \"labore\",\n     \"ST\": \"sit cupidatat dolor\",\n     \"L\": \"deserunt velit\"\n    },\n    \"subjectAlternativeNames\": [\n     \"exercitation laboris consequat eius\",\n     \"esse ex cillum\"\n    ],\n    \"serialNumber\": \"17159976289428250189079625547205715159\",\n    \"notBefore\": \"elit dolore dolore eu enim\",\n    \"notAfter\": \"reprehenderit sit sed in laboris\",\n    \"signatureAlgorithm\": \"SHA256WithRSA\"\n   },\n   {\n    \"subject\": {\n     \"CN\": \"Excepteur deserunt minim cillum\",\n     \"emailAddress\": \"Lorem dolor amet\",\n     \"O\": \"occaecat laborum ut eu dolore\",\n     \"OU\": \"anim cillum ad\",\n     \"C\": \"ad est eiusmod\",\n     \"ST\": \"do anim et\",\n     \"L\": \"\"\n    },\n    \"issuer\": {\n     \"CN\": \"anim mollit incididunt\",\n     \"emailAddress\": \"dolore deserunt\",\n     \"O\": \"minim consequat\",\n     \"OU\": \"minim Ut\",\n     \"C\": \"consequat e\",\n     \"ST\": \"veniam id\",\n     \"L\": \"proident exercitation\"\n    },\n    \"subjectAlternativeNames\": [\n     \"nulla incididunt\",\n     \"minim adipisicing \"\n    ],\n    \"serialNumber\": \"17159976289428250189079625547205715159\",\n    \"notBefore\": \"Ut esse\",\n    \"notAfter\": \"sint velit incididunt i\",\n    \"signatureAlgorithm\": \"SHA256WithRSA\"\n   }\n  ],\n  \"validations\": [\n   {\n    \"validationCode\": \"CSR_CERT_PUBLIC_PRIVATE_KEY_MATCH\",\n    \"performed\": true,\n    \"result\": \"INVALID\",\n    \"message\": \"veniam tempor minim proident dolore\",\n    \"messageTemplate\": \"nostrud aliquip ut adipisicing\",\n    \"data\": {},\n    \"details\": \"sed esse fugiat pariatur\"\n   },\n   {\n    \"validationCode\": \"CSR_SIGNATURE_ALGORITHM\",\n    \"performed\": true,\n    \"result\": \"INVALID\",\n    \"message\": \"ut\",\n    \"messageTemplate\": \"elit cillum\",\n    \"data\": {},\n    \"details\": \"ut aute eiusmod tempor\"\n   }\n  ],\n  \"validationState\": \"VALID\"\n }\n]"
														}
													]
												}
											]
										},
										{
											"name": "Returns all the dfsps for that monetary zone",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/environments/:envId/monetaryzones/:monetaryZoneId/dfsps",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"environments",
														":envId",
														"monetaryzones",
														":monetaryZoneId",
														"dfsps"
													],
													"variable": [
														{
															"key": "monetaryZoneId",
															"value": "<string>",
															"type": "string",
															"description": "(Required) ID of monetaryZone"
														},
														{
															"key": "envId",
															"value": "<string>",
															"type": "string",
															"description": "(Required) ID of environment"
														}
													]
												}
											},
											"response": [
												{
													"name": "successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/environments/:envId/monetaryzones/:monetaryZoneId/dfsps",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"environments",
																":envId",
																"monetaryzones",
																":monetaryZoneId",
																"dfsps"
															],
															"variable": [
																{
																	"key": "envId"
																},
																{
																	"key": "monetaryZoneId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[\n {\n  \"id\": \"deserunt incididunt est sit\",\n  \"name\": \"Ut consectetur aliqua elit mollit\",\n  \"batchId\": -29525424,\n  \"institution\": \"\",\n  \"direction\": \"OUTBOUND\",\n  \"currency\": \"PAB\",\n  \"amount\": \"32\",\n  \"type\": \"P2P\",\n  \"status\": \"PENDING\",\n  \"initiatedTimestamp\": \"1030-10-29T11:22:09.295-06:56\",\n  \"confirmationNumber\": 76449213,\n  \"sender\": \"esse labore tempor qui Ut\",\n  \"recipient\": \"ut\",\n  \"details\": \"ut nulla exercitation dolore cupidatat\"\n },\n {\n  \"id\": \"est reprehenderit sunt eu laborum\",\n  \"name\": \"ipsum amet in\",\n  \"batchId\": 53153818,\n  \"institution\": \"Lorem consequat amet\",\n  \"direction\": \"INBOUND\",\n  \"currency\": \"KES\",\n  \"amount\": \"8920432\",\n  \"type\": \"P2P\",\n  \"status\": \"SUCCESS\",\n  \"initiatedTimestamp\": \"8110-12-30T23:52:16.518Z\",\n  \"confirmationNumber\": -32261741,\n  \"sender\": \"id sint exercitation\",\n  \"recipient\": \"minim enim aute\",\n  \"details\": \"sunt irure Ut deserunt\"\n }\n]"
												}
											]
										}
									]
								},
								{
									"name": "Returns all the environments",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/environments",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"environments"
											]
										}
									},
									"response": [
										{
											"name": "successful operation",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/environments",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"environments"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n {\n  \"id\": 42,\n  \"name\": \"DEV\"\n },\n {\n  \"id\": 42,\n  \"name\": \"DEV\"\n }\n]"
										}
									]
								}
							]
						},
						{
							"name": "transfers",
							"item": [
								{
									"name": "{transfer Id}",
									"item": [
										{
											"name": "Retrieves a transfer",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/transfers/:transferId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"transfers",
														":transferId"
													],
													"variable": [
														{
															"key": "transferId",
															"value": "<string>",
															"type": "string",
															"description": "(Required) UUID of the transfer to get"
														}
													]
												}
											},
											"response": [
												{
													"name": "successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/transfers/:transferId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"transfers",
																":transferId"
															],
															"variable": [
																{
																	"key": "transferId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"id\": \"in aliqua Ut pariatur\",\n \"batchId\": 3029893,\n \"institution\": \"Excepteur incididunt\",\n \"direction\": \"INBOUND\",\n \"currency\": \"VEF\",\n \"amount\": \"432227.8547\",\n \"type\": \"P2P\",\n \"status\": \"PENDING\",\n \"initiatedTimestamp\": \"9609-12-22T10:09:42.327Z\",\n \"confirmationNumber\": 28028366,\n \"sender\": \"est ullamco enim\",\n \"recipient\": \"fugiat tempor exercitation\",\n \"details\": \"irure commodo labore sunt\"\n}"
												}
											]
										},
										{
											"name": "Retrieves full details for a transfer",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/transfers/:transferId/details",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"transfers",
														":transferId",
														"details"
													],
													"variable": [
														{
															"key": "transferId",
															"value": "<string>",
															"type": "string",
															"description": "(Required) UUID of the transfer to get"
														}
													]
												}
											},
											"response": [
												{
													"name": "successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/transfers/:transferId/details",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"transfers",
																":transferId",
																"details"
															],
															"variable": [
																{
																	"key": "transferId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"id\": \"dolor laborum amet sint\",\n \"confirmationNumber\": 66050238,\n \"amount\": \"89706335642913\",\n \"currency\": \"UYU\",\n \"institution\": \"in ullamco ea\",\n \"direction\": \"OUTBOUND\",\n \"sender\": \"dolor laborum commodo Lorem\",\n \"recipient\": \"labor\",\n \"details\": \"sunt do occaecat ad\",\n \"status\": \"PENDING\",\n \"initiatedTimestamp\": \"9197-09-22T20:27:28.064+02:13\",\n \"technicalDetails\": {\n  \"schemeTransferId\": \"0a6a03e1-1d77-2949-9f1f-075de453272f\",\n  \"homeTransferId\": \"anim ullamco pariatur dolor\",\n  \"transactionId\": \"adbd530c-ec3a-43c0-8232-28310a752e56\",\n  \"payerParty\": {\n   \"idType\": \"EMAIL\",\n   \"idValue\": \"sit \",\n   \"type\": \"BUSINESS\",\n   \"idSubValue\": \"in o\",\n   \"displayName\": \"velit officia dolor\",\n   \"firstName\": \"velit anim\",\n   \"middleName\": \"mollit laborum non\",\n   \"lastName\": \"Duis magna f\",\n   \"dateOfBirth\": \"6783-12-30\",\n   \"merchantClassificationCode\": \"amet sint laboris\",\n   \"fspId\": \"adipisicing Lorem commodo deserunt\",\n   \"extensionList\": [\n    {\n     \"key\": \"sed \",\n     \"value\": \"cons\"\n    },\n    {\n     \"key\": \"dolo\",\n     \"value\": \"qui \"\n    },\n    {\n     \"key\": \"cill\",\n     \"value\": \"occa\"\n    },\n    {\n     \"key\": \"null\",\n     \"value\": \"irur\"\n    },\n    {\n     \"key\": \"dolo\",\n     \"value\": \"comm\"\n    },\n    {\n     \"key\": \"moll\",\n     \"value\": \"ulla\"\n    },\n    {\n     \"key\": \"labo\",\n     \"value\": \"dolo\"\n    },\n    {\n     \"key\": \"repr\",\n     \"value\": \"mini\"\n    },\n    {\n     \"key\": \"id q\",\n     \"value\": \"exer\"\n    },\n    {\n     \"key\": \"Ut n\",\n     \"value\": \"Ut e\"\n    },\n    {\n     \"key\": \"volu\",\n     \"value\": \"fugi\"\n    },\n    {\n     \"key\": \"pari\",\n     \"value\": \"in e\"\n    },\n    {\n     \"key\": \"esse\",\n     \"value\": \"aliq\"\n    },\n    {\n     \"key\": \"anim\",\n     \"value\": \"quis\"\n    },\n    {\n     \"key\": \"ea o\",\n     \"value\": \"labo\"\n    },\n    {\n     \"key\": \"Duis\",\n     \"value\": \"exer\"\n    }\n   ]\n  },\n  \"payeeParty\": {\n   \"idType\": \"EMAIL\",\n   \"idValue\": \"veli\",\n   \"type\": \"CONSUMER\",\n   \"idSubValue\": \"cupi\",\n   \"displayName\": \"qui ad esse\",\n   \"firstName\": \"ut esse\",\n   \"middleName\": \"reprehenderit\",\n   \"lastName\": \"laborum nostrud elit anim\",\n   \"dateOfBirth\": \"4800-02-29\",\n   \"merchantClassificationCode\": \"irure deserunt Lorem Excepteur magna\",\n   \"fspId\": \"occaecat sunt ex\",\n   \"extensionList\": [\n    {\n     \"key\": \"do u\",\n     \"value\": \"doex\"\n    },\n    {\n     \"key\": \"dolo\",\n     \"value\": \"mini\"\n    },\n    {\n     \"key\": \"dolo\",\n     \"value\": \"amet\"\n    },\n    {\n     \"key\": \"inin\",\n     \"value\": \"eius\"\n    },\n    {\n     \"key\": \"ulla\",\n     \"value\": \"sit \"\n    },\n    {\n     \"key\": \"aute\",\n     \"value\": \"occa\"\n    },\n    {\n     \"key\": \"est \",\n     \"value\": \"nisi\"\n    },\n    {\n     \"key\": \"veni\",\n     \"value\": \"ipsu\"\n    },\n    {\n     \"key\": \"cons\",\n     \"value\": \"offi\"\n    },\n    {\n     \"key\": \"do v\",\n     \"value\": \"enim\"\n    },\n    {\n     \"key\": \"pari\",\n     \"value\": \"in r\"\n    },\n    {\n     \"key\": \"quis\",\n     \"value\": \"dese\"\n    },\n    {\n     \"key\": \"nisi\",\n     \"value\": \"moll\"\n    },\n    {\n     \"key\": \"labo\",\n     \"value\": \"eius\"\n    },\n    {\n     \"key\": \"Exce\",\n     \"value\": \"eius\"\n    },\n    {\n     \"key\": \"anim\",\n     \"value\": \"volu\"\n    }\n   ]\n  },\n  \"quoteId\": \"e187c0ed-e399-48fe-bf77-9dd56717b2e2\",\n  \"transferState\": \"WAITING_FOR_QUOTE_ACCEPTANCE\",\n  \"getPartiesRequest\": {\n   \"headers\": {},\n   \"body\": {}\n  },\n  \"getPartiesResponse\": {\n   \"headers\": {},\n   \"body\": {}\n  },\n  \"quoteRequest\": {\n   \"headers\": {},\n   \"body\": {}\n  },\n  \"quoteResponse\": {\n   \"headers\": {},\n   \"body\": {}\n  },\n  \"transferPrepare\": {\n   \"headers\": {},\n   \"body\": {}\n  },\n  \"transferFulfilment\": {\n   \"headers\": {},\n   \"body\": {}\n  },\n  \"lastError\": {\n   \"httpStatusCode\": -30722409,\n   \"mojaloopError\": {\n    \"errorInformation\": {\n     \"errorCode\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"errorDescription\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"extensionList\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    }\n   }\n  }\n }\n}"
												}
											]
										}
									]
								},
								{
									"name": "Retrieves all transfers",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/transfers?startTimestamp=8316-08-31T20:42:48.280-08:09&endTimestamp=8316-08-31T20:42:48.280-08:09&id=<string>&institution=<string>&status=ERROR",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"transfers"
											],
											"query": [
												{
													"key": "startTimestamp",
													"value": "8316-08-31T20:42:48.280-08:09"
												},
												{
													"key": "endTimestamp",
													"value": "8316-08-31T20:42:48.280-08:09"
												},
												{
													"key": "id",
													"value": "<string>"
												},
												{
													"key": "institution",
													"value": "<string>"
												},
												{
													"key": "status",
													"value": "ERROR"
												}
											]
										}
									},
									"response": [
										{
											"name": "successful operation",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/transfers?startTimestamp=5084-12-30T20:22:04.233Z&endTimestamp=5084-12-30T20:22:04.233Z&id=<string>&institution=<string>&status=ERROR",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"transfers"
													],
													"query": [
														{
															"key": "startTimestamp",
															"value": "5084-12-30T20:22:04.233Z"
														},
														{
															"key": "endTimestamp",
															"value": "5084-12-30T20:22:04.233Z"
														},
														{
															"key": "id",
															"value": "<string>"
														},
														{
															"key": "institution",
															"value": "<string>"
														},
														{
															"key": "status",
															"value": "ERROR"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n {\n  \"id\": \"enim incididunt\",\n  \"batchId\": -67842803,\n  \"institution\": \"commodo aliqua dolor exercitation\",\n  \"direction\": \"OUTBOUND\",\n  \"currency\": \"MVR\",\n  \"amount\": \"17291481848247.7525\",\n  \"type\": \"P2P\",\n  \"status\": \"SUCCESS\",\n  \"initiatedTimestamp\": \"7232-02-29T23:56:39.648Z\",\n  \"confirmationNumber\": -16561762,\n  \"sender\": \"ullamco id voluptate\",\n  \"recipient\": \"veniam labore\",\n  \"details\": \"consequat Duis laborum pariatur aliqua\"\n },\n {\n  \"id\": \"et Ut ut dolore\",\n  \"batchId\": 5467338,\n  \"institution\": \"exercitation\",\n  \"direction\": \"OUTBOUND\",\n  \"currency\": \"USD\",\n  \"amount\": \"9472857366486\",\n  \"type\": \"P2P\",\n  \"status\": \"ERROR\",\n  \"initiatedTimestamp\": \"3048-12-29T06:29:37.582+05:30\",\n  \"confirmationNumber\": -73296880,\n  \"sender\": \"officia non ea ex\",\n  \"recipient\": \"ex voluptate\",\n  \"details\": \"sunt consequat in\"\n }\n]"
										}
									]
								}
							]
						},
						{
							"name": "Health check endpoint",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/health",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"health"
									]
								},
								"description": "This endpoint checks the health of the endpoint."
							},
							"response": [
								{
									"name": "Returns empty body if the scheme adapter outbound transfers service is running.",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/health",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"health"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Retrieves all transfers with errors",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/transferErrors?startTimestamp=8316-08-31T20:42:48.280-08:09&endTimestamp=8316-08-31T20:42:48.280-08:09&id=<string>&institution=<string>&status=ERROR",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"transferErrors"
									],
									"query": [
										{
											"key": "startTimestamp",
											"value": "8316-08-31T20:42:48.280-08:09"
										},
										{
											"key": "endTimestamp",
											"value": "8316-08-31T20:42:48.280-08:09"
										},
										{
											"key": "id",
											"value": "<string>"
										},
										{
											"key": "institution",
											"value": "<string>"
										},
										{
											"key": "status",
											"value": "ERROR"
										}
									]
								}
							},
							"response": [
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/transferErrors?startTimestamp=5084-12-30T20:22:04.233Z&endTimestamp=5084-12-30T20:22:04.233Z&id=<string>&institution=<string>&status=ERROR",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"transferErrors"
											],
											"query": [
												{
													"key": "startTimestamp",
													"value": "5084-12-30T20:22:04.233Z"
												},
												{
													"key": "endTimestamp",
													"value": "5084-12-30T20:22:04.233Z"
												},
												{
													"key": "id",
													"value": "<string>"
												},
												{
													"key": "institution",
													"value": "<string>"
												},
												{
													"key": "status",
													"value": "ERROR"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n {\n  \"id\": \"enim incididunt\",\n  \"batchId\": -67842803,\n  \"institution\": \"commodo aliqua dolor exercitation\",\n  \"direction\": \"OUTBOUND\",\n  \"currency\": \"MVR\",\n  \"amount\": \"17291481848247.7525\",\n  \"type\": \"P2P\",\n  \"status\": \"SUCCESS\",\n  \"initiatedTimestamp\": \"7232-02-29T23:56:39.648Z\",\n  \"confirmationNumber\": -16561762,\n  \"sender\": \"ullamco id voluptate\",\n  \"recipient\": \"veniam labore\",\n  \"details\": \"consequat Duis laborum pariatur aliqua\"\n },\n {\n  \"id\": \"et Ut ut dolore\",\n  \"batchId\": 5467338,\n  \"institution\": \"exercitation\",\n  \"direction\": \"OUTBOUND\",\n  \"currency\": \"USD\",\n  \"amount\": \"9472857366486\",\n  \"type\": \"P2P\",\n  \"status\": \"ERROR\",\n  \"initiatedTimestamp\": \"3048-12-29T06:29:37.582+05:30\",\n  \"confirmationNumber\": -73296880,\n  \"sender\": \"officia non ea ex\",\n  \"recipient\": \"ex voluptate\",\n  \"details\": \"sunt consequat in\"\n }\n]"
								}
							]
						},
						{
							"name": "Retrieves hourly flow data",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/hourlyFlow?hoursPrevious=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"hourlyFlow"
									],
									"query": [
										{
											"key": "hoursPrevious",
											"value": "<integer>"
										}
									]
								}
							},
							"response": [
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/hourlyFlow?hoursPrevious=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"hourlyFlow"
											],
											"query": [
												{
													"key": "hoursPrevious",
													"value": "<integer>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n {\n  \"currency\": \"BZD\",\n  \"inbound\": \"0.528\",\n  \"outbound\": \"0\",\n  \"timestamp\": \"9674-12-10T02:32:19.551+09:57\"\n },\n {\n  \"currency\": \"GTQ\",\n  \"inbound\": \"204.54\",\n  \"outbound\": \"0\",\n  \"timestamp\": \"8032-02-29T23:49:42.695-01:09\"\n }\n]"
								}
							]
						},
						{
							"name": "Retrieves minute by minute successful transfer percentage data",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/minuteSuccessfulTransferPerc?minutePrevious=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"minuteSuccessfulTransferPerc"
									],
									"query": [
										{
											"key": "minutePrevious",
											"value": "<integer>"
										}
									]
								}
							},
							"response": [
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/minuteSuccessfulTransferPerc?minutePrevious=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"minuteSuccessfulTransferPerc"
											],
											"query": [
												{
													"key": "minutePrevious",
													"value": "<integer>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n {\n  \"percentage\": 89,\n  \"timestamp\": \"6556-02-29T23:07:39.194Z\"\n },\n {\n  \"percentage\": 56,\n  \"timestamp\": \"5629-11-10T20:08:50.318+04:58\"\n }\n]"
								}
							]
						},
						{
							"name": "Retrieves minute by minute average transfer response time data",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/minuteAverageTransferResponseTime?minutePrevious=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"minuteAverageTransferResponseTime"
									],
									"query": [
										{
											"key": "minutePrevious",
											"value": "<integer>"
										}
									]
								}
							},
							"response": [
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/minuteAverageTransferResponseTime?minutePrevious=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"minuteAverageTransferResponseTime"
											],
											"query": [
												{
													"key": "minutePrevious",
													"value": "<integer>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n {\n  \"averageResponseTime\": 42937453,\n  \"timestamp\": \"7418-11-11T21:04:57.687+17:41\"\n },\n {\n  \"averageResponseTime\": -76746168,\n  \"timestamp\": \"3568-02-29T22:11:10.405+07:15\"\n }\n]"
								}
							]
						},
						{
							"name": "Retrieves transfers status summary",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/transferStatusSummary?startTimestamp=8316-08-31T20:42:48.280-08:09&endTimestamp=8316-08-31T20:42:48.280-08:09",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"transferStatusSummary"
									],
									"query": [
										{
											"key": "startTimestamp",
											"value": "8316-08-31T20:42:48.280-08:09"
										},
										{
											"key": "endTimestamp",
											"value": "8316-08-31T20:42:48.280-08:09"
										}
									]
								}
							},
							"response": [
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/transferStatusSummary?startTimestamp=5084-12-30T20:22:04.233Z&endTimestamp=5084-12-30T20:22:04.233Z",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"transferStatusSummary"
											],
											"query": [
												{
													"key": "startTimestamp",
													"value": "5084-12-30T20:22:04.233Z"
												},
												{
													"key": "endTimestamp",
													"value": "5084-12-30T20:22:04.233Z"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n {\n  \"count\": 90041039,\n  \"status\": \"PENDING\"\n },\n {\n  \"count\": 53478554,\n  \"status\": \"ERROR\"\n }\n]"
								}
							]
						},
						{
							"name": "Retrieves position, reserved, committed balances for a given time-period ",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/balances?startTimestamp=8316-08-31T20:42:48.280-08:09&endTimestamp=8316-08-31T20:42:48.280-08:09",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"balances"
									],
									"query": [
										{
											"key": "startTimestamp",
											"value": "8316-08-31T20:42:48.280-08:09"
										},
										{
											"key": "endTimestamp",
											"value": "8316-08-31T20:42:48.280-08:09"
										}
									]
								}
							},
							"response": [
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/balances?startTimestamp=5084-12-30T20:22:04.233Z&endTimestamp=5084-12-30T20:22:04.233Z",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"balances"
											],
											"query": [
												{
													"key": "startTimestamp",
													"value": "5084-12-30T20:22:04.233Z"
												},
												{
													"key": "endTimestamp",
													"value": "5084-12-30T20:22:04.233Z"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n {\n  \"currency\": \"LAK\",\n  \"position\": \"826.764\",\n  \"reserved\": \"3191618502140550.09\",\n  \"committed\": \"684696570152.41\",\n  \"liquidity\": \"912046420876187.1379\",\n  \"timestamp\": \"3524-12-29T16:58:57.409Z\"\n },\n {\n  \"currency\": \"HRK\",\n  \"position\": \"88957569172748\",\n  \"reserved\": \"677229.124\",\n  \"committed\": \"4914400936.82\",\n  \"liquidity\": \"0.2171\",\n  \"timestamp\": \"7032-05-29T16:09:20.542-17:30\"\n }\n]"
								}
							]
						},
						{
							"name": "Returns the monetary zones supported",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/monetaryzones",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"monetaryzones"
									]
								}
							},
							"response": [
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/monetaryzones",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"monetaryzones"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n {\n  \"monetaryZoneId\": \"EUR\",\n  \"name\": \"Euro\"\n },\n {\n  \"monetaryZoneId\": \"EUR\",\n  \"name\": \"Euro\"\n }\n]"
								}
							]
						}
					]
				},
				{
					"name": "core-connector",
					"item": [
						{
							"name": "sendmoney",
							"item": [
								{
									"name": "demowallet-to-demomfi-core-conn",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"homeTransactionId\": \"ullamco aliquip\",\n    \"from\": {\n        \"idType\": \"MSISDN\",\n        \"idValue\": \"commodo minim\",\n        \"type\": \"CONSUMER\",\n        \"displayName\": \"exercitat\",\n        \"firstName\": \"quis dolor ut enim nisi\",\n        \"middleName\": \"aliqua Excepteur labore occaecat\",\n        \"lastName\": \"ad sint\",\n        \"dateOfBirth\": \"6731-12-31\",\n        \"merchantClassificationCode\": \"9\",\n        \"fspId\": \"Duis eu\",\n        \"extensionList\": [\n            {\n                \"key\": \"pariatur reprehenderit\",\n                \"value\": \"et\"\n            },\n            {\n                \"key\": \"nisi \",\n                \"value\": \"commo\"\n            },\n            {\n                \"key\": \"cupidatat sed\",\n                \"value\": \"anim sint proident\"\n            },\n            {\n                \"key\": \"ex\",\n                \"value\": \"cillum\"\n            },\n            {\n                \"key\": \"et\",\n                \"value\": \"deserunt ea offici\"\n            },\n            {\n                \"key\": \"magna sunt id de\",\n                \"value\": \"reprehenderit ullamco elit fugi\"\n            },\n            {\n                \"key\": \"irure do Lorem dolore\",\n                \"value\": \"exercitation eiusmod ea dolor laborum\"\n            },\n            {\n                \"key\": \"ullamco lab\",\n                \"value\": \"Duis ea\"\n            },\n            {\n                \"key\": \"qui laboris ipsum mo\",\n                \"value\": \"magna consequat do\"\n            },\n            {\n                \"key\": \"veniam proident commodo \",\n                \"value\": \"exercitation est\"\n            },\n            {\n                \"key\": \"dolor dolore irure ad\",\n                \"value\": \"aute mollit ut sed\"\n            },\n            {\n                \"key\": \"dolore anim irur\",\n                \"value\": \"voluptate eu sed incididunt\"\n            },\n            {\n                \"key\": \"irure nostrud\",\n                \"value\": \"sunt ea anim in\"\n            },\n            {\n                \"key\": \"cillum Duis do\",\n                \"value\": \"occaecat anim minim eiusmod\"\n            },\n            {\n                \"key\": \"magna incididunt tempor\",\n                \"value\": \"enim dolor minim\"\n            },\n            {\n                \"key\": \"volup\",\n                \"value\": \"reprehender\"\n            }\n        ]\n    },\n    \"to\": {\n        \"idType\": \"ACCOUNT_ID\",\n        \"idValue\": \"occaecat consectetur magna Ut\",\n        \"type\": \"CONSUMER\",\n        \"displayName\": \"deserunt minim sint su\",\n        \"firstName\": \"ex irure veniam\",\n        \"middleName\": \"id veniam deserunt culpa\",\n        \"lastName\": \"voluptate cillum\",\n        \"dateOfBirth\": \"4392-12-31\",\n        \"merchantClassificationCode\": \"889\",\n        \"fspId\": \"reprehenderit aliquip pr\",\n        \"extensionList\": [\n            {\n                \"key\": \"ullamco\",\n                \"value\": \"laborum dolore ut irure\"\n            },\n            {\n                \"key\": \"velit esse\",\n                \"value\": \"ut enim sint eu nulla\"\n            },\n            {\n                \"key\": \"minim reprehenderit ea \",\n                \"value\": \"ullamco enim eiusmod\"\n            },\n            {\n                \"key\": \"deser\",\n                \"value\": \"velit minim reprehenderit\"\n            },\n            {\n                \"key\": \"consequat Lorem velit\",\n                \"value\": \"pariatur ea minim\"\n            },\n            {\n                \"key\": \"amet \",\n                \"value\": \"aliqua occaecat\"\n            },\n            {\n                \"key\": \"nostrud consequat irure es\",\n                \"value\": \"aliquip laboris ut tempor\"\n            },\n            {\n                \"key\": \"et tempor occ\",\n                \"value\": \"nisi\"\n            },\n            {\n                \"key\": \"eu \",\n                \"value\": \"Duis ipsum magna\"\n            },\n            {\n                \"key\": \"ullamco ad qu\",\n                \"value\": \"velit ut commodo in qui\"\n            },\n            {\n                \"key\": \"commodo velit fugi\",\n                \"value\": \"id dolore\"\n            },\n            {\n                \"key\": \"quis pariatur cil\",\n                \"value\": \"cillum dolore consequat incididunt\"\n            },\n            {\n                \"key\": \"cupidatat reprehenderit\",\n                \"value\": \"incididunt in sint\"\n            },\n            {\n                \"key\": \"ex anim irure Except\",\n                \"value\": \"proident ut aute\"\n            },\n            {\n                \"key\": \"quis a\",\n                \"value\": \"esse\"\n            },\n            {\n                \"key\": \"aliquip\",\n                \"value\": \"do tempor amet anim\"\n            }\n        ]\n    },\n    \"amountType\": \"RECEIVE\",\n    \"currency\": \"CUP\",\n    \"amount\": \"0\",\n    \"transactionType\": \"TRANSFER\",\n    \"note\": \"sit et exercitation esse\",\n    \"quoteRequestExtensions\": [\n        {\n            \"key\": \"qui\",\n            \"value\": \"ex elit\"\n        },\n        {\n            \"key\": \"sed exercita\",\n            \"value\": \"sunt pariatur\"\n        },\n        {\n            \"key\": \"occaecat enim\",\n            \"value\": \"veniam amet nisi Excepteur reprehenderit\"\n        },\n        {\n            \"key\": \"in\",\n            \"value\": \"Excepteur adipisicing nostrud minim\"\n        },\n        {\n            \"key\": \"Lorem volupta\",\n            \"value\": \"sed\"\n        },\n        {\n            \"key\": \"do\",\n            \"value\": \"in enim Ut magna\"\n        },\n        {\n            \"key\": \"ut consectetur\",\n            \"value\": \"ea incididunt esse\"\n        },\n        {\n            \"key\": \"Lorem\",\n            \"value\": \"reprehenderit velit\"\n        },\n        {\n            \"key\": \"aute laboris\",\n            \"value\": \"amet\"\n        },\n        {\n            \"key\": \"deserunt ex\",\n            \"value\": \"ex est\"\n        },\n        {\n            \"key\": \"incididunt minim sint veli\",\n            \"value\": \"culpa nostrud ullamco ad\"\n        },\n        {\n            \"key\": \"elit est \",\n            \"value\": \"aliquip nostrud quis\"\n        },\n        {\n            \"key\": \"repreh\",\n            \"value\": \"in dolore\"\n        },\n        {\n            \"key\": \"f\",\n            \"value\": \"occaecat qui commodo ut\"\n        },\n        {\n            \"key\": \"es\",\n            \"value\": \"nostrud magna elit Excepteur aliqua\"\n        },\n        {\n            \"key\": \"do sit in est\",\n            \"value\": \"do minim commodo reprehenderit aliqua\"\n        }\n    ],\n    \"transferRequestExtensions\": [\n        {\n            \"key\": \"do\",\n            \"value\": \"Lorem cup\"\n        },\n        {\n            \"key\": \"Lorem\",\n            \"value\": \"et sit\"\n        },\n        {\n            \"key\": \"eiusmod o\",\n            \"value\": \"Duis voluptate\"\n        },\n        {\n            \"key\": \"aute culp\",\n            \"value\": \"magna officia cillum fugiat\"\n        },\n        {\n            \"key\": \"Excepteur veniam\",\n            \"value\": \"do cillum occaecat\"\n        },\n        {\n            \"key\": \"eius\",\n            \"value\": \"veniam Lorem ut\"\n        },\n        {\n            \"key\": \"cupidatat mollit proid\",\n            \"value\": \"aliqua in nisi laborum culpa\"\n        },\n        {\n            \"key\": \"aute\",\n            \"value\": \"laborum ea\"\n        },\n        {\n            \"key\": \"labore sed\",\n            \"value\": \"deserunt Ut\"\n        },\n        {\n            \"key\": \"eiusm\",\n            \"value\": \"dolor enim laboris\"\n        },\n        {\n            \"key\": \"ex dolore\",\n            \"value\": \"consequat Duis\"\n        },\n        {\n            \"key\": \"sunt reprehenderit consecte\",\n            \"value\": \"eu sunt dolor u\"\n        },\n        {\n            \"key\": \"proid\",\n            \"value\": \"culpa dolore ullamco ea nulla\"\n        },\n        {\n            \"key\": \"ea aliquip dolor v\",\n            \"value\": \"nisi irure proident occaecat\"\n        },\n        {\n            \"key\": \"eiusmod consectetur\",\n            \"value\": \"dolore reprehenderit sunt\"\n        },\n        {\n            \"key\": \"cupidatat sunt\",\n            \"value\": \"proident mollit exercitation Ut\"\n        }\n    ]\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/sendmoney",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"sendmoney"
											]
										},
										"description": "The HTTP request `POST /sendmoney` is used by the Payer DFSP to request the movement of funds from the Payer DFSP to the Payee DFSP. The underlying Mojaloop API has three stages for money transfer:\n  1. Party lookup (discovery phase). This facilitates a check by the sending party that the destination party is correct before proceeding with a money movement.\n  2. Quotation (agreement phase). This facilitates the exchange of fee information and the construction of a cryptographic \"contract\" between the Payee and Payer DFSPs before funds are transferred.\n  3. Transfer (transfer phase). The enactment of the previously agreed \"contract\".\nThis method has several modes of operation. - If the configuration variable `AUTO_ACCEPT_PARTY` is set to `\"false\"`, this method will terminate when the Payee party has been resolved and Payee party details have been returned.\n  If the Payer wishes to proceed with the transfer, then a subsequent `PUT /sendmoney/{transferId}` request (accepting the Payee party) is required to continue the operation.\n  The Payment Manager will then proceed to the quotation stage.\n- If the configuration variable `AUTO_ACCEPT_QUOTES` is set to `\"false\"`, this method will terminate and return the quotation when it has been received from the Payee DFSP.\n  If the Payee wishes to proceed with the transfer, then a subsequent `PUT /sendmoney/{transferId}` request (accepting the quote) is required to continue the operation.\n  The Payment Manager will then proceed to the transfer state.\nIf the configuration variables `AUTO_ACCEPT_PARTY` and `AUTO_ACCEPT_QUOTES` are both set to `\"true\"`, this method will block until all three transfer stages are complete. Upon completion, it will return the entire set of transfer details received during the operation. Combinations of settings for `AUTO_ACCEPT...` configuration variables allow the Payment Manager user to decide which mode of operation best suits their use cases. i.e., the Payment Manager can be configured to \"break\" the three-stage transfer at these points in order to execute backend logic such as party verification, quoted fees assessments, etc.\n"
									},
									"response": []
								},
								{
									"name": "Continues a transfer that has paused at the party lookup and/or quote stage in order to accept or reject Payee party and/or quote",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"acceptParty\": true\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/sendmoney/:transferId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"sendmoney",
												":transferId"
											],
											"variable": [
												{
													"key": "transferId",
													"value": "b4ec7792-1b60-34d9-bb47-f6cb33234cb4",
													"type": "string",
													"description": "(Required) Transfer identifier."
												}
											]
										},
										"description": "The HTTP request `PUT /sendmoney/{transferId}` is used by the Payer DFSP to continue a transfer initiated via the `POST /sendmoney` method that has halted after party lookup and/or quotation stage. The request body should contain either the \"acceptParty\" or \"acceptQuote\" property set to `true` as required to continue the transfer. See the description of the `POST /sendmoney` HTTP method for more information on modes of transfer.\n"
									},
									"response": [
										{
											"name": "An error occurred processing the transfer",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"acceptParty\": true\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/sendmoney/:transferId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"sendmoney",
														":transferId"
													],
													"variable": [
														{
															"key": "transferId"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"transferState\": {\n  \"homeTransactionId\": \"magna officia in Ut\",\n  \"from\": {\n   \"idType\": \"ACCOUNT_ID\",\n   \"idValue\": \"reprehenderit laborum\",\n   \"type\": \"CONSUMER\",\n   \"displayName\": \"ad tempor\",\n   \"firstName\": \"in labore qui Lorem\",\n   \"middleName\": \"adipisicing nostrud veniam\",\n   \"lastName\": \"reprehenderit qui\",\n   \"dateOfBirth\": \"2800-02-29\",\n   \"merchantClassificationCode\": \"84\",\n   \"fspId\": \"dolore cillum amet\",\n   \"extensionList\": [\n    {\n     \"key\": \"ut laboris do\",\n     \"value\": \"labore aute\"\n    },\n    {\n     \"key\": \"irure\",\n     \"value\": \"officia dolore\"\n    },\n    {\n     \"key\": \"dolor cupidatat\",\n     \"value\": \"mollit pariatur do\"\n    },\n    {\n     \"key\": \"qui\",\n     \"value\": \"eli\"\n    },\n    {\n     \"key\": \"consequat ips\",\n     \"value\": \"adipisicing esse amet minim\"\n    },\n    {\n     \"key\": \"irure\",\n     \"value\": \"deserunt ad eiusmod\"\n    },\n    {\n     \"key\": \"adipisicing c\",\n     \"value\": \"dolore irure cons\"\n    },\n    {\n     \"key\": \"irure reprehenderit sint\",\n     \"value\": \"cillum voluptate incididunt\"\n    },\n    {\n     \"key\": \"tempor\",\n     \"value\": \"cupidatat\"\n    },\n    {\n     \"key\": \"cup\",\n     \"value\": \"magna in ad exercit\"\n    },\n    {\n     \"key\": \"in\",\n     \"value\": \"ex\"\n    },\n    {\n     \"key\": \"culpa f\",\n     \"value\": \"pariatur enim aliquip\"\n    },\n    {\n     \"key\": \"nulla\",\n     \"value\": \"velit\"\n    },\n    {\n     \"key\": \"Duis nisi exercitation\",\n     \"value\": \"elit in minim aute\"\n    },\n    {\n     \"key\": \"e\",\n     \"value\": \"sint nulla pariatur\"\n    },\n    {\n     \"key\": \"mollit proident\",\n     \"value\": \"magna\"\n    }\n   ]\n  },\n  \"to\": {\n   \"idType\": \"MSISDN\",\n   \"idValue\": \"et dolore culpa\",\n   \"type\": \"BUSINESS\",\n   \"displayName\": \"sed\",\n   \"firstName\": \"amet esse sit\",\n   \"middleName\": \"aute qui reprehenderit\",\n   \"lastName\": \"ut commodo\",\n   \"dateOfBirth\": \"7086-11-01\",\n   \"merchantClassificationCode\": \"9487\",\n   \"fspId\": \"qui mol\",\n   \"extensionList\": [\n    {\n     \"key\": \"ut tempor adipisicing\",\n     \"value\": \"pariatur fugiat nisi aliqua\"\n    },\n    {\n     \"key\": \"veniam aute inci\",\n     \"value\": \"nulla mollit\"\n    },\n    {\n     \"key\": \"Ut Duis aliqua pariatur\",\n     \"value\": \"enim laborum\"\n    },\n    {\n     \"key\": \"cillum sint non id\",\n     \"value\": \"mollit ut qui\"\n    },\n    {\n     \"key\": \"aliqua ullamco ex\",\n     \"value\": \"amet esse fugiat irure\"\n    },\n    {\n     \"key\": \"labore\",\n     \"value\": \"ea culpa labore ut\"\n    },\n    {\n     \"key\": \"dolore velit incididunt do\",\n     \"value\": \"dolore laboris Ut\"\n    },\n    {\n     \"key\": \"esse laboris sunt eiusmod\",\n     \"value\": \"veniam sunt laborum laboris\"\n    },\n    {\n     \"key\": \"sint dolor\",\n     \"value\": \"labore esse culpa\"\n    },\n    {\n     \"key\": \"fugiat of\",\n     \"value\": \"voluptate eu cupidatat\"\n    },\n    {\n     \"key\": \"deserunt\",\n     \"value\": \"aliquip\"\n    },\n    {\n     \"key\": \"dolo\",\n     \"value\": \"Lorem nostrud ut\"\n    },\n    {\n     \"key\": \"in esse consectetur\",\n     \"value\": \"enim cupidatat\"\n    },\n    {\n     \"key\": \"amet\",\n     \"value\": \"sed Ut eu\"\n    },\n    {\n     \"key\": \"aliquip incididunt consequa\",\n     \"value\": \"magna\"\n    },\n    {\n     \"key\": \"esse u\",\n     \"value\": \"qui velit dolore et elit\"\n    }\n   ]\n  },\n  \"amountType\": \"SEND\",\n  \"currency\": \"UGX\",\n  \"amount\": \"8.79\",\n  \"transactionType\": \"TRANSFER\",\n  \"transferId\": \"afef4c83-d68c-1ea1-8782-c6561cbfc897\",\n  \"note\": \"commodo\",\n  \"currentState\": \"WAITING_FOR_PARTY_ACCEPTANCE\",\n  \"quoteId\": \"5a4cc309-b06e-4930-9a37-a98479bd9870\",\n  \"quoteResponse\": {\n   \"transferAmount\": {\n    \"currency\": \"BMD\",\n    \"amount\": \"0.0044\"\n   },\n   \"expiration\": \"5658-08-31T04:28:01.473-11:39\",\n   \"ilpPacket\": \"AiQLsAM3Hj==\",\n   \"condition\": \"qEidg0Suq6XsGGaR-5WqqXsn3tX1SarxsfnIgQ3tB0q\",\n   \"payeeReceiveAmount\": {\n    \"currency\": \"CVE\",\n    \"amount\": \"0\"\n   },\n   \"payeeFspFee\": {\n    \"currency\": \"NGN\",\n    \"amount\": \"0.57\"\n   },\n   \"payeeFspCommission\": {\n    \"currency\": \"EUR\",\n    \"amount\": \"14406303805998\"\n   },\n   \"geoCode\": {\n    \"latitude\": \"90\",\n    \"longitude\": \"102\"\n   },\n   \"extensionList\": {\n    \"extension\": [\n     {\n      \"key\": \"culpa e\",\n      \"value\": \"fugiat aliquip Duis Excepteur\"\n     }\n    ]\n   }\n  },\n  \"quoteResponseSource\": \"nul\",\n  \"fulfil\": {\n   \"transferState\": \"COMMITTED\",\n   \"fulfilment\": \"mGa-MZ0RbJlyY4WS1lNlSM-kFzwSMm9lcv9KKnGx1wR\",\n   \"completedTimestamp\": \"7600-02-29T23:52:35.555Z\",\n   \"extensionList\": {\n    \"extension\": [\n     {\n      \"key\": \"do mollit esse qui\",\n      \"value\": \"occaecat esse Lorem labore\"\n     }\n    ]\n   }\n  },\n  \"lastError\": {\n   \"httpStatusCode\": -50625256,\n   \"mojaloopError\": {\n    \"errorInformation\": {\n     \"errorCode\": \"9481\",\n     \"errorDescription\": \"exercitation Lorem\",\n     \"extensionList\": {\n      \"extension\": [\n       {\n        \"key\": \"ipsum et consequat al\",\n        \"value\": \"proident Ut do\"\n       }\n      ]\n     }\n    }\n   }\n  }\n },\n \"statusCode\": \"4153\",\n \"message\": \"non in deserunt ea\"\n}"
										},
										{
											"name": "Timeout occurred processing the transfer",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"acceptParty\": true\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/sendmoney/:transferId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"sendmoney",
														":transferId"
													],
													"variable": [
														{
															"key": "transferId"
														}
													]
												}
											},
											"status": "Gateway Timeout",
											"code": 504,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"transferState\": {\n  \"homeTransactionId\": \"magna officia in Ut\",\n  \"from\": {\n   \"idType\": \"ACCOUNT_ID\",\n   \"idValue\": \"reprehenderit laborum\",\n   \"type\": \"CONSUMER\",\n   \"displayName\": \"ad tempor\",\n   \"firstName\": \"in labore qui Lorem\",\n   \"middleName\": \"adipisicing nostrud veniam\",\n   \"lastName\": \"reprehenderit qui\",\n   \"dateOfBirth\": \"2800-02-29\",\n   \"merchantClassificationCode\": \"84\",\n   \"fspId\": \"dolore cillum amet\",\n   \"extensionList\": [\n    {\n     \"key\": \"ut laboris do\",\n     \"value\": \"labore aute\"\n    },\n    {\n     \"key\": \"irure\",\n     \"value\": \"officia dolore\"\n    },\n    {\n     \"key\": \"dolor cupidatat\",\n     \"value\": \"mollit pariatur do\"\n    },\n    {\n     \"key\": \"qui\",\n     \"value\": \"eli\"\n    },\n    {\n     \"key\": \"consequat ips\",\n     \"value\": \"adipisicing esse amet minim\"\n    },\n    {\n     \"key\": \"irure\",\n     \"value\": \"deserunt ad eiusmod\"\n    },\n    {\n     \"key\": \"adipisicing c\",\n     \"value\": \"dolore irure cons\"\n    },\n    {\n     \"key\": \"irure reprehenderit sint\",\n     \"value\": \"cillum voluptate incididunt\"\n    },\n    {\n     \"key\": \"tempor\",\n     \"value\": \"cupidatat\"\n    },\n    {\n     \"key\": \"cup\",\n     \"value\": \"magna in ad exercit\"\n    },\n    {\n     \"key\": \"in\",\n     \"value\": \"ex\"\n    },\n    {\n     \"key\": \"culpa f\",\n     \"value\": \"pariatur enim aliquip\"\n    },\n    {\n     \"key\": \"nulla\",\n     \"value\": \"velit\"\n    },\n    {\n     \"key\": \"Duis nisi exercitation\",\n     \"value\": \"elit in minim aute\"\n    },\n    {\n     \"key\": \"e\",\n     \"value\": \"sint nulla pariatur\"\n    },\n    {\n     \"key\": \"mollit proident\",\n     \"value\": \"magna\"\n    }\n   ]\n  },\n  \"to\": {\n   \"idType\": \"MSISDN\",\n   \"idValue\": \"et dolore culpa\",\n   \"type\": \"BUSINESS\",\n   \"displayName\": \"sed\",\n   \"firstName\": \"amet esse sit\",\n   \"middleName\": \"aute qui reprehenderit\",\n   \"lastName\": \"ut commodo\",\n   \"dateOfBirth\": \"7086-11-01\",\n   \"merchantClassificationCode\": \"9487\",\n   \"fspId\": \"qui mol\",\n   \"extensionList\": [\n    {\n     \"key\": \"ut tempor adipisicing\",\n     \"value\": \"pariatur fugiat nisi aliqua\"\n    },\n    {\n     \"key\": \"veniam aute inci\",\n     \"value\": \"nulla mollit\"\n    },\n    {\n     \"key\": \"Ut Duis aliqua pariatur\",\n     \"value\": \"enim laborum\"\n    },\n    {\n     \"key\": \"cillum sint non id\",\n     \"value\": \"mollit ut qui\"\n    },\n    {\n     \"key\": \"aliqua ullamco ex\",\n     \"value\": \"amet esse fugiat irure\"\n    },\n    {\n     \"key\": \"labore\",\n     \"value\": \"ea culpa labore ut\"\n    },\n    {\n     \"key\": \"dolore velit incididunt do\",\n     \"value\": \"dolore laboris Ut\"\n    },\n    {\n     \"key\": \"esse laboris sunt eiusmod\",\n     \"value\": \"veniam sunt laborum laboris\"\n    },\n    {\n     \"key\": \"sint dolor\",\n     \"value\": \"labore esse culpa\"\n    },\n    {\n     \"key\": \"fugiat of\",\n     \"value\": \"voluptate eu cupidatat\"\n    },\n    {\n     \"key\": \"deserunt\",\n     \"value\": \"aliquip\"\n    },\n    {\n     \"key\": \"dolo\",\n     \"value\": \"Lorem nostrud ut\"\n    },\n    {\n     \"key\": \"in esse consectetur\",\n     \"value\": \"enim cupidatat\"\n    },\n    {\n     \"key\": \"amet\",\n     \"value\": \"sed Ut eu\"\n    },\n    {\n     \"key\": \"aliquip incididunt consequa\",\n     \"value\": \"magna\"\n    },\n    {\n     \"key\": \"esse u\",\n     \"value\": \"qui velit dolore et elit\"\n    }\n   ]\n  },\n  \"amountType\": \"SEND\",\n  \"currency\": \"UGX\",\n  \"amount\": \"8.79\",\n  \"transactionType\": \"TRANSFER\",\n  \"transferId\": \"afef4c83-d68c-1ea1-8782-c6561cbfc897\",\n  \"note\": \"commodo\",\n  \"currentState\": \"WAITING_FOR_PARTY_ACCEPTANCE\",\n  \"quoteId\": \"5a4cc309-b06e-4930-9a37-a98479bd9870\",\n  \"quoteResponse\": {\n   \"transferAmount\": {\n    \"currency\": \"BMD\",\n    \"amount\": \"0.0044\"\n   },\n   \"expiration\": \"5658-08-31T04:28:01.473-11:39\",\n   \"ilpPacket\": \"AiQLsAM3Hj==\",\n   \"condition\": \"qEidg0Suq6XsGGaR-5WqqXsn3tX1SarxsfnIgQ3tB0q\",\n   \"payeeReceiveAmount\": {\n    \"currency\": \"CVE\",\n    \"amount\": \"0\"\n   },\n   \"payeeFspFee\": {\n    \"currency\": \"NGN\",\n    \"amount\": \"0.57\"\n   },\n   \"payeeFspCommission\": {\n    \"currency\": \"EUR\",\n    \"amount\": \"14406303805998\"\n   },\n   \"geoCode\": {\n    \"latitude\": \"90\",\n    \"longitude\": \"102\"\n   },\n   \"extensionList\": {\n    \"extension\": [\n     {\n      \"key\": \"culpa e\",\n      \"value\": \"fugiat aliquip Duis Excepteur\"\n     }\n    ]\n   }\n  },\n  \"quoteResponseSource\": \"nul\",\n  \"fulfil\": {\n   \"transferState\": \"COMMITTED\",\n   \"fulfilment\": \"mGa-MZ0RbJlyY4WS1lNlSM-kFzwSMm9lcv9KKnGx1wR\",\n   \"completedTimestamp\": \"7600-02-29T23:52:35.555Z\",\n   \"extensionList\": {\n    \"extension\": [\n     {\n      \"key\": \"do mollit esse qui\",\n      \"value\": \"occaecat esse Lorem labore\"\n     }\n    ]\n   }\n  },\n  \"lastError\": {\n   \"httpStatusCode\": -50625256,\n   \"mojaloopError\": {\n    \"errorInformation\": {\n     \"errorCode\": \"9481\",\n     \"errorDescription\": \"exercitation Lorem\",\n     \"extensionList\": {\n      \"extension\": [\n       {\n        \"key\": \"ipsum et consequat al\",\n        \"value\": \"proident Ut do\"\n       }\n      ]\n     }\n    }\n   }\n  }\n },\n \"statusCode\": \"4153\",\n \"message\": \"non in deserunt ea\"\n}"
										},
										{
											"name": "Transfer completed successfully",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"acceptParty\": true\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/sendmoney/:transferId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"sendmoney",
														":transferId"
													],
													"variable": [
														{
															"key": "transferId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"homeTransactionId\": \"anim aliqua ut\",\n \"from\": {\n  \"idType\": \"MSISDN\",\n  \"idValue\": \"veniam commodo ex laborum occaecat\",\n  \"type\": \"DEVICE\",\n  \"displayName\": \"dolor do ea amet\",\n  \"firstName\": \"Duis officia\",\n  \"middleName\": \"nostrud p\",\n  \"lastName\": \"Ut occaecat\",\n  \"dateOfBirth\": \"3896-04-27\",\n  \"merchantClassificationCode\": \"2\",\n  \"fspId\": \"deserunt et voluptate\",\n  \"extensionList\": [\n   {\n    \"key\": \"eiusmod\",\n    \"value\": \"fugiat culpa dolore\"\n   },\n   {\n    \"key\": \"culpa\",\n    \"value\": \"dolore sunt mollit aliquip ea\"\n   },\n   {\n    \"key\": \"deserunt \",\n    \"value\": \"Lorem incididunt\"\n   },\n   {\n    \"key\": \"nisi\",\n    \"value\": \"elit in irure\"\n   },\n   {\n    \"key\": \"in culpa in Excepteur\",\n    \"value\": \"nisi Duis do\"\n   },\n   {\n    \"key\": \"aliquip fugiat\",\n    \"value\": \"ut Duis in quis veniam\"\n   },\n   {\n    \"key\": \"tempor \",\n    \"value\": \"est\"\n   },\n   {\n    \"key\": \"adip\",\n    \"value\": \"in nisi dolore dolore\"\n   },\n   {\n    \"key\": \"irure\",\n    \"value\": \"aliqua anim aute Excepteur\"\n   },\n   {\n    \"key\": \"anim\",\n    \"value\": \"dolor eiusmod nisi\"\n   },\n   {\n    \"key\": \"quis id\",\n    \"value\": \"Excepteur eu\"\n   },\n   {\n    \"key\": \"nisi\",\n    \"value\": \"officia est laborum c\"\n   },\n   {\n    \"key\": \"ipsum\",\n    \"value\": \"ex do\"\n   },\n   {\n    \"key\": \"nostrud in Duis qui p\",\n    \"value\": \"irure dolor consectetur ipsum\"\n   },\n   {\n    \"key\": \"nisi esse\",\n    \"value\": \"dolor qui commodo\"\n   },\n   {\n    \"key\": \"irure nulla\",\n    \"value\": \"labore ut incididunt esse Excepteur\"\n   }\n  ]\n },\n \"to\": {\n  \"idType\": \"MSISDN\",\n  \"idValue\": \"cupidatat\",\n  \"type\": \"CONSUMER\",\n  \"displayName\": \"ullamco dolor\",\n  \"firstName\": \"culpa in Duis do\",\n  \"middleName\": \"qui adipisicing\",\n  \"lastName\": \"incididunt Lorem\",\n  \"dateOfBirth\": \"4237-10-02\",\n  \"merchantClassificationCode\": \"57\",\n  \"fspId\": \"nostrud tempor dolor dolor e\",\n  \"extensionList\": [\n   {\n    \"key\": \"velit\",\n    \"value\": \"in sint\"\n   },\n   {\n    \"key\": \"ad et officia\",\n    \"value\": \"incididunt mol\"\n   },\n   {\n    \"key\": \"in\",\n    \"value\": \"ut est nulla ad\"\n   },\n   {\n    \"key\": \"aliqua f\",\n    \"value\": \"in sunt aliqua labore est\"\n   },\n   {\n    \"key\": \"labore\",\n    \"value\": \"adipisicing consequat Duis\"\n   },\n   {\n    \"key\": \"ut magna aliqua pariatur\",\n    \"value\": \"fugiat\"\n   },\n   {\n    \"key\": \"pr\",\n    \"value\": \"cillum\"\n   },\n   {\n    \"key\": \"est esse\",\n    \"value\": \"fugiat nisi a\"\n   },\n   {\n    \"key\": \"ullamco a\",\n    \"value\": \"Lorem dolor\"\n   },\n   {\n    \"key\": \"cillum dolor labore qui es\",\n    \"value\": \"exercitation sed labore dolore officia\"\n   },\n   {\n    \"key\": \"ea voluptate\",\n    \"value\": \"occaecat sunt Duis Excepteur\"\n   },\n   {\n    \"key\": \"Excepteur\",\n    \"value\": \"deserunt anim\"\n   },\n   {\n    \"key\": \"eu veniam non\",\n    \"value\": \"consequat Excepteur pariatur sint\"\n   },\n   {\n    \"key\": \"ex\",\n    \"value\": \"ut velit reprehenderit elit\"\n   },\n   {\n    \"key\": \"aute in veniam occaecat\",\n    \"value\": \"labore dolore sint\"\n   },\n   {\n    \"key\": \"anim elit non ex dese\",\n    \"value\": \"esse deserunt est nostrud\"\n   }\n  ]\n },\n \"amountType\": \"SEND\",\n \"currency\": \"AFN\",\n \"amount\": \"71353344723\",\n \"transactionType\": \"TRANSFER\",\n \"transferId\": \"55f81e88-8150-2014-bed2-908ed82210c7\",\n \"note\": \"ullamco amet\",\n \"currentState\": \"ERROR_OCCURRED\",\n \"quoteId\": \"22ef1932-148f-2075-92fd-90e3ee7d8cee\",\n \"quoteResponse\": {\n  \"transferAmount\": {\n   \"currency\": \"USD\",\n   \"amount\": \"0.5\"\n  },\n  \"expiration\": \"7473-12-29T23:09:11.438Z\",\n  \"ilpPacket\": \"d4jsavXvQ=\",\n  \"condition\": \"XrOMCy19lhlAvXNZq_ELWns3CMVplZ5dt0tZczVApmb\",\n  \"payeeReceiveAmount\": {\n   \"currency\": \"VND\",\n   \"amount\": \"0\"\n  },\n  \"payeeFspFee\": {\n   \"currency\": \"ZMW\",\n   \"amount\": \"1434202\"\n  },\n  \"payeeFspCommission\": {\n   \"currency\": \"VUV\",\n   \"amount\": \"0.58\"\n  },\n  \"geoCode\": {\n   \"latitude\": \"90.000\",\n   \"longitude\": \"180.000\"\n  },\n  \"extensionList\": {\n   \"extension\": [\n    {\n     \"key\": \"esse occaecat in sed deseru\",\n     \"value\": \"qui dolore aliqua commodo quis\"\n    }\n   ]\n  }\n },\n \"quoteResponseSource\": \"tempor vo\",\n \"fulfil\": {\n  \"transferState\": \"COMMITTED\",\n  \"fulfilment\": \"0mK1zuUiRzHwU_wnnBxSjBRVVyvHGtGt5PTUVJe1IGf\",\n  \"completedTimestamp\": \"4400-02-29T07:18:02.901Z\",\n  \"extensionList\": {\n   \"extension\": [\n    {\n     \"key\": \"nulla sed cillum ipsum\",\n     \"value\": \"labore ex ad Duis\"\n    }\n   ]\n  }\n },\n \"lastError\": {\n  \"httpStatusCode\": 17244635,\n  \"mojaloopError\": {\n   \"errorInformation\": {\n    \"errorCode\": \"9988\",\n    \"errorDescription\": \"sit quis\",\n    \"extensionList\": {\n     \"extension\": [\n      {\n       \"key\": \"tem\",\n       \"value\": \"aute labore culpa non dolor\"\n      }\n     ]\n    }\n   }\n  }\n }\n}"
										}
									]
								}
							]
						},
						{
							"name": "transfers",
							"item": [
								{
									"name": "Transfers funds from an external account to an internal account",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"transferId\": \"a9e26d93-7ed6-11d9-b4c9-c94b9b53cddc\",\n    \"quote\": {\n        \"quoteId\": \"0764acd3-2b03-5d6e-b9de-18237c89f7ed\",\n        \"transactionId\": \"7fff4f2f-8c39-20ba-9933-2114b244d0d0\",\n        \"transferAmount\": \"0.2\",\n        \"transferAmountCurrency\": \"MYR\",\n        \"payeeReceiveAmount\": \"8103\",\n        \"payeeReceiveAmountCurrency\": \"UGX\",\n        \"payeeFspFeeAmount\": \"0.46\",\n        \"payeeFspFeeAmountCurrency\": \"AZN\",\n        \"payeeFspCommissionAmount\": \"0.8\",\n        \"payeeFspCommissionAmountCurrency\": \"KHR\",\n        \"expiration\": \"7390-10-29T21:00:26.009Z\",\n        \"geoCode\": {\n            \"latitude\": \"53\",\n            \"longitude\": \"180\"\n        }\n    },\n    \"from\": {\n        \"idType\": \"MSISDN\",\n        \"idValue\": \"ea nostrud anim\",\n        \"type\": \"DEVICE\",\n        \"displayName\": \"labore tempor Ut veniam\",\n        \"firstName\": \"enim dolor\",\n        \"middleName\": \"ut exercitation ad ut\",\n        \"lastName\": \"cillum\",\n        \"dateOfBirth\": \"3600-02-29\",\n        \"merchantClassificationCode\": \"545\",\n        \"extensionList\": [\n            {\n                \"key\": \"do\",\n                \"value\": \"adipisicing in dolor\"\n            },\n            {\n                \"key\": \"nulla laboris\",\n                \"value\": \"enim aliquip dolor est\"\n            },\n            {\n                \"key\": \"Duis Ut\",\n                \"value\": \"pariatur consequat dolore\"\n            },\n            {\n                \"key\": \"ex dolore eu\",\n                \"value\": \"cillum amet esse in\"\n            },\n            {\n                \"key\": \"ad sunt\",\n                \"value\": \"minim in eiusmod ea tempo\"\n            },\n            {\n                \"key\": \"in irure Lorem\",\n                \"value\": \"est esse\"\n            },\n            {\n                \"key\": \"am\",\n                \"value\": \"voluptate velit minim anim\"\n            },\n            {\n                \"key\": \"ullamco nulla cillum tempor\",\n                \"value\": \"reprehenderit incididunt aute\"\n            },\n            {\n                \"key\": \"laboris\",\n                \"value\": \"sunt id\"\n            },\n            {\n                \"key\": \"est adipisicing\",\n                \"value\": \"et laboris velit qui\"\n            },\n            {\n                \"key\": \"mollit commodo minim su\",\n                \"value\": \"incididunt amet sit\"\n            },\n            {\n                \"key\": \"pari\",\n                \"value\": \"ex aliqua pariatur\"\n            },\n            {\n                \"key\": \"qu\",\n                \"value\": \"dolore adipisicing et ad dolor\"\n            },\n            {\n                \"key\": \"sunt ut tempor\",\n                \"value\": \"ea aliqua\"\n            },\n            {\n                \"key\": \"laboris aliqua quis Ut\",\n                \"value\": \"culpa oc\"\n            },\n            {\n                \"key\": \"dolore laborum\",\n                \"value\": \"deserunt laborum magna Excepteur\"\n            }\n        ]\n    },\n    \"to\": {\n        \"idType\": \"ACCOUNT_ID\",\n        \"idValue\": \"nisi Excepteur in\",\n        \"type\": \"DEVICE\",\n        \"displayName\": \"officia anim proident\",\n        \"firstName\": \"qui\",\n        \"middleName\": \"dolore deserunt id nulla\",\n        \"lastName\": \"laboris adipisicing dolor aute eu\",\n        \"dateOfBirth\": \"2996-02-29\",\n        \"merchantClassificationCode\": \"0949\",\n        \"extensionList\": [\n            {\n                \"key\": \"nostr\",\n                \"value\": \"ex cillum dolore in\"\n            },\n            {\n                \"key\": \"aliqua tempor minim\",\n                \"value\": \"dolor sit\"\n            },\n            {\n                \"key\": \"eu nul\",\n                \"value\": \"laboris eiusmod\"\n            },\n            {\n                \"key\": \"consequat dolor quis qui esse\",\n                \"value\": \"est cupidatat\"\n            },\n            {\n                \"key\": \"irure nostrud minim ex\",\n                \"value\": \"mollit est cillum\"\n            },\n            {\n                \"key\": \"ex ipsum sint e\",\n                \"value\": \"occaecat quis Excepteur\"\n            },\n            {\n                \"key\": \"occaecat amet e\",\n                \"value\": \"eu aute sit minim\"\n            },\n            {\n                \"key\": \"ut enim\",\n                \"value\": \"labore non dolor\"\n            },\n            {\n                \"key\": \"Duis ut aliqua v\",\n                \"value\": \"Excepteur fugiat id\"\n            },\n            {\n                \"key\": \"aute non id\",\n                \"value\": \"esse mollit qui do eu\"\n            },\n            {\n                \"key\": \"in do magna \",\n                \"value\": \"elit cupidatat esse pariatur\"\n            },\n            {\n                \"key\": \"en\",\n                \"value\": \"consectetur sit exercitation\"\n            },\n            {\n                \"key\": \"consectetu\",\n                \"value\": \"tempor do consectetur id\"\n            },\n            {\n                \"key\": \"dolor\",\n                \"value\": \"Duis qui cillum ad\"\n            },\n            {\n                \"key\": \"et ullamco pari\",\n                \"value\": \"dolore\"\n            },\n            {\n                \"key\": \"anim irure p\",\n                \"value\": \"Duis eiusmod voluptate\"\n            }\n        ]\n    },\n    \"amountType\": \"RECEIVE\",\n    \"currency\": \"MVR\",\n    \"amount\": \"0.165\",\n    \"transactionType\": \"TRANSFER\",\n    \"note\": \"deserunt aliquip dolore pr\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/transfers",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"transfers"
											]
										},
										"description": "The HTTP request `POST /transfers` is sent to the Payee DFSP, and it is used to request the creation of a transfer for the transfer party."
									},
									"response": [
										{
											"name": "Malformed or missing required headers or parameters",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"transferId\": \"a9e26d93-7ed6-11d9-b4c9-c94b9b53cddc\",\n    \"quote\": {\n        \"quoteId\": \"0764acd3-2b03-5d6e-b9de-18237c89f7ed\",\n        \"transactionId\": \"7fff4f2f-8c39-20ba-9933-2114b244d0d0\",\n        \"transferAmount\": \"0.2\",\n        \"transferAmountCurrency\": \"MYR\",\n        \"payeeReceiveAmount\": \"8103\",\n        \"payeeReceiveAmountCurrency\": \"UGX\",\n        \"payeeFspFeeAmount\": \"0.46\",\n        \"payeeFspFeeAmountCurrency\": \"AZN\",\n        \"payeeFspCommissionAmount\": \"0.8\",\n        \"payeeFspCommissionAmountCurrency\": \"KHR\",\n        \"expiration\": \"7390-10-29T21:00:26.009Z\",\n        \"geoCode\": {\n            \"latitude\": \"53\",\n            \"longitude\": \"180\"\n        }\n    },\n    \"from\": {\n        \"idType\": \"MSISDN\",\n        \"idValue\": \"ea nostrud anim\",\n        \"type\": \"DEVICE\",\n        \"displayName\": \"labore tempor Ut veniam\",\n        \"firstName\": \"enim dolor\",\n        \"middleName\": \"ut exercitation ad ut\",\n        \"lastName\": \"cillum\",\n        \"dateOfBirth\": \"3600-02-29\",\n        \"merchantClassificationCode\": \"545\",\n        \"extensionList\": [\n            {\n                \"key\": \"do\",\n                \"value\": \"adipisicing in dolor\"\n            },\n            {\n                \"key\": \"nulla laboris\",\n                \"value\": \"enim aliquip dolor est\"\n            },\n            {\n                \"key\": \"Duis Ut\",\n                \"value\": \"pariatur consequat dolore\"\n            },\n            {\n                \"key\": \"ex dolore eu\",\n                \"value\": \"cillum amet esse in\"\n            },\n            {\n                \"key\": \"ad sunt\",\n                \"value\": \"minim in eiusmod ea tempo\"\n            },\n            {\n                \"key\": \"in irure Lorem\",\n                \"value\": \"est esse\"\n            },\n            {\n                \"key\": \"am\",\n                \"value\": \"voluptate velit minim anim\"\n            },\n            {\n                \"key\": \"ullamco nulla cillum tempor\",\n                \"value\": \"reprehenderit incididunt aute\"\n            },\n            {\n                \"key\": \"laboris\",\n                \"value\": \"sunt id\"\n            },\n            {\n                \"key\": \"est adipisicing\",\n                \"value\": \"et laboris velit qui\"\n            },\n            {\n                \"key\": \"mollit commodo minim su\",\n                \"value\": \"incididunt amet sit\"\n            },\n            {\n                \"key\": \"pari\",\n                \"value\": \"ex aliqua pariatur\"\n            },\n            {\n                \"key\": \"qu\",\n                \"value\": \"dolore adipisicing et ad dolor\"\n            },\n            {\n                \"key\": \"sunt ut tempor\",\n                \"value\": \"ea aliqua\"\n            },\n            {\n                \"key\": \"laboris aliqua quis Ut\",\n                \"value\": \"culpa oc\"\n            },\n            {\n                \"key\": \"dolore laborum\",\n                \"value\": \"deserunt laborum magna Excepteur\"\n            }\n        ]\n    },\n    \"to\": {\n        \"idType\": \"ACCOUNT_ID\",\n        \"idValue\": \"nisi Excepteur in\",\n        \"type\": \"DEVICE\",\n        \"displayName\": \"officia anim proident\",\n        \"firstName\": \"qui\",\n        \"middleName\": \"dolore deserunt id nulla\",\n        \"lastName\": \"laboris adipisicing dolor aute eu\",\n        \"dateOfBirth\": \"2996-02-29\",\n        \"merchantClassificationCode\": \"0949\",\n        \"extensionList\": [\n            {\n                \"key\": \"nostr\",\n                \"value\": \"ex cillum dolore in\"\n            },\n            {\n                \"key\": \"aliqua tempor minim\",\n                \"value\": \"dolor sit\"\n            },\n            {\n                \"key\": \"eu nul\",\n                \"value\": \"laboris eiusmod\"\n            },\n            {\n                \"key\": \"consequat dolor quis qui esse\",\n                \"value\": \"est cupidatat\"\n            },\n            {\n                \"key\": \"irure nostrud minim ex\",\n                \"value\": \"mollit est cillum\"\n            },\n            {\n                \"key\": \"ex ipsum sint e\",\n                \"value\": \"occaecat quis Excepteur\"\n            },\n            {\n                \"key\": \"occaecat amet e\",\n                \"value\": \"eu aute sit minim\"\n            },\n            {\n                \"key\": \"ut enim\",\n                \"value\": \"labore non dolor\"\n            },\n            {\n                \"key\": \"Duis ut aliqua v\",\n                \"value\": \"Excepteur fugiat id\"\n            },\n            {\n                \"key\": \"aute non id\",\n                \"value\": \"esse mollit qui do eu\"\n            },\n            {\n                \"key\": \"in do magna \",\n                \"value\": \"elit cupidatat esse pariatur\"\n            },\n            {\n                \"key\": \"en\",\n                \"value\": \"consectetur sit exercitation\"\n            },\n            {\n                \"key\": \"consectetu\",\n                \"value\": \"tempor do consectetur id\"\n            },\n            {\n                \"key\": \"dolor\",\n                \"value\": \"Duis qui cillum ad\"\n            },\n            {\n                \"key\": \"et ullamco pari\",\n                \"value\": \"dolore\"\n            },\n            {\n                \"key\": \"anim irure p\",\n                \"value\": \"Duis eiusmod voluptate\"\n            }\n        ]\n    },\n    \"amountType\": \"RECEIVE\",\n    \"currency\": \"MVR\",\n    \"amount\": \"0.165\",\n    \"transactionType\": \"TRANSFER\",\n    \"note\": \"deserunt aliquip dolore pr\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/transfers",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"transfers"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"statusCode\": \"652\",\n \"message\": \"in\"\n}"
										},
										{
											"name": "The transfer was accepted",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"transferId\": \"a9e26d93-7ed6-11d9-b4c9-c94b9b53cddc\",\n    \"quote\": {\n        \"quoteId\": \"0764acd3-2b03-5d6e-b9de-18237c89f7ed\",\n        \"transactionId\": \"7fff4f2f-8c39-20ba-9933-2114b244d0d0\",\n        \"transferAmount\": \"0.2\",\n        \"transferAmountCurrency\": \"MYR\",\n        \"payeeReceiveAmount\": \"8103\",\n        \"payeeReceiveAmountCurrency\": \"UGX\",\n        \"payeeFspFeeAmount\": \"0.46\",\n        \"payeeFspFeeAmountCurrency\": \"AZN\",\n        \"payeeFspCommissionAmount\": \"0.8\",\n        \"payeeFspCommissionAmountCurrency\": \"KHR\",\n        \"expiration\": \"7390-10-29T21:00:26.009Z\",\n        \"geoCode\": {\n            \"latitude\": \"53\",\n            \"longitude\": \"180\"\n        }\n    },\n    \"from\": {\n        \"idType\": \"MSISDN\",\n        \"idValue\": \"ea nostrud anim\",\n        \"type\": \"DEVICE\",\n        \"displayName\": \"labore tempor Ut veniam\",\n        \"firstName\": \"enim dolor\",\n        \"middleName\": \"ut exercitation ad ut\",\n        \"lastName\": \"cillum\",\n        \"dateOfBirth\": \"3600-02-29\",\n        \"merchantClassificationCode\": \"545\",\n        \"extensionList\": [\n            {\n                \"key\": \"do\",\n                \"value\": \"adipisicing in dolor\"\n            },\n            {\n                \"key\": \"nulla laboris\",\n                \"value\": \"enim aliquip dolor est\"\n            },\n            {\n                \"key\": \"Duis Ut\",\n                \"value\": \"pariatur consequat dolore\"\n            },\n            {\n                \"key\": \"ex dolore eu\",\n                \"value\": \"cillum amet esse in\"\n            },\n            {\n                \"key\": \"ad sunt\",\n                \"value\": \"minim in eiusmod ea tempo\"\n            },\n            {\n                \"key\": \"in irure Lorem\",\n                \"value\": \"est esse\"\n            },\n            {\n                \"key\": \"am\",\n                \"value\": \"voluptate velit minim anim\"\n            },\n            {\n                \"key\": \"ullamco nulla cillum tempor\",\n                \"value\": \"reprehenderit incididunt aute\"\n            },\n            {\n                \"key\": \"laboris\",\n                \"value\": \"sunt id\"\n            },\n            {\n                \"key\": \"est adipisicing\",\n                \"value\": \"et laboris velit qui\"\n            },\n            {\n                \"key\": \"mollit commodo minim su\",\n                \"value\": \"incididunt amet sit\"\n            },\n            {\n                \"key\": \"pari\",\n                \"value\": \"ex aliqua pariatur\"\n            },\n            {\n                \"key\": \"qu\",\n                \"value\": \"dolore adipisicing et ad dolor\"\n            },\n            {\n                \"key\": \"sunt ut tempor\",\n                \"value\": \"ea aliqua\"\n            },\n            {\n                \"key\": \"laboris aliqua quis Ut\",\n                \"value\": \"culpa oc\"\n            },\n            {\n                \"key\": \"dolore laborum\",\n                \"value\": \"deserunt laborum magna Excepteur\"\n            }\n        ]\n    },\n    \"to\": {\n        \"idType\": \"ACCOUNT_ID\",\n        \"idValue\": \"nisi Excepteur in\",\n        \"type\": \"DEVICE\",\n        \"displayName\": \"officia anim proident\",\n        \"firstName\": \"qui\",\n        \"middleName\": \"dolore deserunt id nulla\",\n        \"lastName\": \"laboris adipisicing dolor aute eu\",\n        \"dateOfBirth\": \"2996-02-29\",\n        \"merchantClassificationCode\": \"0949\",\n        \"extensionList\": [\n            {\n                \"key\": \"nostr\",\n                \"value\": \"ex cillum dolore in\"\n            },\n            {\n                \"key\": \"aliqua tempor minim\",\n                \"value\": \"dolor sit\"\n            },\n            {\n                \"key\": \"eu nul\",\n                \"value\": \"laboris eiusmod\"\n            },\n            {\n                \"key\": \"consequat dolor quis qui esse\",\n                \"value\": \"est cupidatat\"\n            },\n            {\n                \"key\": \"irure nostrud minim ex\",\n                \"value\": \"mollit est cillum\"\n            },\n            {\n                \"key\": \"ex ipsum sint e\",\n                \"value\": \"occaecat quis Excepteur\"\n            },\n            {\n                \"key\": \"occaecat amet e\",\n                \"value\": \"eu aute sit minim\"\n            },\n            {\n                \"key\": \"ut enim\",\n                \"value\": \"labore non dolor\"\n            },\n            {\n                \"key\": \"Duis ut aliqua v\",\n                \"value\": \"Excepteur fugiat id\"\n            },\n            {\n                \"key\": \"aute non id\",\n                \"value\": \"esse mollit qui do eu\"\n            },\n            {\n                \"key\": \"in do magna \",\n                \"value\": \"elit cupidatat esse pariatur\"\n            },\n            {\n                \"key\": \"en\",\n                \"value\": \"consectetur sit exercitation\"\n            },\n            {\n                \"key\": \"consectetu\",\n                \"value\": \"tempor do consectetur id\"\n            },\n            {\n                \"key\": \"dolor\",\n                \"value\": \"Duis qui cillum ad\"\n            },\n            {\n                \"key\": \"et ullamco pari\",\n                \"value\": \"dolore\"\n            },\n            {\n                \"key\": \"anim irure p\",\n                \"value\": \"Duis eiusmod voluptate\"\n            }\n        ]\n    },\n    \"amountType\": \"RECEIVE\",\n    \"currency\": \"MVR\",\n    \"amount\": \"0.165\",\n    \"transactionType\": \"TRANSFER\",\n    \"note\": \"deserunt aliquip dolore pr\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/transfers",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"transfers"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"homeTransactionId\": \"enim non ipsum\"\n}"
										},
										{
											"name": "An error occurred processing the request",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"transferId\": \"a9e26d93-7ed6-11d9-b4c9-c94b9b53cddc\",\n    \"quote\": {\n        \"quoteId\": \"0764acd3-2b03-5d6e-b9de-18237c89f7ed\",\n        \"transactionId\": \"7fff4f2f-8c39-20ba-9933-2114b244d0d0\",\n        \"transferAmount\": \"0.2\",\n        \"transferAmountCurrency\": \"MYR\",\n        \"payeeReceiveAmount\": \"8103\",\n        \"payeeReceiveAmountCurrency\": \"UGX\",\n        \"payeeFspFeeAmount\": \"0.46\",\n        \"payeeFspFeeAmountCurrency\": \"AZN\",\n        \"payeeFspCommissionAmount\": \"0.8\",\n        \"payeeFspCommissionAmountCurrency\": \"KHR\",\n        \"expiration\": \"7390-10-29T21:00:26.009Z\",\n        \"geoCode\": {\n            \"latitude\": \"53\",\n            \"longitude\": \"180\"\n        }\n    },\n    \"from\": {\n        \"idType\": \"MSISDN\",\n        \"idValue\": \"ea nostrud anim\",\n        \"type\": \"DEVICE\",\n        \"displayName\": \"labore tempor Ut veniam\",\n        \"firstName\": \"enim dolor\",\n        \"middleName\": \"ut exercitation ad ut\",\n        \"lastName\": \"cillum\",\n        \"dateOfBirth\": \"3600-02-29\",\n        \"merchantClassificationCode\": \"545\",\n        \"extensionList\": [\n            {\n                \"key\": \"do\",\n                \"value\": \"adipisicing in dolor\"\n            },\n            {\n                \"key\": \"nulla laboris\",\n                \"value\": \"enim aliquip dolor est\"\n            },\n            {\n                \"key\": \"Duis Ut\",\n                \"value\": \"pariatur consequat dolore\"\n            },\n            {\n                \"key\": \"ex dolore eu\",\n                \"value\": \"cillum amet esse in\"\n            },\n            {\n                \"key\": \"ad sunt\",\n                \"value\": \"minim in eiusmod ea tempo\"\n            },\n            {\n                \"key\": \"in irure Lorem\",\n                \"value\": \"est esse\"\n            },\n            {\n                \"key\": \"am\",\n                \"value\": \"voluptate velit minim anim\"\n            },\n            {\n                \"key\": \"ullamco nulla cillum tempor\",\n                \"value\": \"reprehenderit incididunt aute\"\n            },\n            {\n                \"key\": \"laboris\",\n                \"value\": \"sunt id\"\n            },\n            {\n                \"key\": \"est adipisicing\",\n                \"value\": \"et laboris velit qui\"\n            },\n            {\n                \"key\": \"mollit commodo minim su\",\n                \"value\": \"incididunt amet sit\"\n            },\n            {\n                \"key\": \"pari\",\n                \"value\": \"ex aliqua pariatur\"\n            },\n            {\n                \"key\": \"qu\",\n                \"value\": \"dolore adipisicing et ad dolor\"\n            },\n            {\n                \"key\": \"sunt ut tempor\",\n                \"value\": \"ea aliqua\"\n            },\n            {\n                \"key\": \"laboris aliqua quis Ut\",\n                \"value\": \"culpa oc\"\n            },\n            {\n                \"key\": \"dolore laborum\",\n                \"value\": \"deserunt laborum magna Excepteur\"\n            }\n        ]\n    },\n    \"to\": {\n        \"idType\": \"ACCOUNT_ID\",\n        \"idValue\": \"nisi Excepteur in\",\n        \"type\": \"DEVICE\",\n        \"displayName\": \"officia anim proident\",\n        \"firstName\": \"qui\",\n        \"middleName\": \"dolore deserunt id nulla\",\n        \"lastName\": \"laboris adipisicing dolor aute eu\",\n        \"dateOfBirth\": \"2996-02-29\",\n        \"merchantClassificationCode\": \"0949\",\n        \"extensionList\": [\n            {\n                \"key\": \"nostr\",\n                \"value\": \"ex cillum dolore in\"\n            },\n            {\n                \"key\": \"aliqua tempor minim\",\n                \"value\": \"dolor sit\"\n            },\n            {\n                \"key\": \"eu nul\",\n                \"value\": \"laboris eiusmod\"\n            },\n            {\n                \"key\": \"consequat dolor quis qui esse\",\n                \"value\": \"est cupidatat\"\n            },\n            {\n                \"key\": \"irure nostrud minim ex\",\n                \"value\": \"mollit est cillum\"\n            },\n            {\n                \"key\": \"ex ipsum sint e\",\n                \"value\": \"occaecat quis Excepteur\"\n            },\n            {\n                \"key\": \"occaecat amet e\",\n                \"value\": \"eu aute sit minim\"\n            },\n            {\n                \"key\": \"ut enim\",\n                \"value\": \"labore non dolor\"\n            },\n            {\n                \"key\": \"Duis ut aliqua v\",\n                \"value\": \"Excepteur fugiat id\"\n            },\n            {\n                \"key\": \"aute non id\",\n                \"value\": \"esse mollit qui do eu\"\n            },\n            {\n                \"key\": \"in do magna \",\n                \"value\": \"elit cupidatat esse pariatur\"\n            },\n            {\n                \"key\": \"en\",\n                \"value\": \"consectetur sit exercitation\"\n            },\n            {\n                \"key\": \"consectetu\",\n                \"value\": \"tempor do consectetur id\"\n            },\n            {\n                \"key\": \"dolor\",\n                \"value\": \"Duis qui cillum ad\"\n            },\n            {\n                \"key\": \"et ullamco pari\",\n                \"value\": \"dolore\"\n            },\n            {\n                \"key\": \"anim irure p\",\n                \"value\": \"Duis eiusmod voluptate\"\n            }\n        ]\n    },\n    \"amountType\": \"RECEIVE\",\n    \"currency\": \"MVR\",\n    \"amount\": \"0.165\",\n    \"transactionType\": \"TRANSFER\",\n    \"note\": \"deserunt aliquip dolore pr\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/transfers",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"transfers"
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"statusCode\": \"652\",\n \"message\": \"in\"\n}"
										}
									]
								},
								{
									"name": "Provides a notification about the success/failure of a specific transfer",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"completedTimestamp\": \"8452-02-29T08:51:11.468+04:25\",\n    \"transferState\": \"COMMITTED\",\n    \"extensionList\": [\n        {\n            \"key\": \"tempor amet Lorem qui Duis\",\n            \"value\": \"occaecat voluptate aliquip non\"\n        },\n        {\n            \"key\": \"mollit mini\",\n            \"value\": \"Ut aute Excepteur\"\n        },\n        {\n            \"key\": \"Duis pariatur\",\n            \"value\": \"commodo sunt aute elit Lorem\"\n        },\n        {\n            \"key\": \"sint dolore\",\n            \"value\": \"laborum incididunt\"\n        },\n        {\n            \"key\": \"est\",\n            \"value\": \"minim eu in non\"\n        },\n        {\n            \"key\": \"magna Duis\",\n            \"value\": \"do Duis Excepteur ut\"\n        },\n        {\n            \"key\": \"irure i\",\n            \"value\": \"dolor eu irure et\"\n        },\n        {\n            \"key\": \"in \",\n            \"value\": \"est irure ma\"\n        },\n        {\n            \"key\": \"ullamco ut officia\",\n            \"value\": \"dolor sunt\"\n        },\n        {\n            \"key\": \"ut sit anim enim cupi\",\n            \"value\": \"adipisicing eiusmod dolore aute\"\n        },\n        {\n            \"key\": \"deserunt\",\n            \"value\": \"sed occaecat\"\n        },\n        {\n            \"key\": \"labore est ullamco\",\n            \"value\": \"qui Lorem\"\n        },\n        {\n            \"key\": \"veniam amet\",\n            \"value\": \"velit id proident mollit\"\n        },\n        {\n            \"key\": \"et cillum pariatur\",\n            \"value\": \"labore nisi quis dolore\"\n        },\n        {\n            \"key\": \"dolor quis id\",\n            \"value\": \"officia sint mollit\"\n        },\n        {\n            \"key\": \"sint magna eiusmod m\",\n            \"value\": \"ut\"\n        }\n    ]\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/transfers/:transferId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"transfers",
												":transferId"
											],
											"variable": [
												{
													"key": "transferId",
													"value": "b4ec7792-1b60-34d9-bb47-f6cb33234cb4",
													"type": "string",
													"description": "(Required) Transfer identifier."
												}
											]
										},
										"description": "The HTTP request `PUT /transfers/{transferId}` is sent to the Payee DFSP, and it is used to notify the Payee DFSP about the final state of a transfer, to indicate whether the transfer has been committed or aborted in the Switch."
									},
									"response": [
										{
											"name": "An error occurred processing the request",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"completedTimestamp\": \"8452-02-29T08:51:11.468+04:25\",\n    \"transferState\": \"COMMITTED\",\n    \"extensionList\": [\n        {\n            \"key\": \"tempor amet Lorem qui Duis\",\n            \"value\": \"occaecat voluptate aliquip non\"\n        },\n        {\n            \"key\": \"mollit mini\",\n            \"value\": \"Ut aute Excepteur\"\n        },\n        {\n            \"key\": \"Duis pariatur\",\n            \"value\": \"commodo sunt aute elit Lorem\"\n        },\n        {\n            \"key\": \"sint dolore\",\n            \"value\": \"laborum incididunt\"\n        },\n        {\n            \"key\": \"est\",\n            \"value\": \"minim eu in non\"\n        },\n        {\n            \"key\": \"magna Duis\",\n            \"value\": \"do Duis Excepteur ut\"\n        },\n        {\n            \"key\": \"irure i\",\n            \"value\": \"dolor eu irure et\"\n        },\n        {\n            \"key\": \"in \",\n            \"value\": \"est irure ma\"\n        },\n        {\n            \"key\": \"ullamco ut officia\",\n            \"value\": \"dolor sunt\"\n        },\n        {\n            \"key\": \"ut sit anim enim cupi\",\n            \"value\": \"adipisicing eiusmod dolore aute\"\n        },\n        {\n            \"key\": \"deserunt\",\n            \"value\": \"sed occaecat\"\n        },\n        {\n            \"key\": \"labore est ullamco\",\n            \"value\": \"qui Lorem\"\n        },\n        {\n            \"key\": \"veniam amet\",\n            \"value\": \"velit id proident mollit\"\n        },\n        {\n            \"key\": \"et cillum pariatur\",\n            \"value\": \"labore nisi quis dolore\"\n        },\n        {\n            \"key\": \"dolor quis id\",\n            \"value\": \"officia sint mollit\"\n        },\n        {\n            \"key\": \"sint magna eiusmod m\",\n            \"value\": \"ut\"\n        }\n    ]\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/transfers/:transferId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"transfers",
														":transferId"
													],
													"variable": [
														{
															"key": "transferId"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"statusCode\": \"652\",\n \"message\": \"in\"\n}"
										},
										{
											"name": "The notification was accepted",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"completedTimestamp\": \"8452-02-29T08:51:11.468+04:25\",\n    \"transferState\": \"COMMITTED\",\n    \"extensionList\": [\n        {\n            \"key\": \"tempor amet Lorem qui Duis\",\n            \"value\": \"occaecat voluptate aliquip non\"\n        },\n        {\n            \"key\": \"mollit mini\",\n            \"value\": \"Ut aute Excepteur\"\n        },\n        {\n            \"key\": \"Duis pariatur\",\n            \"value\": \"commodo sunt aute elit Lorem\"\n        },\n        {\n            \"key\": \"sint dolore\",\n            \"value\": \"laborum incididunt\"\n        },\n        {\n            \"key\": \"est\",\n            \"value\": \"minim eu in non\"\n        },\n        {\n            \"key\": \"magna Duis\",\n            \"value\": \"do Duis Excepteur ut\"\n        },\n        {\n            \"key\": \"irure i\",\n            \"value\": \"dolor eu irure et\"\n        },\n        {\n            \"key\": \"in \",\n            \"value\": \"est irure ma\"\n        },\n        {\n            \"key\": \"ullamco ut officia\",\n            \"value\": \"dolor sunt\"\n        },\n        {\n            \"key\": \"ut sit anim enim cupi\",\n            \"value\": \"adipisicing eiusmod dolore aute\"\n        },\n        {\n            \"key\": \"deserunt\",\n            \"value\": \"sed occaecat\"\n        },\n        {\n            \"key\": \"labore est ullamco\",\n            \"value\": \"qui Lorem\"\n        },\n        {\n            \"key\": \"veniam amet\",\n            \"value\": \"velit id proident mollit\"\n        },\n        {\n            \"key\": \"et cillum pariatur\",\n            \"value\": \"labore nisi quis dolore\"\n        },\n        {\n            \"key\": \"dolor quis id\",\n            \"value\": \"officia sint mollit\"\n        },\n        {\n            \"key\": \"sint magna eiusmod m\",\n            \"value\": \"ut\"\n        }\n    ]\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/transfers/:transferId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"transfers",
														":transferId"
													],
													"variable": [
														{
															"key": "transferId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "Requests information relating to a transfer party identified by the specified identifier type and value",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/parties/:idType/:idValue",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"parties",
										":idType",
										":idValue"
									],
									"variable": [
										{
											"key": "idType",
											"value": "MSISDN",
											"type": "string",
											"description": "(Required) Below are the allowed values for the enumeration.\n- MSISDN -  An MSISDN (Mobile Station International Subscriber Directory Number, that is, the phone number) is used as reference to a participant. The MSISDN identifier should be in international format according to the [ITU-T E.164 standard](https://www.itu.int/rec/T-REC-E.164/en). Optionally, the MSISDN may be prefixed by a single plus sign, indicating the international prefix.\n- ACCOUNT_ID - A bank account number or FSP account ID should be used as reference to a participant. The ACCOUNT_ID identifier can be in any format, as formats can greatly differ depending on country and FSP."
										},
										{
											"key": "idValue",
											"value": "cillum in",
											"type": "string",
											"description": "(Required) Identifier of the party."
										}
									]
								},
								"description": "The HTTP request `GET /parties/{idType}/{idValue}` is sent to the Payee DFSP, and it is used to look up information regarding the requested transfer party, identified by `{idType}` and `{idValue}`."
							},
							"response": [
								{
									"name": "Malformed or missing required headers or parameters",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/parties/:idType/:idValue",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"parties",
												":idType",
												":idValue"
											],
											"variable": [
												{
													"key": "idType"
												},
												{
													"key": "idValue"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"statusCode\": \"652\",\n \"message\": \"in\"\n}"
								},
								{
									"name": "An error occurred processing the request",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/parties/:idType/:idValue",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"parties",
												":idType",
												":idValue"
											],
											"variable": [
												{
													"key": "idType"
												},
												{
													"key": "idValue"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"statusCode\": \"652\",\n \"message\": \"in\"\n}"
								},
								{
									"name": "The party specified by the provided identifier type and value is not known to the server",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/parties/:idType/:idValue",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"parties",
												":idType",
												":idValue"
											],
											"variable": [
												{
													"key": "idType"
												},
												{
													"key": "idValue"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Response containing details of the requested party",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/parties/:idType/:idValue",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"parties",
												":idType",
												":idValue"
											],
											"variable": [
												{
													"key": "idType"
												},
												{
													"key": "idValue"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"idType\": \"ACCOUNT_ID\",\n \"idValue\": \"commodo non\",\n \"type\": \"DEVICE\",\n \"displayName\": \"re\",\n \"firstName\": \"veniam pariatur reprehende\",\n \"middleName\": \"enim\",\n \"lastName\": \"es\",\n \"dateOfBirth\": \"5303-11-29\",\n \"merchantClassificationCode\": \"6336\",\n \"extensionList\": [\n  {\n   \"key\": \"ea do\",\n   \"value\": \"Ut commodo\"\n  },\n  {\n   \"key\": \"Ut est incidi\",\n   \"value\": \"occaecat laborum Ut commodo\"\n  },\n  {\n   \"key\": \"nostrud quis adipisicing \",\n   \"value\": \"velit\"\n  },\n  {\n   \"key\": \"labore dolor\",\n   \"value\": \"officia nisi fugi\"\n  },\n  {\n   \"key\": \"incididunt\",\n   \"value\": \"adipisicing ut commodo\"\n  },\n  {\n   \"key\": \"labore exercitation in\",\n   \"value\": \"incididunt occaecat\"\n  },\n  {\n   \"key\": \"velit irure incididunt ex\",\n   \"value\": \"dolor commodo Excepteur dolore eiusmod\"\n  },\n  {\n   \"key\": \"enim do dolor\",\n   \"value\": \"quis Duis Excepteur aute\"\n  },\n  {\n   \"key\": \"non velit cillum labore dolor\",\n   \"value\": \"sint in\"\n  },\n  {\n   \"key\": \"sed culpa fugiat Duis\",\n   \"value\": \"dolor cupidatat\"\n  },\n  {\n   \"key\": \"Lorem\",\n   \"value\": \"nisi dolore laborum deserunt\"\n  },\n  {\n   \"key\": \"dolo\",\n   \"value\": \"laborum ut dolore eu qui\"\n  },\n  {\n   \"key\": \"exercitation\",\n   \"value\": \"in ipsum ut est\"\n  },\n  {\n   \"key\": \"nostr\",\n   \"value\": \"nostrud eu\"\n  },\n  {\n   \"key\": \"ut consectetur commodo sun\",\n   \"value\": \"sunt quis Excepteur est\"\n  },\n  {\n   \"key\": \"est Lorem\",\n   \"value\": \"mollit sit minim ea\"\n  }\n ]\n}"
								}
							]
						},
						{
							"name": "Requests a quote for the specified transfer",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"quoteId\": \"24846a5c-5374-12e1-a71f-ca499f993fe3\",\n    \"transactionId\": \"e81dc7f0-6ba6-3d38-be1e-cd1d0959d5d0\",\n    \"to\": {\n        \"idType\": \"ACCOUNT_ID\",\n        \"idValue\": \"ut\",\n        \"type\": \"BUSINESS\",\n        \"displayName\": \"et dolore ullamco\",\n        \"firstName\": \"consequat incididunt\",\n        \"middleName\": \"nisi minim aute consequat officia\",\n        \"lastName\": \"laborum ut exercitation\",\n        \"dateOfBirth\": \"4400-02-29\",\n        \"merchantClassificationCode\": \"646\",\n        \"extensionList\": [\n            {\n                \"key\": \"mollit laboris min\",\n                \"value\": \"proident magna id voluptate tempor\"\n            },\n            {\n                \"key\": \"fugiat deserunt\",\n                \"value\": \"in aliquip\"\n            },\n            {\n                \"key\": \"elit\",\n                \"value\": \"ipsum cupidatat\"\n            },\n            {\n                \"key\": \"ex nostrud et\",\n                \"value\": \"esse\"\n            },\n            {\n                \"key\": \"ex proident magna Duis\",\n                \"value\": \"laborum magna\"\n            },\n            {\n                \"key\": \"velit\",\n                \"value\": \"tempor culpa\"\n            },\n            {\n                \"key\": \"fugiat Excepteur c\",\n                \"value\": \"minim aliqua nostrud Ut\"\n            },\n            {\n                \"key\": \"eiusmod adipisicing\",\n                \"value\": \"sed deserunt sit dolore et\"\n            },\n            {\n                \"key\": \"enim voluptate Duis \",\n                \"value\": \"in ut quis\"\n            },\n            {\n                \"key\": \"cillum\",\n                \"value\": \"aliquip labore\"\n            },\n            {\n                \"key\": \"anim culpa\",\n                \"value\": \"sit\"\n            },\n            {\n                \"key\": \"sit laboris \",\n                \"value\": \"tempor fugiat minim\"\n            },\n            {\n                \"key\": \"eiusmod magna veli\",\n                \"value\": \"in irure voluptate non\"\n            },\n            {\n                \"key\": \"aliqua non voluptate\",\n                \"value\": \"Excepteur proident \"\n            },\n            {\n                \"key\": \"culpa minim\",\n                \"value\": \"reprehenderit in\"\n            },\n            {\n                \"key\": \"incididunt ex\",\n                \"value\": \"ad voluptate culpa dolore\"\n            }\n        ]\n    },\n    \"from\": {\n        \"idType\": \"ACCOUNT_ID\",\n        \"idValue\": \"laborum\",\n        \"type\": \"CONSUMER\",\n        \"displayName\": \"incididunt\",\n        \"firstName\": \"des\",\n        \"middleName\": \"esse aute\",\n        \"lastName\": \"non sint\",\n        \"dateOfBirth\": \"2135-08-31\",\n        \"merchantClassificationCode\": \"431\",\n        \"extensionList\": [\n            {\n                \"key\": \"sint laboris voluptate dolore\",\n                \"value\": \"ut ullamco cupidatat\"\n            },\n            {\n                \"key\": \"ex enim amet \",\n                \"value\": \"ven\"\n            },\n            {\n                \"key\": \"ex fugiat quis\",\n                \"value\": \"nostrud\"\n            },\n            {\n                \"key\": \"quis ut nostrud aliqu\",\n                \"value\": \"voluptate cupidatat exercitation ipsum nulla\"\n            },\n            {\n                \"key\": \"aliquip sint in et\",\n                \"value\": \"id dolor dolor \"\n            },\n            {\n                \"key\": \"nostrud occaecat cillum ali\",\n                \"value\": \"labore commodo dolore\"\n            },\n            {\n                \"key\": \"qui nulla ea nostrud\",\n                \"value\": \"esse nulla Dui\"\n            },\n            {\n                \"key\": \"aliquip\",\n                \"value\": \"adipisicing nisi Ut\"\n            },\n            {\n                \"key\": \"consectetur fugiat velit\",\n                \"value\": \"magna reprehen\"\n            },\n            {\n                \"key\": \"nostrud in molli\",\n                \"value\": \"aliqua dolor dolor\"\n            },\n            {\n                \"key\": \"nostrud \",\n                \"value\": \"quis Excepteur enim in\"\n            },\n            {\n                \"key\": \"et eu irure \",\n                \"value\": \"elit Lorem cillum laborum \"\n            },\n            {\n                \"key\": \"elit veniam fugiat\",\n                \"value\": \"aliquip pariatur deserunt\"\n            },\n            {\n                \"key\": \"exercitation\",\n                \"value\": \"nisi mollit\"\n            },\n            {\n                \"key\": \"Lorem minim \",\n                \"value\": \"aute magna\"\n            },\n            {\n                \"key\": \"est la\",\n                \"value\": \"proident dolor ut cillum eu\"\n            }\n        ]\n    },\n    \"amountType\": \"SEND\",\n    \"amount\": \"0.56\",\n    \"currency\": \"MAD\",\n    \"transactionType\": \"TRANSFER\",\n    \"initiator\": \"PAYEE\",\n    \"initiatorType\": \"BUSINESS\",\n    \"feesAmount\": \"0.56\",\n    \"feesCurrency\": \"EUR\",\n    \"geoCode\": {\n        \"latitude\": \"90\",\n        \"longitude\": \"180.00\"\n    },\n    \"note\": \"fugiat officia esse\",\n    \"expiration\": \"9330-05-11T21:48:16.004-00:18\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/quoterequests",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"quoterequests"
									]
								},
								"description": "The HTTP request `POST /quoterequests` is sent to the Payee DFSP, and it is used to request the creation of a quote for the provided financial transaction."
							},
							"response": [
								{
									"name": "Malformed or missing required headers or parameters",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"quoteId\": \"24846a5c-5374-12e1-a71f-ca499f993fe3\",\n    \"transactionId\": \"e81dc7f0-6ba6-3d38-be1e-cd1d0959d5d0\",\n    \"to\": {\n        \"idType\": \"ACCOUNT_ID\",\n        \"idValue\": \"ut\",\n        \"type\": \"BUSINESS\",\n        \"displayName\": \"et dolore ullamco\",\n        \"firstName\": \"consequat incididunt\",\n        \"middleName\": \"nisi minim aute consequat officia\",\n        \"lastName\": \"laborum ut exercitation\",\n        \"dateOfBirth\": \"4400-02-29\",\n        \"merchantClassificationCode\": \"646\",\n        \"extensionList\": [\n            {\n                \"key\": \"mollit laboris min\",\n                \"value\": \"proident magna id voluptate tempor\"\n            },\n            {\n                \"key\": \"fugiat deserunt\",\n                \"value\": \"in aliquip\"\n            },\n            {\n                \"key\": \"elit\",\n                \"value\": \"ipsum cupidatat\"\n            },\n            {\n                \"key\": \"ex nostrud et\",\n                \"value\": \"esse\"\n            },\n            {\n                \"key\": \"ex proident magna Duis\",\n                \"value\": \"laborum magna\"\n            },\n            {\n                \"key\": \"velit\",\n                \"value\": \"tempor culpa\"\n            },\n            {\n                \"key\": \"fugiat Excepteur c\",\n                \"value\": \"minim aliqua nostrud Ut\"\n            },\n            {\n                \"key\": \"eiusmod adipisicing\",\n                \"value\": \"sed deserunt sit dolore et\"\n            },\n            {\n                \"key\": \"enim voluptate Duis \",\n                \"value\": \"in ut quis\"\n            },\n            {\n                \"key\": \"cillum\",\n                \"value\": \"aliquip labore\"\n            },\n            {\n                \"key\": \"anim culpa\",\n                \"value\": \"sit\"\n            },\n            {\n                \"key\": \"sit laboris \",\n                \"value\": \"tempor fugiat minim\"\n            },\n            {\n                \"key\": \"eiusmod magna veli\",\n                \"value\": \"in irure voluptate non\"\n            },\n            {\n                \"key\": \"aliqua non voluptate\",\n                \"value\": \"Excepteur proident \"\n            },\n            {\n                \"key\": \"culpa minim\",\n                \"value\": \"reprehenderit in\"\n            },\n            {\n                \"key\": \"incididunt ex\",\n                \"value\": \"ad voluptate culpa dolore\"\n            }\n        ]\n    },\n    \"from\": {\n        \"idType\": \"ACCOUNT_ID\",\n        \"idValue\": \"laborum\",\n        \"type\": \"CONSUMER\",\n        \"displayName\": \"incididunt\",\n        \"firstName\": \"des\",\n        \"middleName\": \"esse aute\",\n        \"lastName\": \"non sint\",\n        \"dateOfBirth\": \"2135-08-31\",\n        \"merchantClassificationCode\": \"431\",\n        \"extensionList\": [\n            {\n                \"key\": \"sint laboris voluptate dolore\",\n                \"value\": \"ut ullamco cupidatat\"\n            },\n            {\n                \"key\": \"ex enim amet \",\n                \"value\": \"ven\"\n            },\n            {\n                \"key\": \"ex fugiat quis\",\n                \"value\": \"nostrud\"\n            },\n            {\n                \"key\": \"quis ut nostrud aliqu\",\n                \"value\": \"voluptate cupidatat exercitation ipsum nulla\"\n            },\n            {\n                \"key\": \"aliquip sint in et\",\n                \"value\": \"id dolor dolor \"\n            },\n            {\n                \"key\": \"nostrud occaecat cillum ali\",\n                \"value\": \"labore commodo dolore\"\n            },\n            {\n                \"key\": \"qui nulla ea nostrud\",\n                \"value\": \"esse nulla Dui\"\n            },\n            {\n                \"key\": \"aliquip\",\n                \"value\": \"adipisicing nisi Ut\"\n            },\n            {\n                \"key\": \"consectetur fugiat velit\",\n                \"value\": \"magna reprehen\"\n            },\n            {\n                \"key\": \"nostrud in molli\",\n                \"value\": \"aliqua dolor dolor\"\n            },\n            {\n                \"key\": \"nostrud \",\n                \"value\": \"quis Excepteur enim in\"\n            },\n            {\n                \"key\": \"et eu irure \",\n                \"value\": \"elit Lorem cillum laborum \"\n            },\n            {\n                \"key\": \"elit veniam fugiat\",\n                \"value\": \"aliquip pariatur deserunt\"\n            },\n            {\n                \"key\": \"exercitation\",\n                \"value\": \"nisi mollit\"\n            },\n            {\n                \"key\": \"Lorem minim \",\n                \"value\": \"aute magna\"\n            },\n            {\n                \"key\": \"est la\",\n                \"value\": \"proident dolor ut cillum eu\"\n            }\n        ]\n    },\n    \"amountType\": \"SEND\",\n    \"amount\": \"0.56\",\n    \"currency\": \"MAD\",\n    \"transactionType\": \"TRANSFER\",\n    \"initiator\": \"PAYEE\",\n    \"initiatorType\": \"BUSINESS\",\n    \"feesAmount\": \"0.56\",\n    \"feesCurrency\": \"EUR\",\n    \"geoCode\": {\n        \"latitude\": \"90\",\n        \"longitude\": \"180.00\"\n    },\n    \"note\": \"fugiat officia esse\",\n    \"expiration\": \"9330-05-11T21:48:16.004-00:18\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/quoterequests",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"quoterequests"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"statusCode\": \"652\",\n \"message\": \"in\"\n}"
								},
								{
									"name": "A response to the transfer quotation request",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"quoteId\": \"24846a5c-5374-12e1-a71f-ca499f993fe3\",\n    \"transactionId\": \"e81dc7f0-6ba6-3d38-be1e-cd1d0959d5d0\",\n    \"to\": {\n        \"idType\": \"ACCOUNT_ID\",\n        \"idValue\": \"ut\",\n        \"type\": \"BUSINESS\",\n        \"displayName\": \"et dolore ullamco\",\n        \"firstName\": \"consequat incididunt\",\n        \"middleName\": \"nisi minim aute consequat officia\",\n        \"lastName\": \"laborum ut exercitation\",\n        \"dateOfBirth\": \"4400-02-29\",\n        \"merchantClassificationCode\": \"646\",\n        \"extensionList\": [\n            {\n                \"key\": \"mollit laboris min\",\n                \"value\": \"proident magna id voluptate tempor\"\n            },\n            {\n                \"key\": \"fugiat deserunt\",\n                \"value\": \"in aliquip\"\n            },\n            {\n                \"key\": \"elit\",\n                \"value\": \"ipsum cupidatat\"\n            },\n            {\n                \"key\": \"ex nostrud et\",\n                \"value\": \"esse\"\n            },\n            {\n                \"key\": \"ex proident magna Duis\",\n                \"value\": \"laborum magna\"\n            },\n            {\n                \"key\": \"velit\",\n                \"value\": \"tempor culpa\"\n            },\n            {\n                \"key\": \"fugiat Excepteur c\",\n                \"value\": \"minim aliqua nostrud Ut\"\n            },\n            {\n                \"key\": \"eiusmod adipisicing\",\n                \"value\": \"sed deserunt sit dolore et\"\n            },\n            {\n                \"key\": \"enim voluptate Duis \",\n                \"value\": \"in ut quis\"\n            },\n            {\n                \"key\": \"cillum\",\n                \"value\": \"aliquip labore\"\n            },\n            {\n                \"key\": \"anim culpa\",\n                \"value\": \"sit\"\n            },\n            {\n                \"key\": \"sit laboris \",\n                \"value\": \"tempor fugiat minim\"\n            },\n            {\n                \"key\": \"eiusmod magna veli\",\n                \"value\": \"in irure voluptate non\"\n            },\n            {\n                \"key\": \"aliqua non voluptate\",\n                \"value\": \"Excepteur proident \"\n            },\n            {\n                \"key\": \"culpa minim\",\n                \"value\": \"reprehenderit in\"\n            },\n            {\n                \"key\": \"incididunt ex\",\n                \"value\": \"ad voluptate culpa dolore\"\n            }\n        ]\n    },\n    \"from\": {\n        \"idType\": \"ACCOUNT_ID\",\n        \"idValue\": \"laborum\",\n        \"type\": \"CONSUMER\",\n        \"displayName\": \"incididunt\",\n        \"firstName\": \"des\",\n        \"middleName\": \"esse aute\",\n        \"lastName\": \"non sint\",\n        \"dateOfBirth\": \"2135-08-31\",\n        \"merchantClassificationCode\": \"431\",\n        \"extensionList\": [\n            {\n                \"key\": \"sint laboris voluptate dolore\",\n                \"value\": \"ut ullamco cupidatat\"\n            },\n            {\n                \"key\": \"ex enim amet \",\n                \"value\": \"ven\"\n            },\n            {\n                \"key\": \"ex fugiat quis\",\n                \"value\": \"nostrud\"\n            },\n            {\n                \"key\": \"quis ut nostrud aliqu\",\n                \"value\": \"voluptate cupidatat exercitation ipsum nulla\"\n            },\n            {\n                \"key\": \"aliquip sint in et\",\n                \"value\": \"id dolor dolor \"\n            },\n            {\n                \"key\": \"nostrud occaecat cillum ali\",\n                \"value\": \"labore commodo dolore\"\n            },\n            {\n                \"key\": \"qui nulla ea nostrud\",\n                \"value\": \"esse nulla Dui\"\n            },\n            {\n                \"key\": \"aliquip\",\n                \"value\": \"adipisicing nisi Ut\"\n            },\n            {\n                \"key\": \"consectetur fugiat velit\",\n                \"value\": \"magna reprehen\"\n            },\n            {\n                \"key\": \"nostrud in molli\",\n                \"value\": \"aliqua dolor dolor\"\n            },\n            {\n                \"key\": \"nostrud \",\n                \"value\": \"quis Excepteur enim in\"\n            },\n            {\n                \"key\": \"et eu irure \",\n                \"value\": \"elit Lorem cillum laborum \"\n            },\n            {\n                \"key\": \"elit veniam fugiat\",\n                \"value\": \"aliquip pariatur deserunt\"\n            },\n            {\n                \"key\": \"exercitation\",\n                \"value\": \"nisi mollit\"\n            },\n            {\n                \"key\": \"Lorem minim \",\n                \"value\": \"aute magna\"\n            },\n            {\n                \"key\": \"est la\",\n                \"value\": \"proident dolor ut cillum eu\"\n            }\n        ]\n    },\n    \"amountType\": \"SEND\",\n    \"amount\": \"0.56\",\n    \"currency\": \"MAD\",\n    \"transactionType\": \"TRANSFER\",\n    \"initiator\": \"PAYEE\",\n    \"initiatorType\": \"BUSINESS\",\n    \"feesAmount\": \"0.56\",\n    \"feesCurrency\": \"EUR\",\n    \"geoCode\": {\n        \"latitude\": \"90\",\n        \"longitude\": \"180.00\"\n    },\n    \"note\": \"fugiat officia esse\",\n    \"expiration\": \"9330-05-11T21:48:16.004-00:18\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/quoterequests",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"quoterequests"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"quoteId\": \"4e85f614-a62f-23e3-94f4-88bc6f89b62f\",\n \"transactionId\": \"3400ed65-650a-3a55-b16b-2deca881b872\",\n \"transferAmount\": \"2059368\",\n \"transferAmountCurrency\": \"ZWD\",\n \"payeeReceiveAmount\": \"0\",\n \"payeeReceiveAmountCurrency\": \"JPY\",\n \"payeeFspFeeAmount\": \"0.603\",\n \"payeeFspFeeAmountCurrency\": \"MAD\",\n \"payeeFspCommissionAmount\": \"966006098.2803\",\n \"payeeFspCommissionAmountCurrency\": \"VND\",\n \"expiration\": \"4429-05-29T05:56:14.150+09:44\",\n \"geoCode\": {\n  \"latitude\": \"8\",\n  \"longitude\": \"180.000000\"\n }\n}"
								},
								{
									"name": "An error occurred processing the request",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"quoteId\": \"24846a5c-5374-12e1-a71f-ca499f993fe3\",\n    \"transactionId\": \"e81dc7f0-6ba6-3d38-be1e-cd1d0959d5d0\",\n    \"to\": {\n        \"idType\": \"ACCOUNT_ID\",\n        \"idValue\": \"ut\",\n        \"type\": \"BUSINESS\",\n        \"displayName\": \"et dolore ullamco\",\n        \"firstName\": \"consequat incididunt\",\n        \"middleName\": \"nisi minim aute consequat officia\",\n        \"lastName\": \"laborum ut exercitation\",\n        \"dateOfBirth\": \"4400-02-29\",\n        \"merchantClassificationCode\": \"646\",\n        \"extensionList\": [\n            {\n                \"key\": \"mollit laboris min\",\n                \"value\": \"proident magna id voluptate tempor\"\n            },\n            {\n                \"key\": \"fugiat deserunt\",\n                \"value\": \"in aliquip\"\n            },\n            {\n                \"key\": \"elit\",\n                \"value\": \"ipsum cupidatat\"\n            },\n            {\n                \"key\": \"ex nostrud et\",\n                \"value\": \"esse\"\n            },\n            {\n                \"key\": \"ex proident magna Duis\",\n                \"value\": \"laborum magna\"\n            },\n            {\n                \"key\": \"velit\",\n                \"value\": \"tempor culpa\"\n            },\n            {\n                \"key\": \"fugiat Excepteur c\",\n                \"value\": \"minim aliqua nostrud Ut\"\n            },\n            {\n                \"key\": \"eiusmod adipisicing\",\n                \"value\": \"sed deserunt sit dolore et\"\n            },\n            {\n                \"key\": \"enim voluptate Duis \",\n                \"value\": \"in ut quis\"\n            },\n            {\n                \"key\": \"cillum\",\n                \"value\": \"aliquip labore\"\n            },\n            {\n                \"key\": \"anim culpa\",\n                \"value\": \"sit\"\n            },\n            {\n                \"key\": \"sit laboris \",\n                \"value\": \"tempor fugiat minim\"\n            },\n            {\n                \"key\": \"eiusmod magna veli\",\n                \"value\": \"in irure voluptate non\"\n            },\n            {\n                \"key\": \"aliqua non voluptate\",\n                \"value\": \"Excepteur proident \"\n            },\n            {\n                \"key\": \"culpa minim\",\n                \"value\": \"reprehenderit in\"\n            },\n            {\n                \"key\": \"incididunt ex\",\n                \"value\": \"ad voluptate culpa dolore\"\n            }\n        ]\n    },\n    \"from\": {\n        \"idType\": \"ACCOUNT_ID\",\n        \"idValue\": \"laborum\",\n        \"type\": \"CONSUMER\",\n        \"displayName\": \"incididunt\",\n        \"firstName\": \"des\",\n        \"middleName\": \"esse aute\",\n        \"lastName\": \"non sint\",\n        \"dateOfBirth\": \"2135-08-31\",\n        \"merchantClassificationCode\": \"431\",\n        \"extensionList\": [\n            {\n                \"key\": \"sint laboris voluptate dolore\",\n                \"value\": \"ut ullamco cupidatat\"\n            },\n            {\n                \"key\": \"ex enim amet \",\n                \"value\": \"ven\"\n            },\n            {\n                \"key\": \"ex fugiat quis\",\n                \"value\": \"nostrud\"\n            },\n            {\n                \"key\": \"quis ut nostrud aliqu\",\n                \"value\": \"voluptate cupidatat exercitation ipsum nulla\"\n            },\n            {\n                \"key\": \"aliquip sint in et\",\n                \"value\": \"id dolor dolor \"\n            },\n            {\n                \"key\": \"nostrud occaecat cillum ali\",\n                \"value\": \"labore commodo dolore\"\n            },\n            {\n                \"key\": \"qui nulla ea nostrud\",\n                \"value\": \"esse nulla Dui\"\n            },\n            {\n                \"key\": \"aliquip\",\n                \"value\": \"adipisicing nisi Ut\"\n            },\n            {\n                \"key\": \"consectetur fugiat velit\",\n                \"value\": \"magna reprehen\"\n            },\n            {\n                \"key\": \"nostrud in molli\",\n                \"value\": \"aliqua dolor dolor\"\n            },\n            {\n                \"key\": \"nostrud \",\n                \"value\": \"quis Excepteur enim in\"\n            },\n            {\n                \"key\": \"et eu irure \",\n                \"value\": \"elit Lorem cillum laborum \"\n            },\n            {\n                \"key\": \"elit veniam fugiat\",\n                \"value\": \"aliquip pariatur deserunt\"\n            },\n            {\n                \"key\": \"exercitation\",\n                \"value\": \"nisi mollit\"\n            },\n            {\n                \"key\": \"Lorem minim \",\n                \"value\": \"aute magna\"\n            },\n            {\n                \"key\": \"est la\",\n                \"value\": \"proident dolor ut cillum eu\"\n            }\n        ]\n    },\n    \"amountType\": \"SEND\",\n    \"amount\": \"0.56\",\n    \"currency\": \"MAD\",\n    \"transactionType\": \"TRANSFER\",\n    \"initiator\": \"PAYEE\",\n    \"initiatorType\": \"BUSINESS\",\n    \"feesAmount\": \"0.56\",\n    \"feesCurrency\": \"EUR\",\n    \"geoCode\": {\n        \"latitude\": \"90\",\n        \"longitude\": \"180.00\"\n    },\n    \"note\": \"fugiat officia esse\",\n    \"expiration\": \"9330-05-11T21:48:16.004-00:18\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/quoterequests",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"quoterequests"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"statusCode\": \"652\",\n \"message\": \"in\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "mojaloop-connector",
					"item": [
						{
							"name": "pm4ml-senderfsp-outbound-transfers",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var uuid = require('uuid');",
											"var generatedUUID = uuid.v4();",
											"pm.environment.set('quoteId', generatedUUID);",
											"pm.environment.set('transfer_ID', pm.environment.get('transactionId'));",
											"",
											"",
											"pm.variables.set('transferDate', (new Date()).toUTCString());",
											"",
											"pm.environment.set(\"transferExpiration\",new Date(new Date().getTime() + 600000))",
											"",
											"pm.variables.set('payerName', 'PayerFirst PayerLast');",
											"pm.variables.set('payerMSISDN', '918381008987');",
											"",
											"pm.variables.set('expectedPayeeFirstName', 'GoldenFirst');",
											"pm.variables.set('expectedPayeeLastName', 'GoldenLast');",
											"pm.variables.set('expectedPayeeDOB', '2010-10-10');",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Your test name\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.fulfil.body.transferState).to.eql(\"COMMITTED\");",
											"});",
											"// pm.test(`Payer name is ${pm.variables.get('payerName')}`, function () {",
											"//     var jsonData = pm.response.json();",
											"//     pm.expect(jsonData.scenario1.result.from.displayName).to.eql(pm.variables.get('payerName'));",
											"// });",
											"// pm.test(\"payer idType is MSISDN\", function () {",
											"//     var jsonData = pm.response.json();",
											"//     pm.expect(jsonData.scenario1.result.from.idType).to.eql(\"MSISDN\");",
											"// });",
											"// pm.test(\"payer idValue is 44123456789\", function () {",
											"//     var jsonData = pm.response.json();",
											"//     pm.expect(jsonData.scenario1.result.from.idValue).to.eql(pm.variables.get('payerMSISDN'));",
											"// });",
											"",
											"// pm.test(\"Payee idType is MSISDN\", function () {",
											"//     var jsonData = pm.response.json();",
											"//      pm.expect(jsonData.scenario1.result.to.idType).to.eql(\"MSISDN\");",
											"// });",
											"",
											"// pm.test(`Payee idValue is ${pm.variables.get('goldenpayeefspReceiverMSISDN')}`, function () {",
											"//     var jsonData = pm.response.json();",
											"//     pm.expect(jsonData.scenario1.result.to.idValue).to.eql(pm.variables.get('goldenpayeefspReceiverMSISDN'));",
											"// });",
											"",
											"// pm.test(\"payee fspId is goldenpayeefsp\", function () {",
											"//     var jsonData = pm.response.json();",
											"//     pm.expect(jsonData.scenario1.result.to.fspId).to.eql(\"goldenpayeefsp\");",
											"// });",
											"",
											"// pm.test(\"payee First name is GoldenFirst\", function () {",
											"//     var jsonData = pm.response.json();",
											"//     pm.expect(jsonData.scenario1.result.to.firstName).to.eql(\"GoldenFirst\");",
											"// });   ",
											"",
											"// pm.test(\"payee Last name is GoldenLast\", function () {",
											"//     var jsonData = pm.response.json();",
											"//     pm.expect(jsonData.scenario1.result.to.lastName).to.eql(\"GoldenLast\");",
											"// });",
											"",
											"// pm.test(\"payee DOB is 2010-10-10\", function () {",
											"//     var jsonData = pm.response.json();",
											"//     pm.expect(jsonData.scenario1.result.to.dateOfBirth).to.eql(\"2010-10-10\");",
											"// });",
											"",
											"// pm.test(\"amount type is SEND\", function () {",
											"//     var jsonData = pm.response.json();",
											"//     pm.expect(jsonData.scenario1.result.amountType).to.eql(\"SEND\");",
											"// });",
											"",
											"// pm.test(`Currency is ${pm.environment.get('currency')}`, function () {",
											"//     var jsonData = pm.response.json();",
											"//     pm.expect(jsonData.scenario1.result.currency).to.eql(pm.environment.get('currency'));",
											"// });",
											"",
											"// pm.test(\"Transfer Amount is 10\", function () {",
											"//     var jsonData = pm.response.json();",
											"//     pm.expect(jsonData.scenario1.result.amount).to.eql(\"10\");",
											"// });",
											"",
											"// pm.test(\"Transaction type is Transfer\", function () {",
											"//     var jsonData = pm.response.json();",
											"//     pm.expect(jsonData.scenario1.result.transactionType).to.eql(\"TRANSFER\");",
											"// });",
											"   ",
											"//    pm.test(\"Initiator type is CONSUMER\", function () {",
											"//     var jsonData = pm.response.json(); ",
											"//     pm.expect(jsonData.scenario1.result.initiatorType).to.eql(\"CONSUMER\");",
											"//  });  ",
											" ",
											"//  pm.test(\"Note is TESTPAYMENT\", function () {",
											"//     var jsonData = pm.response.json();",
											"//     pm.expect(jsonData.scenario1.result.note).to.eql(\"test payment\");",
											"// });",
											"",
											"// // pm.test(`quote Id is ${pm.environment.get('quoteId')} `, function () {",
											"// //     var jsonData = pm.response.json();",
											"    ",
											"// //     pm.expect(jsonData.scenario1.result.quoteResponse.quoteId).to.eql(pm.environment.get('quoteId'));",
											"// // });",
											"",
											"// pm.test(\"transferId is ${pm.environment.get('transferId')\", function () {",
											"//     var jsonData = pm.response.json();",
											"//      pm.expect(jsonData.scenario1.result.transferId).to.eql(jsonData.scenario2.result.transferId);",
											"// });",
											"",
											"// pm.test(\"Home transaction Id is 123ABC\", function () {",
											"//     var jsonData = pm.response.json();",
											"//     pm.expect(jsonData.scenario1.result.homeTransactionId).to.eql(\"123ABC\");",
											"// });",
											"    ",
											"// pm.test(\"Current state on quote is WAITING FOR QUOTE ACCEPTANCE\", function () {",
											"//     var jsonData = pm.response.json();",
											"//   pm.expect(jsonData.scenario1.result.currentState).to.eql(\"WAITING_FOR_QUOTE_ACCEPTANCE\");",
											"// });",
											"",
											"// pm.test(\"Transfer amount is ${pm.environment.get('amount')\", function () {",
											"//     var jsonData = pm.response.json();  ",
											"//   pm.expect(jsonData.scenario1.result.quoteResponse.transferAmount.amount).to.eql(\"10\");",
											"// });",
											"",
											"// pm.test(\"Currency is ${pm.environment.get('currency')\", function () {",
											"//     var jsonData = pm.response.json();  ",
											"//   pm.expect(jsonData.scenario1.result.quoteResponse.transferAmount.currency).to.eql(pm.environment.get('currency'));",
											"// });",
											"  ",
											"// pm.test(\"Quote response expiration is not null\", function () {",
											"// var jsonData = pm.response.json();",
											"// pm.expect(jsonData.scenario1.result.quoteResponse.expiration).not.eql(null);",
											"// });",
											"",
											"// pm.test(\"Qupte request ILP packet is not null\", function () {",
											"// var jsonData = pm.response.json();",
											"// pm.expect(jsonData.scenario1.result.quoteResponse.ilpPacket).not.eql(null);",
											"// });",
											"",
											"// pm.test(\"Quote response condition is not null\", function () {",
											"// var jsonData = pm.response.json();",
											"// pm.expect(jsonData.scenario1.result.quoteResponse.condition).not.eql(null);",
											"// });",
											"  ",
											"// pm.test(\"Payeefsp Fee amount is 0\", function () {",
											"// var jsonData = pm.response.json();",
											"// pm.expect(jsonData.scenario1.result.quoteResponse.payeeFspFee.amount).to.eql('0');",
											"// });",
											"",
											"// pm.test(\"PayeeFSP fee currency is \", function () {",
											"// var jsonData = pm.response.json();",
											"// pm.expect(jsonData.scenario1.result.quoteResponse.payeeFspFee.currency).to.eql(pm.environment.get('currency'));",
											"// });",
											"",
											"// pm.test(\" Payeefsp Commission amount is 0\", function () {",
											"// var jsonData = pm.response.json();",
											"// pm.expect(jsonData.scenario1.result.quoteResponse.payeeFspCommission.amount).to.eql(\"0\");",
											"// });",
											"",
											"// pm.test(`Currency is ${pm.environment.get('currency')}`, function () {",
											"// var jsonData = pm.response.json();",
											"// pm.expect(jsonData.scenario1.result.quoteResponse.payeeFspCommission.currency).to.eql(pm.environment.get('currency'));",
											"// });",
											"  ",
											"// // Scenario 2 tests",
											"",
											"// pm.test(\"payer fsp nameis:${pm.environment.get('payerName')\", function () {",
											"// var jsonData = pm.response.json();",
											"// pm.expect(jsonData.scenario2.result.from.displayName).to.eql(pm.variables.get('payerName'));",
											"// });",
											" ",
											"// pm.test(\"IdType is MSISDN\", function () {",
											"// var jsonData = pm.response.json();",
											"// pm.expect(jsonData.scenario2.result.from.idType).to.eql(\"MSISDN\");",
											"// });",
											"   ",
											"// pm.test(`Payer MSISDN is ${pm.environment.get('payerMSISDN')} `, function () {",
											"// var jsonData = pm.response.json(); ",
											"// pm.expect(jsonData.scenario2.result.from.idValue).to.eql(pm.variables.get('payerMSISDN'));",
											"// });",
											"",
											"// pm.test(\"IdType is MSISDN\", function () {",
											"// var jsonData = pm.response.json();",
											"// pm.expect(jsonData.scenario2.result.to.idType).to.eql(\"MSISDN\");",
											"// });",
											"",
											"// pm.test(`goldenpayeefspReceiverMSISDN Value is ${pm.environment.get('goldenpayeefspReceiverMSISDN')}`, function () {",
											"// var jsonData = pm.response.json();",
											"// pm.expect(jsonData.scenario2.result.to.idValue).to.eql(pm.variables.get('goldenpayeefspReceiverMSISDN'));",
											"// });",
											"",
											"// pm.test(\"fspId is goldenpayeefsp\", function () {",
											"// var jsonData = pm.response.json();",
											"// pm.expect(jsonData.scenario2.result.to.fspId).to.eql(\"goldenpayeefsp\");",
											"// });",
											"",
											"// pm.test(\"First name of the party is GoldenFirst\", function () {",
											"// var jsonData = pm.response.json();",
											"// pm.expect(jsonData.scenario2.result.to.firstName).to.eql(\"GoldenFirst\");",
											"// });",
											"",
											"// pm.test(\"First name of the party is GoldenLast \", function () {",
											"// var jsonData = pm.response.json();",
											"// pm.expect(jsonData.scenario2.result.to.lastName).to.eql(\"GoldenLast\");",
											"// });",
											"",
											"// pm.test(\"Date of Birth of the MSISDN is 2010-10-10 \", function () {",
											"// var jsonData = pm.response.json();",
											"// pm.expect(jsonData.scenario2.result.to.dateOfBirth).to.eql(\"2010-10-10\");",
											"// });",
											"",
											"// pm.test(\"Amount-Type in Quote request is SEND\", function () {",
											"// var jsonData = pm.response.json();",
											"// pm.expect(jsonData.scenario2.result.amountType).to.eql(\"SEND\");",
											"// })",
											"",
											"// pm.test(` Currency in quotes is ${pm.environment.get('currency')}`, function () {",
											"// var jsonData = pm.response.json();",
											"// pm.expect(jsonData.scenario2.result.currency).to.eql(pm.environment.get('currency'));",
											"// });",
											"    ",
											"// pm.test(\" Transfer amount is 10\", function () {",
											"// var jsonData = pm.response.json();",
											"// pm.expect(jsonData.scenario2.result.amount).to.eql(\"10\");",
											"// });",
											"   ",
											"// pm.test(\" Transaction Type is TRANSFER\", function () {",
											"// var jsonData = pm.response.json(); ",
											"// pm.expect(jsonData.scenario2.result.transactionType).to.eql(\"TRANSFER\");",
											"// });",
											"   ",
											"// pm.test(\"Initiator type is CONSUMER\", function () {",
											"// var jsonData = pm.response.json(); ",
											"// pm.expect(jsonData.scenario2.result.initiatorType).to.eql(\"CONSUMER\");",
											"// });",
											"   ",
											"// pm.test(\"note is test payment\", function () {",
											"// var jsonData = pm.response.json(); ",
											"// pm.expect(jsonData.scenario2.result.note).to.eql(\"test payment\");",
											"// });",
											"   ",
											"// pm.test(\"HomeTransactionId is 123ABC\", function () {",
											"// var jsonData = pm.response.json(); ",
											"// pm.expect(jsonData.scenario2.result.homeTransactionId).to.eql(\"123ABC\");",
											"// });",
											"    ",
											"// pm.test(\"Current state of the transacfer is COMPLETED\", function () {",
											"// var jsonData = pm.response.json();",
											"// pm.expect(jsonData.scenario2.result.currentState).to.eql(\"COMPLETED\");",
											"// });",
											"  ",
											"// pm.test(\"Transfer Amount is 10\", function () {",
											"// var jsonData = pm.response.json();",
											"// pm.expect(jsonData.scenario2.result.quoteResponse.transferAmount.amount).to.eql(\"10\");",
											"// });",
											"",
											"// pm.test(\"Response validation\", function () {",
											"// var jsonData = pm.response.json();",
											"// pm.expect(jsonData.scenario2.result.quoteResponse.transferAmount.currency).to.eql(pm.environment.get('currency'));",
											"// });",
											"",
											"// pm.test(\"Quote Expiration is not Null\", function () {",
											"// var jsonData = pm.response.json();",
											"// pm.expect(jsonData.scenario2.result.quoteResponse.expiration).not.eql(null);",
											"// });",
											"",
											"// pm.test(\"Response ilpPacket is not null\", function () {",
											"// var jsonData = pm.response.json();",
											"// pm.expect(jsonData.scenario2.result.quoteResponse.ilpPacket).not.eql(null);",
											"// });",
											"",
											"// pm.test(\"Response condition is not null\", function () {",
											"// var jsonData = pm.response.json();",
											"// pm.expect(jsonData.scenario2.result.quoteResponse.condition).not.eql(null);",
											"// });",
											"",
											"// pm.test(\"PayeeFspFee is 0\", function () {",
											"// var jsonData = pm.response.json();",
											"// pm.expect(jsonData.scenario2.result.quoteResponse.payeeFspFee.amount).to.eql(\"0\");",
											"// });",
											"",
											"// pm.test(`Payeefsp fee currency is ${pm.environment.get('currency')}` , function () {",
											"// var jsonData = pm.response.json();",
											"// pm.expect(jsonData.scenario2.result.quoteResponse.payeeFspFee.currency).to.eql(pm.environment.get('currency'));",
											"// });",
											"",
											"// pm.test(\"Payeefsp commission is 0\", function () {",
											"// var jsonData = pm.response.json();",
											"// pm.expect(jsonData.scenario2.result.quoteResponse.payeeFspCommission.amount).to.eql(\"0\");",
											"// });",
											"",
											"// pm.test(` Transfer currency is ${pm.environment.get('currency')}`, function () {",
											"// var jsonData = pm.response.json();",
											"// pm.expect(jsonData.scenario2.result.quoteResponse.payeeFspCommission.currency).to.eql(pm.environment.get('currency'));",
											"// });",
											"",
											"// pm.test(\"CompletedTimestamp is not empty\", function () {",
											"// var jsonData = pm.response.json();",
											"// pm.expect(jsonData.scenario2.result.fulfil.completedTimestamp).not.eql(null);",
											"// });",
											"",
											"// pm.test(\" transferState is COMMITTED\", function () {",
											"// var jsonData = pm.response.json();",
											"// pm.expect(jsonData.scenario2.result.fulfil.transferState).to.eql(\"COMMITTED\");",
											"// });",
											"",
											"// pm.test(\" Fulfilment is not empty\", function () {",
											"// var jsonData = pm.response.json();",
											"// pm.expect(jsonData.scenario2.result.fulfil.fulfilment).not.eql(null);",
											"",
											"// });",
											"  ",
											"//   //Check Headers for parties endpoint on payee side",
											"//   setTimeout(function () {",
											"//   pm.sendRequest(pm.environment.get(\"GOLDENPAYEEFSP_SDK_INBOUND_URL\")+\"/requests/\"+pm.variables.get(\"goldenpayeefspReceiverMSISDN\"), function (err, response) {",
											"       ",
											"//       if(response.responseSize !== 0) { ",
											"//       //Checking headers",
											"//         var headers = response.json().headers;",
											"//         pm.test(\"On goldenpayeefsp fspiop-source is goldenpayerfsp\", function () {",
											"//             pm.expect(headers['fspiop-source']).to.eql('goldenpayerfsp');",
											"//         });",
											"        ",
											"//         // pm.test(\"goldenpayeefsp fspiop-destination is goldenpayeefsp\", function () {",
											"//         //     pm.expect(headers['fspiop-destination']).to.eql('goldenpayeefsp');",
											"//         // });",
											"        ",
											"//         pm.test(\"On goldenpayeefsp content-type should be application/vnd.interoperability.parties+json;version=1.0\", function () {",
											"//             pm.expect(headers['content-type']).to.eql('application/vnd.interoperability.parties+json;version=1.0');",
											"//         });",
											"        ",
											"//         pm.test(\"On goldenpayeefsp accept should be application/vnd.interoperability.parties+json;version=1.0\", function () {",
											"//             pm.expect(headers['accept']).to.eql('application/vnd.interoperability.parties+json;version=1.0');",
											"//         });",
											"        ",
											"//         pm.test(\"On goldenpayeefsp date cannot be null\", function () {",
											"//             pm.expect(headers['date']).to.not.eql(undefined);",
											"//         });",
											"        ",
											"//       } else {",
											"//           pm.test(\"Parties FAILED - payeeFSP\", function () {",
											"//             throw new Error('Did not receive response');",
											"//           });",
											"           ",
											"//       }",
											"      ",
											"//     });",
											"// }, 100)",
											"",
											"// //Check Headers and data for parties endpoint on payer side",
											"// setTimeout(function () {",
											"//   pm.sendRequest(pm.environment.get(\"GOLDENPAYERFSP_SDK_INBOUND_URL\")+\"/callbacks/\"+pm.variables.get(\"goldenpayeefspReceiverMSISDN\"), function (err, response) {",
											"       ",
											"//       if(response.responseSize !== 0) { ",
											"//       //Checking headers",
											"//         var headers = response.json().headers;",
											"//         pm.test(\"On payerfsp fspiop-source is goldenpayeefsp\", function () {",
											"//             pm.expect(headers['fspiop-source']).to.eql('goldenpayeefsp');",
											"//         });",
											"        ",
											"//         pm.test(\"On payerfsp fspiop-destination is goldenpayerfsp\", function () {",
											"//             pm.expect(headers['fspiop-destination']).to.eql('goldenpayerfsp');",
											"//         });",
											"        ",
											"//         pm.test(\"On payerfsp content-type should be application/vnd.interoperability.parties+json;version=1.0\", function () {",
											"//             pm.expect(headers['content-type']).to.eql('application/vnd.interoperability.parties+json;version=1.0');",
											"//         });",
											"        ",
											"//         pm.test(\"payerfsp accept is empty\", function () {",
											"//             pm.expect(headers['accept']).to.eql(undefined);",
											"//         });",
											"        ",
											"//         //Validate protected header inside Signature",
											"//         var {signature,protectedHeader} = JSON.parse(headers['fspiop-signature'])",
											"//         var decodedProtectedHeaders = JSON.parse(atob(protectedHeader))",
											"//         console.log('decodedProtectedHeaders:',decodedProtectedHeaders)",
											"        ",
											"//         // pm.test(\"FSPIOP-Signature signature is returned\", function () {",
											"//         //     pm.expect(signature).to.eql(pm.environment.get(\"payeefsp-signature\"));",
											"//         // });",
											"        ",
											"//         pm.test(\"FSPIOP-Signature Protected Header alg to be RS256\", function () {",
											"//             pm.expect(decodedProtectedHeaders['alg']).to.eql('RS256');",
											"//         });",
											"//         pm.test(\"FSPIOP-Signature Protected Header FSPIOP-URI to be /parties/MSISDN/\"+pm.environment.get(\"goldenpayeefspReceiverMSISDN\"), function () {",
											"//             pm.expect(decodedProtectedHeaders['FSPIOP-URI']).to.eql('/parties/MSISDN/'+pm.environment.get(\"goldenpayeefspReceiverMSISDN\"));",
											"//         });",
											"        ",
											"",
											"//         pm.test(\"FSPIOP-Signature Protected Header FSPIOP-HTTP-Method to be PUT\", function () {",
											"//             pm.expect(decodedProtectedHeaders['FSPIOP-HTTP-Method']).to.eql('PUT');",
											"//         });",
											"//         pm.test(\"FSPIOP-Signature Protected Header FSPIOP-Source to be goldenpayeefsp\", function () {",
											"//             pm.expect(decodedProtectedHeaders['FSPIOP-Source']).to.eql('goldenpayeefsp');",
											"//         });",
											"//         pm.test(\"FSPIOP-Signature Protected Header FSPIOP-Destination to be goldenpayerfsp\", function () {",
											"//             pm.expect(decodedProtectedHeaders['FSPIOP-Destination']).to.eql('goldenpayerfsp');",
											"//         });",
											"//         pm.test(\"FSPIOP-Signature Protected Header Date is present\", function () {",
											"//             pm.expect(decodedProtectedHeaders['Date']).to.not.eql(undefined);",
											"//         });",
											"       ",
											"//         pm.test(\"payerfsp FSPIOP-URI to be /parties/MSISDN/\"+pm.environment.get(\"goldenpayeefspReceiverMSISDN\"), function () {",
											"//             pm.expect(headers['fspiop-uri']).to.eql('/parties/MSISDN/'+pm.environment.get(\"goldenpayeefspReceiverMSISDN\"));",
											"//         });",
											"        ",
											"//         pm.test(\"payerfsp fspiop-http-method is PUT\", function () {",
											"//             pm.expect(headers['fspiop-http-method']).to.eql('PUT');",
											"//         });",
											"        ",
											"//       //Checking data",
											"//       var jsonData = response.json().data;",
											"//         pm.test(\"Expected partyIdType is MSISDN\", function () {",
											"//           pm.expect(jsonData.party.partyIdInfo.partyIdType).to.eql('MSISDN');",
											"//         });",
											"//         pm.test(\"Expected partyIdentifier is \"+pm.environment.get('goldenpayeefspReceiverMSISDN'), function () {",
											"//           pm.expect(jsonData.party.partyIdInfo.partyIdentifier).to.eql(pm.environment.get('goldenpayeefspReceiverMSISDN'));",
											"//         });",
											"//         pm.test(\"Expected fspId is goldenpayeefsp\", function () {",
											"//           pm.expect(jsonData.party.partyIdInfo.fspId).to.eql('goldenpayeefsp');",
											"//         });",
											"        ",
											"//       pm.test(\"Expected receiver first name is: \"+pm.variables.get(\"expectedPayeeFirstName\"), function () {",
											"//           pm.expect(jsonData.party.personalInfo.complexName.firstName).to.eql(pm.variables.get(\"expectedPayeeFirstName\"));",
											"//         });",
											"//         pm.test(\"Expected receiver last name is: \"+pm.variables.get(\"expectedPayeeLastName\"), function () {",
											"//           pm.expect(jsonData.party.personalInfo.complexName.lastName).to.eql(pm.variables.get(\"expectedPayeeLastName\"));",
											"//         });",
											"//         pm.test(\"Expected receiver DOB: \"+pm.variables.get(\"expectedPayeeDOB\"), function () {",
											"//           pm.expect(jsonData.party.personalInfo.dateOfBirth).to.eql(pm.variables.get(\"expectedPayeeDOB\"));",
											"//         });  ",
											"        ",
											"//       } else {",
											"//           pm.test(\"Parties FAILED - payerFSP\", function () {",
											"//             throw new Error('Did not receive response');",
											"//           });",
											"//         }",
											"//     });",
											"// }, 100)",
											"",
											"// var transferID = pm.response.json().scenario1.result.transferId",
											"// //Check the request that Switch forwards to payeefsp",
											"// setTimeout(function () {",
											"//   pm.sendRequest(pm.environment.get(\"GOLDENPAYEEFSP_SDK_INBOUND_URL\")+\"/requests/\"+transferID, function (err, response) {",
											"//           if(response.responseSize !== 0) {",
											"              ",
											"//               //Check the Headers",
											"//               var headers = response.json().headers;",
											"              ",
											"//                 pm.test(\"On payeefsp fspiop-source is payerfsp\", function () {",
											"//                     pm.expect(headers['fspiop-source']).to.eql('goldenpayerfsp');",
											"//                 });",
											"                ",
											"//                 pm.test(\"On payeefsp fspiop-destination is payeefsp\", function () {",
											"//                     pm.expect(headers['fspiop-destination']).to.eql('goldenpayeefsp');",
											"//                 });",
											"                ",
											"//                 pm.test(\"On payeefsp content-typeis same as sent in the request\", function () {",
											"//                     pm.expect(headers['content-type']).to.eql('application/vnd.interoperability.transfers+json;version=1.0');",
											"//                 });",
											"                ",
											"//                 pm.test(\"On payeefsp accept is same as sent in the request\", function () {",
											"//                     pm.expect(headers['accept']).to.eql('application/vnd.interoperability.transfers+json;version=1.0');",
											"//                 });",
											"                ",
											"//                 pm.test(\"On payeefsp fspiop-http-method is POST\", function () {",
											"//                     pm.expect(headers['fspiop-http-method']).to.eql('POST');",
											"//                 });",
											"                ",
											"//                 pm.test(\"On payeefsp fspiop-uri is /transfers\", function () {",
											"//                     pm.expect(headers['fspiop-uri']).to.eql('/transfers');",
											"//                 });",
											"                ",
											"                ",
											"//                 //Check the data",
											"//                 var jsonData = response.json().data;",
											"//                 pm.test(\"On payeefsp data should have the same transferId as request\", function () {",
											"//                   pm.expect(jsonData.transferId).to.eql(transferID);",
											"//                 });",
											"//                 pm.test(\"On payeefsp data should have the same payerfspId as request\", function () {",
											"//                   pm.expect(jsonData.payerFsp).to.eql('goldenpayerfsp');",
											"//                 });",
											"//                 pm.test(\"On payeefsp data should have the same payeefspId as request\", function () {",
											"//                   pm.expect(jsonData.payeeFsp).to.eql('goldenpayeefsp');",
											"//                 });",
											"//                 pm.test(\"On payeefsp data should have the same amount as request\", function () {",
											"//                   pm.expect(jsonData.amount.amount).to.eql('10');",
											"//                 });",
											"//                 pm.test(\"payeefsp data should have the same currency as request\", function () {",
											"//                   pm.expect(jsonData.amount.currency).to.eql(pm.environment.get(\"currency\"));",
											"//                 });",
											"//                 // pm.test(\"payeefsp data should have the same expiration as request\", function () {",
											"//                 //   pm.expect(jsonData.expiration).to.eql(pm.environment.get(\"transferExpiration\"));",
											"//                 // });",
											"//                 // pm.test(\"payeefsp data should have the same ilpPacket as request\", function () {",
											"//                 //   pm.expect(jsonData.ilpPacket).to.eql(pm.environment.get(\"ilpPacket\"));",
											"//                 // });",
											"//                 // pm.test(\"payeefsp data should have the same condition as request\", function () {",
											"//                 //   pm.expect(jsonData.condition).to.eql(pm.environment.get(\"condition\"));",
											"//                 // });",
											"                ",
											"//           } else {",
											"//               pm.test(\"Transfer FAILED\", function () {",
											"//                 throw new Error('Did not receive response');",
											"//               });",
											"",
											"//           }",
											"//   });",
											"// }, 100)",
											"",
											"// //Check the callback response that Switch forwards to payerfsp",
											"// setTimeout(function () {",
											"//   pm.sendRequest(pm.environment.get(\"GOLDENPAYERFSP_SDK_INBOUND_URL\")+\"/callbacks/\"+transferID, function (err, response) {",
											"//           if(response.responseSize !== 0) {",
											"//             //Checking headers",
											"//             var headers = response.json().headers;",
											"//             pm.test(\"On payerfsp fspiop-source is payeefsp\", function () {",
											"//                 pm.expect(headers['fspiop-source']).to.eql('goldenpayeefsp');",
											"//             });",
											"            ",
											"//             pm.test(\"On payerfsp fspiop-destination is payerfsp\", function () {",
											"//                 pm.expect(headers['fspiop-destination']).to.eql('goldenpayerfsp');",
											"//             });",
											"            ",
											"//             pm.test(\"On payerfsp content-type should be application/vnd.interoperability.transfers+json;version=1.0\", function () {",
											"//                 pm.expect(headers['content-type']).to.eql('application/vnd.interoperability.transfers+json;version=1.0');",
											"//             });",
											"            ",
											"//             pm.test(\"payerfsp accept is empty\", function () {",
											"//                 pm.expect(headers['accept']).to.eql(undefined);",
											"//             });",
											"            ",
											"//             // pm.test(\"fspiop-signature is returned\", function () {",
											"//             //     pm.expect(headers['fspiop-signature']).to.eql(pm.environment.get(\"payeefsp_fspiop_signature\"));",
											"//             // });",
											"           ",
											"            ",
											"//             pm.test(\"payerfsp fspiop-uri includes transfers\", function () {",
											"//                 pm.expect(headers['fspiop-uri']).to.include('/transfers');",
											"//             });",
											"            ",
											"//             pm.test(\"payerfsp fspiop-http-method is PUT\", function () {",
											"//                 pm.expect(headers['fspiop-http-method']).to.eql('PUT');",
											"//             });",
											"            ",
											"//             var jsonData = response.json().data;",
											"//             pm.test(\"Response data does not have transferId\", function () {",
											"//               pm.expect(jsonData.transferId).to.eql(undefined);",
											"//             });",
											"//             pm.test(\"Response status is COMMITTED\", function () {",
											"//                 pm.expect(jsonData.transferState).to.eql('COMMITTED');",
											"//             });",
											"//           } else {",
											"//               pm.test(\"Transfer FAILED\", function () {",
											"//                 throw new Error('Did not receive response');",
											"//               });",
											"",
											"//           }",
											"//   });",
											"// }, 100)",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/vnd.interoperability.transfers+json;version=1",
										"disabled": true
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/vnd.interoperability.transfers+json;version=1.0",
										"disabled": true
									},
									{
										"key": "Date",
										"type": "text",
										"value": "{{transferDate}}",
										"disabled": true
									},
									{
										"key": "FSPIOP-Source",
										"type": "text",
										"value": "{{payerfsp}}",
										"disabled": true
									},
									{
										"key": "FSPIOP-Destination",
										"type": "text",
										"value": "{{payeefsp}}",
										"disabled": true
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"from\": {\n        \"displayName\": \"PayerFirst PayerLast\",\n        \"idType\": \"MSISDN\",\n        \"idValue\": \"{{DFSP1_MSISDN}}\"\n    },\n    \"to\": {\n        \"idType\": \"MSISDN\",\n        \"idValue\": \"{{DFSP2_MSISDN}}\"\n    },\n    \"amountType\": \"SEND\",\n    \"currency\": \"{{currency}}\",\n    \"amount\": \"10\",\n    \"transactionType\": \"TRANSFER\",\n    \"initiatorType\": \"CONSUMER\",\n    \"note\": \"test payment\",\n    \"homeTransactionId\": \"{{$guid}}\"\n}"
								},
								"url": {
									"raw": "{{DFSP1_ML_CONN_OUTBOUND_URL}}/transfers",
									"host": [
										"{{DFSP1_ML_CONN_OUTBOUND_URL}}"
									],
									"path": [
										"transfers"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					"pm.environment.unset('quoteId');",
					"pm.environment.unset('transferExpiration');",
					"pm.environment.unset('transfer_ID');"
				]
			}
		}
	],
	"variable": [
		{
			"key": "EXPERIENCE_API_ENDPOINT",
			"value": "/"
		}
	]
}